cscope 15 D:\Work\project_svn\2024\TECH_HARRY\Program\Source"               0000258428
	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\api\api_adc.c

7 
	~"hw.h
"

8 
	~"≠i_adc.h
"

10 
	~"hÆ_adc.h
"

12 
	~"Àvñ_ñe˘rode.h
"

22 
	#POWER_TURN_ON_DELAY
 (1000UL)

23 
	#POWER_TURN_ON_DELAY_10MS
 (10UL)

24 
	#POWER_TURN_ON_DELAY_1MS
 (1UL)

25 

	)

32 
	$E«bÀTempCﬁd
()

35 
	}
}

43 
	$DißbÀTempCﬁd
()

46 
	}
}

54 
	$E«bÀTempRoom
()

57 
	}
}

65 
	$DißbÀTempRoom
()

68 
	}
}

76 
	$E«bÀLókSís‹
()

79 
	}
}

87 
	$DißbÀLókSís‹
()

90 
	}
}

92 
	s_adc_d©a_


94 
U16
 
	mmUsum
;

95 
U8
 
	mmUsumCou¡
;

97 
U16
 
	mmUavîage
;

99 
U16
 
	mmUmö
;

100 
U16
 
	mmUmax
;

101 } 
	tSAdcD©a_T
;

103 
SAdcD©a_T
 
	ggStAºAdcD©a
[
ADC_ID_MAX
];

105 (*
	tPFC⁄åﬁ_T
)();

106 
	s_adc_c⁄fig_


108 
U8
 
mUid
;

109 
U8
 
mUch™√l
;

110 
U8
 
mUsumCou¡
;

112 
U16
 
mUmö
;

113 
U16
 
mUmax
;

115 
U8
 
mU⁄Off
;

116 
U16
 
mUtu∫OnDñay
;

117 
U16
 
mUtu∫OnDñaySë
;

118 
PFC⁄åﬁ_T
 
mPåFunE«bÀ
;

119 
PFC⁄åﬁ_T
 
mPåFunDißbÀ
;

120 } 
	tSAdcC⁄fig_T
;

122 
SAdcC⁄fig_T
 
gStAºAdcC⁄figLi°
[] =

125 {
ADC_ID_TEMP_HOT_WATER_FB
, 0, 52U, 1024U, 0U, 
ON
, 0U, 0U, 
NULL
, NULL },

126 {
ADC_ID_TEMP_COLD_WATER_FB
, 1, 52U, 1024U, 0U, 
ON
, 
POWER_TURN_ON_DELAY
, POWER_TURN_ON_DELAY, 
E«bÀTempCﬁd
, 
DißbÀTempCﬁd
 },

127 {
ADC_ID_LEVEL_HOT_TANK_FB
, 2, 52U, 1024U, 0U, 
ON
, 
POWER_TURN_ON_DELAY_10MS
, POWER_TURN_ON_DELAY_10MS, 
E«lbeLevñEÀc
, 
DißbÀLevñEÀc
 },

128 
	}
};

130 
	#SZ_ADC_CONF_LIST
 ((
gStAºAdcC⁄figLi°
)/(
SAdcC⁄fig_T
))

	)

138 
	$InôAdc
()

140 
U8
 
uIndex
;

141 
U8
 
uCh™√l
;

144  
uIndex
 = 0; uIndex < 
SZ_ADC_CONF_LIST
 ; uIndex++ )

146 if–
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mPåFunE«bÀ
 !
NULL
 )

148 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
	`mPåFunE«bÀ
();

151 
uCh™√l
 = 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mUch™√l
;

152 
gStAºAdcD©a
[ 
uIndex
 ].
mUavîage
 = 
	`HÆSam∂eAdc
–
uCh™√l
 );

157 
	}
}

166 
	$SëAdcD©a
(
U8
 
xUid
, 
U16
 
xUadc
 )

168 if–
xUid
 < 
ADC_ID_MAX
 )

170 
gStAºAdcD©a
[ 
xUid
 ].
mUavîage
 = 
xUadc
;

172 
	}
}

180 
U16
 
	$GëAdcD©a
–
U8
 
xUid
 )

182 if–
xUid
 >
ADC_ID_MAX
 )

187  
gStAºAdcD©a
[ 
xUid
 ].
mUavîage
;

188 
	}
}

197 
U8
 
	$GëIndexC⁄fLi°
(
U8
 
xUid
, U8 *
xU±rIndex
)

199 
U8
 
uIndex
;

201  
uIndex
 = 0; uIndex < 
SZ_ADC_CONF_LIST
 ; uIndex++ )

203 if–
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mUid
 =
xUid
 )

205 *
xU±rIndex
 = 
uIndex
;

206  
TRUE
;

210  
FALSE
;

211 
	}
}

219 
	$Tu∫OnSísögAdc
(
U8
 
xUid
 )

221 
U8
 
uIndex
 = 0U;

223 if–
	`GëIndexC⁄fLi°
–
xUid
, &
uIndex
Ë=
TRUE
 )

225 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mU⁄Off
 = 
ON
;

228 
	}
}

236 
	$Tu∫OffSísögAdc
–
U8
 
xUid
 )

238 
U8
 
uIndex
 = 0U;

240 if–
	`GëIndexC⁄fLi°
–
xUid
, &
uIndex
Ë=
TRUE
 )

242 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mU⁄Off
 = 
OFF
;

244 
	}
}

246 
I8
 
	$IsOnOffSísögAdc
–
U8
 
xUid
 )

248 
U8
 
uIndex
 = 0U;

249 
I8
 
⁄Off
 = -1;

251 if–
	`GëIndexC⁄fLi°
–
xUid
, &
uIndex
Ë=
TRUE
 )

253 
⁄Off
 = 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mU⁄Off
;

256  
⁄Off
;

257 
	}
}

265 
	$InôAdcD©a
–
U8
 
xUid
 )

267 
U8
 
uIndex
;

270 if–
	`GëIndexC⁄fLi°
–
xUid
, &
uIndex
Ë=
TRUE
 )

272 
gStAºAdcD©a
[ 
xUid
 ].
mUsum
 = 0;

273 
gStAºAdcD©a
[ 
xUid
 ].
mUsumCou¡
 = 0;

274 
gStAºAdcD©a
[ 
xUid
 ].
mUmö
 = 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].mUmin;

275 
gStAºAdcD©a
[ 
xUid
 ].
mUmax
 = 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].mUmax;

277 
	}
}

285 
	$SumAdc
( )

287 
U8
 
uIndex
;

288 
U8
 
uId
;

289 
U8
 
uCh™√l
;

290 
U8
 
uSumCou¡
;

291 
U16
 
uD©a
;

293  
uIndex
 = 0; uIndex < 
SZ_ADC_CONF_LIST
 ; uIndex++ )

295 
uId
 = 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mUid
;

296 #i‡!
CONFIG_TEST_TEMP_READ


297 if–
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mU⁄Off
 =
OFF
 )

300 if–
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mPåFunDißbÀ
 !
NULL
 )

303 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
	`mPåFunDißbÀ
();

304 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mUtu∫OnDñay
 = gStAºAdcC⁄figLi°[ uIndex ].
mUtu∫OnDñaySë
;

307 
	`InôAdcD©a
–
uId
 );

313 if–
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mPåFunE«bÀ
 !
NULL
 )

315 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
	`mPåFunE«bÀ
();

317 #i‡!
CONFIG_TEST_TEMP_READ


319 if–
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mUtu∫OnDñay
 != 0 )

321 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mUtu∫OnDñay
--;

327 
uSumCou¡
 = 
gStAºAdcD©a
[ 
uId
 ].
mUsumCou¡
;

328 if–
uSumCou¡
 < 
gStAºAdcC⁄figLi°
 [ 
uIndex
 ].
mUsumCou¡
 )

330 
uCh™√l
 = 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mUch™√l
;

331 
uD©a
 = 
	`HÆSam∂eAdc
–
uCh™√l
 );

333 
gStAºAdcD©a
[ 
uId
 ].
mUsum
 +
uD©a
;

334 
gStAºAdcD©a
[ 
uId
 ].
mUsumCou¡
++;

337 if–
uD©a
 < 
gStAºAdcD©a
[ 
uId
 ].
mUmö
 )

339 
gStAºAdcD©a
[ 
uId
 ].
mUmö
 = 
uD©a
;

342 if–
uD©a
 > 
gStAºAdcD©a
[ 
uId
 ].
mUmax
 )

344 
gStAºAdcD©a
[ 
uId
 ].
mUmax
 = 
uD©a
;

349 
	}
}

357 
	$AvîageAdc
( )

359 
U8
 
uIndex
;

360 
U8
 
uId
;

361 
U8
 
uSumCou¡
;

362 
SAdcD©a_T
 *
°PåAdcD©a
 = 
NULL
;

365  
uIndex
 = 0; uIndex < 
SZ_ADC_CONF_LIST
 ; uIndex++ )

367 
uId
 = 
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mUid
;

368 
°PåAdcD©a
 = &
gStAºAdcD©a
[ 
uId
 ];

370 
uSumCou¡
 = 
°PåAdcD©a
->
mUsumCou¡
;

371 if–
gStAºAdcC⁄figLi°
[ 
uIndex
 ].
mUsumCou¡
 =
uSumCou¡
 )

373 
°PåAdcD©a
->
mUsum
 -(°PåAdcD©a->
mUmö
 + stPåAdcD©a->
mUmax
);

374 
°PåAdcD©a
->
mUavîage
 = stPåAdcD©a->
mUsum
 / (
uSumCou¡
 - 2);

376 
	`InôAdcD©a
–
uId
 );

379 
	}
}

381 
	$C⁄åﬁAdc
()

383 
	`SumAdc
();

384 
	`AvîageAdc
();

385 
	}
}

387 
	$Pro˚ssAdc
()

389 
	`C⁄åﬁAdc
();

390 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\api\api_adc.h

7 #i‚de‡
__API_ADC_H__


8 
	#__API_ADC_H__


	)

10 
	~"¥j_ty≥.h
"

12 
	e_adc_id_


15 
	mADC_ID_TEMP_HOT_WATER_FB
,

16 
	mADC_ID_TEMP_COLD_WATER_FB
,

19 
	mADC_ID_LEVEL_HOT_TANK_FB
,

21 
	mADC_ID_MAX
,

22 } 
	tEAdcId_T
;

24 
InôAdc
();

25 
SëAdcD©a
(
U8
 
xUid
, 
U16
 
xUadc
 );

26 
U16
 
GëAdcD©a
–
U8
 
xUid
 );

27 
Tu∫OnSísögAdc
(
U8
 
xUid
 );

28 
Tu∫OffSísögAdc
–
U8
 
xUid
 );

29 
I8
 
IsOnOffSísögAdc
–
U8
 
xUid
 );

31 
Pro˚ssAdc
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\auto_flushing\auto_flushing.c

1 
	~"hw.h
"

2 
	~"auto_Êushög.h
"

4 
	~"vÆve.h
"

5 
	~"Pump.h
"

7 
	~"eﬁ.h
"

8 
	~"time_sh‹t.h
"

10 
	s_auto_Êushög_


12 
U8
 
	mInô
;

13 
U16
 
	mDëe˘Time
;

14 
U16
 
	mO≥øtögTime
;

16 } 
	tAutoFlushög_T
;

18 
AutoFlushög_T
 
	gAfc
;

22 
	#LPS_DELAY
 10

	)

24 
	#LPS_INIT_DETECT_TIME
 100

	)

25 
	#FLUSHING_INIT_OPERATING_TIME
 1000

	)

27 #i‡
CONFIG_11_INCH


28 
	#LPS_DETECT_TIME
 18000

	)

29 
	#FLUSHING_OPERATING_TIME
 300

	)

32 #i‡
CONFIG_14_INCH


33 
	#LPS_DETECT_TIME
 18000

	)

34 
	#FLUSHING_OPERATING_TIME
 400

	)

37 
InôAutoFlushögTime
 ( );

38 
	$InôAutoFlushög
 ( )

40 
Afc
.
Inô
 = 
TRUE
;

41 
	`InôAutoFlushögTime
();

42 
	}
}

44 
	$InôAutoFlushögTime
 ( )

46 i‡–
Afc
.
Inô
 =
TRUE
 )

48 
Afc
.
Dëe˘Time
 = 
LPS_INIT_DETECT_TIME
;

49 
Afc
.
O≥øtögTime
 = 
FLUSHING_INIT_OPERATING_TIME
;

53 
Afc
.
Dëe˘Time
 = 
LPS_DETECT_TIME
;

54 
Afc
.
O≥øtögTime
 = 
FLUSHING_OPERATING_TIME
;

56 
	}
}

58 
U8
 
IsPumpOn
 ();

59 
CålAfcTimeSh‹t
 ( 
U8
 
mu8PumpSètus
 );

60 
CålAfc
 ( 
U8
 
mu8PumpSètus
 );

62 
	$Evt_10m£c_Auto_Flushög_H™dÀr
 ( )

64 
U8
 
mu8AfcCål
 = 
OFF
;

65 
U8
 
mu8TimeSh‹tSètus
;

66 
U8
 
mu8EﬁSètus
;

68 
mu8TimeSh‹tSètus
 = 
	`GëTimeSh‹tSètus
();

69 
mu8EﬁSètus
 = 
	`GëEﬁSètus
();

70 
mu8AfcCål
 = 
	`IsPumpOn
();

73 i‡–
mu8EﬁSètus
 =
TRUE
 )

86 
	`CålAfc
 ( 
mu8AfcCål
 );

88 
	}
}

90 
U8
 
	$IsPumpOn
 ()

92 
U8
 
mu8PumpOnOff
;

93 
U8
 
mu8PumpOnCmd
;

94 
mu8PumpOnOff
 = 
	`GëPumpOnOff
();

95 
mu8PumpOnCmd
 = 
	`GëPumpOnCmd
();

97 i‡–
mu8PumpOnOff
 =
TRUE


98 && 
mu8PumpOnCmd
 =
TRUE
 )

100  
ON
;

104  
OFF
;

106 
	}
}

108 
	#AFC_DELAY_TIME_SHORT
 100

109 
	`CålAfcTimeSh‹t
 ( 
U8
 
mu8PumpSètus
 )

	)

111 
U16
 
	gOndñay
 = 
AFC_DELAY_TIME_SHORT
;

112 
U16
 
	gOffdñay
 = 
AFC_DELAY_TIME_SHORT
;

114 i‡–
	gmu8PumpSètus
 =
ON
 )

116 
Offdñay
 = 
AFC_DELAY_TIME_SHORT
;

118 i‡–
	gOndñay
 != 0 )

120 
Ondñay
--;

124 
O≥nVÆve
(
VALVE_FLUSHING
);

129 
	gOndñay
 = 
AFC_DELAY_TIME_SHORT
;

131 i‡–
	gOffdñay
 != 0 )

133 
Offdñay
--;

137 
Clo£VÆve
(
VALVE_FLUSHING
);

142 
	$CålAfc
 ( 
U8
 
mu8PumpSètus
 )

144 i‡–
mu8PumpSètus
 =
ON
 )

146 i‡–
Afc
.
Dëe˘Time
 != 0 )

148 
Afc
.
Dëe˘Time
--;

152 i‡–
Afc
.
O≥øtögTime
 != 0 )

154 
Afc
.
O≥øtögTime
--;

156 
Afc
.
Inô
 = 
FALSE
;

157 
	`O≥nVÆve
(
VALVE_FLUSHING
);

161 
	`InôAutoFlushögTime
();

162 
	`Clo£VÆve
(
VALVE_FLUSHING
);

168 
	`InôAutoFlushögTime
();

169 
	`Clo£VÆve
(
VALVE_FLUSHING
);

171 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\auto_flushing\auto_flushing.h

1 #i‚de‡
__AUTO_FLUSHING_H__


2 
	#__AUTO_FLUSHING_H__


	)

4 
	~"¥j_ty≥.h
"

6 
	#CONFIG_11_INCH
 0

	)

7 
	#CONFIG_14_INCH
 1

	)

9 
InôAutoFlushög
();

10 
Evt_10m£c_Auto_Flushög_H™dÀr
 ( );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\comm.c

1 
	~"comm.h
"

7 
CommHódî_T
 
	gcomm_hódî
[ 
MAX_COMM_ID
 ];

10 
CommHódî_T
 
	$GëCommHódî
–
U8
 
id
 )

13  
comm_hódî
[ 
id
 ];

14 
	}
}

16 
	$SëCommHódî
–
U8
 
id
, 
CommHódî_T
 
vÆ
 )

19 
comm_hódî
[ 
id
 ] = 
vÆ
;

20 
	}
}

27 
I16
 
	$CommSídPackë
–
U8
 
id
, U8 *
£nd_pkt
 , 
I16
 
Àn
 )

29 
U8
 
i
;

32 if–
	`HAL_IsFuŒSídBuf„r
–
id
 ) !
TRUE
 )

34  
i
 = 0 ; i < 
Àn
 ; i++ )

36 
	`HAL_SëSídBuf„r
–
id
, 
£nd_pkt
[ 
i
 ] );

39 
	`HAL_SídByã
–
id
 );

40  
Àn
;

44 
	}
}

50 
I8
 
	$CommRecvPackë
–
U8
 
id
 , U8 *
ªcv_pkt
 )

52 
U16
 
i
;

53 
I16
 
Àn
;

55 if–
	`HAL_IsEm±yRecvBuf„r
–
id
 ) !
TRUE
 )

57 
Àn
 = 
	`HAL_GëRecvLígth
–
id
 );

58  
i
 = 0; i < 
Àn
 ; i++ )

60 
ªcv_pkt
[ 
i
 ] = 
	`HAL_GëRecvBuf„r
–
id
, i );

63  
Àn
;

67 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\comm.h

1 #i‚de‡
__COMM_H__


2 
	#__COMM_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"hÆ_£rül.h
"

7 
U16
 
	tCommHódî_T
;

9 
CommHódî_T
 
GëCommHódî
–
U8
 
id
 );

10 
SëCommHódî
–
U8
 
id
, 
CommHódî_T
 
vÆ
 );

12 
I16
 
CommSídPackë
–
U8
 
id
, U8 *
£nd_pkt
, I16 
Àn
 );

13 
I8
 
CommRecvPackë
–
U8
 
id
 , U8 *
ªcv_pkt
 );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\crc16.c

1 
	~"¸c16.h
"

5 
	#MASK
 0xA001

	)

6 
	$CÆCrc16
(
Crc
,
C
)

8 
j
;

9 
CrcSum
;

10 
CrcBuf
;

13 
CrcSum
 = 
Crc
;

14 
CrcBuf
 = 
C
;

16 
j
=0;j < 8;j++) {

17 if(((
CrcSum
 ^ 
CrcBuf
Ë& 0x0001Ë!0ËCrcSum = (CrcSum >> 1Ë^ 
MASK
;

18 
CrcSum
 >>= 1;

20 
CrcBuf
 >>= 1;

23  
CrcSum
;

24 
	}
}

29 c⁄° 
U16
 
	g¸c16èb
[256] =

71 
U16
 
	$¸c16_ˇl
(
U8
 *
uc_d©a
, U8 
uc_numbî
)

73 
U16
 
ui_¸c
 = 0xFFFF;

74 
U16
 
ui_ãmp_¸c
;

76 ; 
uc_numbî
 > 0; uc_number--) {

77 
ui_ãmp_¸c
 = 
ui_¸c
 ^ (*
uc_d©a
);

78 
ui_¸c
=(ui_¸c>>8)^
¸c16èb
[
ui_ãmp_¸c
 & 0x00ff];

80 
uc_d©a
++;

82 (
ui_¸c
);

83 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\crc16.h

1 #i‚de‡
__CRC16_H__


2 
	#__CRC16_H__


	)

4 
	~"¥j_ty≥.h
"

7 
CÆCrc16
(
Crc
,
C
);

10 
U16
 
¸c16_ˇl
(
U8
 *
uc_d©a
, U8 
uc_numbî
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser.c

4 
	~"hw.h
"

5 
	~"hÆ_£rül.h
"

6 
	~"∑r£r.h
"

7 
	~"comm.h
"

8 
	~"timî.h
"

10 
	~"∑r£r_debug.h
"

11 
	~"∑r£r_eﬁ.h
"

14 #i‡
DEBUG_COMM


15 
	s_debug_comm_


17 
U32
 
	mrx_˙t
;

18 
U32
 
	mrx_îr
;

20 
U32
 
	mtx_˙t
;

21 } 
	tdebug_comm_t
;

22 
debug_comm_t
 
	gd_comm
[ 
MAX_COMM_ID
 ];

26 vﬁ©ûê
U8
 
	gpkt_ªcv
[ 
MAX_COMM_RX_BUF_SZ
 ];

27 
I16
 
	gpkt_ªcv_Àn
 = 0;

30 vﬁ©ûê
U8
 
	gpkt_£nd
[ 
MAX_COMM_TX_BUF_SZ
 ];

31 
I16
 
	gpkt_£nd_Àn
 = 0;

36 
	$I16
 (*
	t‚_∑r£r_rx_t
)–
	tU8
 *
	tbuf
, 
	tI16
 
	tÀn
 );

37 
	s_∑r£r_li°_


39 
U8
 
TimîId
;

40 
U8
 
CommId
;

41 
‚_∑r£r_rx_t
 
IsVÆidPkt
;

42 
‚_∑r£r_rx_t
 
P¨£rPkt
;

43 } 
	t∑r£r_rx_li°_t
;

45 c⁄° 
∑r£r_rx_li°_t
 
∑r£r_rx_li°
[] =

47 #i‡
CONFIG_MMI


48 { 
TIMER_ID_COMM_EOL_RX
, 
COMM_ID_EOL
 , 
IsVÆidPkt_Debug
, 
P¨£rPkt_Debug
 },

50 { 
TIMER_ID_COMM_EOL_RX
, 
COMM_ID_EOL
 , 
IsVÆidPkt_EOL
, 
P¨£rPkt_EOL
 },

52 
	}
};

53 
	#MAX_PARSER_RX_NUM
 ( –
∑r£r_rx_li°
Ë/ –
∑r£r_rx_li°_t
 ) )

	)

55 
	$RecvPackëH™dÀr
( )

57 
∑r£r_rx_li°_t
 *
p_li°
;

58 
U8
 
i
;

60  
i
 = 0 ; i < 
MAX_PARSER_RX_NUM
 ; i++ )

62 
p_li°
 = &
∑r£r_rx_li°
[ 
i
 ];

63 if–
	`IsExpúedTimî
–
p_li°
->
TimîId
 ) =
TIMER_EXPIRE
 )

65 
	`DißbÀTimî
–
p_li°
->
TimîId
 );

67 if––
pkt_ªcv_Àn
 = 
	`CommRecvPackë
–
p_li°
->
CommId
, &
pkt_ªcv
[0] ) ) > 0 )

69 
	`HAL_InôRecvLígth
–
p_li°
->
CommId
 );

71 if–
p_li°
->
	`IsVÆidPkt
–&
pkt_ªcv
[0], 
pkt_ªcv_Àn
 ) =
TRUE
 )

73 
p_li°
->
	`P¨£rPkt
–&
pkt_ªcv
[0], 
pkt_ªcv_Àn
 );

74 #i‡
DEBUG_COMM


75 
d_comm
[ 
p_li°
->
CommId
 ].
rx_˙t
++;

80 #i‡
DEBUG_COMM


81 
d_comm
[ 
p_li°
->
CommId
 ].
rx_îr
++;

87 
	}
}

93 
	$I16
 (*
	t‚_∑r£r_tx_t
)–
	tCommHódî_T
 *
	tp_comm
, 
	tU8
 *
	tbuf
 );

94 
	$I16
 (*
	t‚_¸c16_t
)–
	tU8
 *
	tbuf
, 
	tI16
 
	tÀn
 );

95 
	s_∑r£r_tx_li°_


97 
U8
 
TimîId
;

98 
U8
 
CommId
;

99 
‚_∑r£r_tx_t
 
make_pkt
;

100 
‚_¸c16_t
 
¸c16
;

102 } 
	t∑r£r_tx_li°_t
;

104 c⁄° 
∑r£r_tx_li°_t
 
∑r£r_tx_li°
[] =

106 #i‡
CONFIG_MMI


107 { 
TIMER_ID_COMM_DEBUG_TX
, 
COMM_ID_EOL
, 
MakePkt_Debug
, 
Crc16_Debug
 },

109 { 
TIMER_ID_COMM_EOL_TX
, 
COMM_ID_EOL
, 
MakePkt_EOL
, 
Crc16_EOL
 },

111 
	}
};

112 
	#MAX_PARSER_TX_NUM
 ( –
∑r£r_tx_li°
Ë/ –
∑r£r_tx_li°_t
 ) )

	)

114 
	$SídPackëH™dÀr
( )

116 
∑r£r_tx_li°_t
 *
p_li°
;

117 
U8
 
i
;

118 
CommHódî_T
 
p_comm
;

121  
i
 = 0 ; i < 
MAX_PARSER_TX_NUM
 ; i++ )

123 
p_li°
 = &
∑r£r_tx_li°
[ 
i
 ];

125 if–
	`IsExpúedTimî
–
p_li°
->
TimîId
 ) =
TIMER_EXPIRE
 )

127 
	`DißbÀTimî
–
p_li°
->
TimîId
 );

129 
p_comm
 = 
	`GëCommHódî
–
p_li°
->
CommId
 );

132 
	`mem£t
–
pkt_£nd
, 0, 
MAX_COMM_TX_BUF_SZ
 );

133 
pkt_£nd_Àn
 = 
p_li°
->
	`make_pkt
–(
CommHódî_T
 *)
p_comm
, 
pkt_£nd
 );

134 if–
pkt_£nd_Àn
 > 0 )

137 
pkt_£nd_Àn
 = 
p_li°
->
	`¸c16
–
pkt_£nd
,Ökt_send_len );

140 
	`CommSídPackë
–
p_li°
->
CommId
, 
pkt_£nd
, 
pkt_£nd_Àn
 );

142 #i‡
DEBUG_COMM


143 
d_comm
[ 
p_li°
->
CommId
 ].
tx_˙t
++;

148 
	`HAL_InôCommId
–
p_li°
->
CommId
 );

152 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser.h

1 #i‚de‡
__PARSER_H__


2 
	#__PARSER_H__


	)

4 
	~"¥j_ty≥.h
"

6 
RecvPackëH™dÀr
( );

7 
SídPackëH™dÀr
( );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser_debug.c

4 
	~"hw.h
"

5 
	~"Àvñ.h
"

6 
	~"ªœy.h
"

7 
	~"vÆve.h
"

8 
	~"room_w©î.h
"

9 
	~"cﬁd_w©î.h
"

10 
	~"hŸ_w©î.h
"

11 
	~"comp.h
"

12 
	~"ãmp.h
"

13 
	~"hÆ_adc.h
"

14 
	~"îr‹.h
"

15 
	~"„ed_pump.h
"

16 
	~"pump.h
"

18 
	~"∑r£r_debug.h
"

19 
	~"utû.h
"

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

27 
	#MIN_PKT_SZ
 6

	)

30 
U8
 
	$check_¸c
–
U8
 *
buf
, U8 
Àn
 )

33 
U16
 
¸c16
 = 0;

35 
¸c16
 = ( ( (
U16
)
buf
[ 
Àn
 - 1 ] ) << 8 ) & 0xFF00;

36 
¸c16
 |–
buf
[ 
Àn
 - 2 ] );

38 if–
¸c16
 !
	`¸c16_ˇl
–
buf
, (
U8
)–
Àn
 - 2 ) ) )

40  
FALSE
;

44  
TRUE
;

45 
	}
}

47 
I16
 
	$IsVÆidPkt_Debug
–
U8
 *
buf
, 
I16
 
Àn
 )

49 if–
buf
 =
NULL
 )

51  
FALSE
;

55 if–
Àn
 < 
MIN_PKT_SZ
 )

57  
FALSE
;

59 if–
	`check_¸c
–
buf
, 
Àn
 ) =
FALSE
 )

61  
FALSE
;

65  
TRUE
;

66 
	}
}

69 
	$I16
 (*
	ta˘i⁄_t
)–
	tU8
 *
	tbuf
 );

70 
	s_∑r£r_li°_t


72 
a˘i⁄_t
 
∑r£r_pkt
;

73 } 
	t∑r£r_li°_t
;

74 c⁄° 
∑r£r_li°_t
 
∑r£r_li°
[] =

76 { 
NULL
 },

77 
	}
};

79 
	#SZ_PS_TABLE
 ( –
∑r£r_li°
 ) / –
∑r£r_li°_t
 ))

	)

81 
I16
 
	$P¨£rPkt_Debug
–
U8
 *
buf
, 
I16
 
Àn
)

84 if–
buf
[0] == '1' )

86 
	`SëCompPrŸe˘OffTime
(1);

89 if–
buf
[0] == '7' )

92 if–
buf
[0] == '2' )

94 
	`SëCﬁdW©îExåaMakeTime
( 1 );

96 if–
buf
[0] == '3' )

98 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 
DEFAULT_TEMP_READ_TIME
 );

100 if–
buf
[0] == '4' )

102 
	`SëPumpOnCuºítTime
( 100 );

104 if–
buf
[0] == '5' )

106 
	`SëRoomW©îFìdTime
( 1 );

138 
	}
}

140 
I16
 
	$Crc16_Debug
–
U8
 *
buf
, 
I16
 
Àn
 )

142  
Àn
;

143 
	}
}

145 
	s_make_li°_t


147 
U8
 
	mTx
;

148 
a˘i⁄_t
 
	mmake_pkt
;

149 } 
	tmake_li°_t
;

151 
I16
 
MakePktTy≥_1
–
U8
 *
buf
 );

152 
I16
 
MakePktTy≥_2
–
U8
 *
buf
 );

153 
make_li°_t
 
	gmake_li°
[] =

155 { 
TRUE
, 
MakePktTy≥_1
 },

156 { 
TRUE
, 
MakePktTy≥_2
 }

159 
	#SZ_TABLE
 ( –
make_li°
 ) / –
make_li°_t
 ))

	)

161 
I16
 
	$MakePkt_Debug
–
CommHódî_T
 *
p_comm
, 
U8
 *
buf
 )

163 
U8
 
mCou¡
 = 0;

164 
a˘i⁄_t
 
p_make_pkt
;

165 
I16
 
Àn
 = -1;

168 
p_make_pkt
 = 
make_li°
[ 
mCou¡
 ].
make_pkt
;

169 if–
p_make_pkt
 !
NULL
 )

171 if–
make_li°
[ 
mCou¡
 ].
Tx
 =
TRUE
 )

173 
Àn
 = 
	`p_make_pkt
–
buf
 );

177 
mCou¡
 = 0;

179  
Àn
;

183 
mCou¡
++;

184 if–
mCou¡
 >
SZ_TABLE
 )

186 
mCou¡
 = 0;

189  
Àn
;

190 
	}
}

193 
I16
 
	$MakePktTy≥_1
–
U8
 *
buf
 )

195 
I16
 
Àn
 = 0;

197 
RoomW©î_T
 
mRoomD©a
;

198 
CﬁdW©î_T
 
mCﬁdD©a
;

199 
HŸW©î_T
 
mHŸD©a
;

200 
Com¥ess‹_T
 
mCompD©a
;

201 
FìdPump_T
 
mFìdPump
;

202 
Pump_T
 
mPump
;

206 
Àn
 = 
	`•rötf
–(*)&
buf
[Üen ], "TYPE_1=");

208 
	`GëRoomW©îD©a
–&
mRoomD©a
 );

209 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d:%d:%d:%d:%d@",

210 
	`GET_ROOM_TANK_LOW
(),

211 
	`GET_ROOM_TANK_HIGH
(),

212 
	`GET_ROOM_TANK_OVERFLOW
(),

213 
mRoomD©a
.
Levñ
,

214 
mRoomD©a
.
InôFuŒ
,

215 –
mRoomD©a
.
FìdTime
 / 10 )

219 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d@",

220 
	`GëT™kLevñ
–
LEVEL_ID_COLD
 ),

221 
	`GëCﬁdW©îInôFuŒ
()

225 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d@",

226 !
	`GET_STATUS_VALVE_NOS
(),

227 
	`GET_STATUS_VALVE_FEED
()

231 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d@",

232 
	`IsTu∫OnRñay
–
RELAY_COMP
 ),

233 
	`IsTu∫OnRñay
–
RELAY_HEATER
 )

237 
	`GëCﬁdW©îD©a
–&
mCﬁdD©a
 );

238 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d:%.1f:%.1f:%.1f:%d:%u@",

239 
mCﬁdD©a
.
C⁄figMake
,

240 
mCﬁdD©a
.
Make
,

241 
mCﬁdD©a
.
TempT¨gëOn
,

242 
mCﬁdD©a
.
TempT¨gëOff
,

243 
mCﬁdD©a
.
TempCuºít
,

244 
mCﬁdD©a
.
ExåaMake
,

245 
mCﬁdD©a
.
ExåaMakeTime


249 
	`GëHŸW©îD©a
–&
mHŸD©a
 );

250 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d:%.1f:%.1f:%.1f:%d:%d:%d:%u@",

251 
mHŸD©a
.
C⁄figMake
,

252 
mHŸD©a
.
Make
,

253 
mHŸD©a
.
TempT¨gëOn
,

254 
mHŸD©a
.
TempT¨gëOff
,

255 
mHŸD©a
.
TempCuºít
,

256 
mHŸD©a
.
Levñ
,

257 
mHŸD©a
.
A…ôude
,

258 
mHŸD©a
.
InôFuŒ
,

259 
mHŸD©a
.
InôWaôTime


263 
	`GëCompD©a
–&
mCompD©a
 );

264 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d:%lu:%lu:%d@",

265 
	`GëCompOnOff
(),

266 
mCompD©a
.
PrŸe˘OffTime
,

267 
mCompD©a
.
OnTime
,

268 
mCompD©a
.
OffTime
,

274 
	`GëFìdPumpD©a
–&
mFìdPump
 );

275 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d:%d:%d:%d@",

276 
mFìdPump
.
C⁄n
,

277 
mFìdPump
.
OnOff
,

278 
mFìdPump
.
OnSãp
,

279 
mFìdPump
.
OffSãp
,

280 
	`GET_PUMP_ONOFF
()

284 
	`GëPumpD©a
–&
mPump
 );

285 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d:%d:%lu:%lu@",

286 
mPump
.
OnOff
,

287 
mPump
.
OnSãp
,

288 
mPump
.
OnPumpCmd
,

289 (
mPump
.
OnT¨gëTime
 / 10UL) ,

290 (
mPump
.
OnCuºítTime
 / 10UL)

294 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "\r\n" );

296  
Àn
;

297 
	}
}

300 
I16
 
	$MakePktTy≥_2
–
U8
 *
buf
 )

302 
I16
 
Àn
 = 0;

307 
Àn
 = 
	`•rötf
–(*)&
buf
[Üen ], "TYPE_2=");

310 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%u:%u:%u:",

311 
	`HAL_GëAdcVÆue
–
ANI_TEMP_HOT_WATER
 ),

312 
	`HAL_GëAdcVÆue
–
ANI_TEMP_COLD_WATER
 ),

317 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%.1f:%.1f@",

318 
	`GëTemp
–
TEMP_ID_HOT_WATER
 ),

319 
	`GëTemp
–
TEMP_ID_COLD_WATER
 )

323 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d@",

324 
	`GëTempSís‹Time
–
TEMP_ID_COLD_WATER
 ),

325 
	`GëTempSís‹Time
–
TEMP_ID_HOT_WATER
 )

329 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d:%d:%d:",

337 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d:%d:%d:%d:%d@",

347 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "%d:%d:%d:%d:%d:%d@",

348 
	`IsEº‹
–
ERR_TEMP_COLD_WATER
 ),

349 
	`IsEº‹
–
ERR_TEMP_HOT_WATER
 ),

350 
	`IsEº‹
–
ERR_ROOM_OVF
 ),

351 
	`IsEº‹
–
ERR_ROOM_COMPLEX
 ),

352 
	`IsEº‹
–
ERR_ROOM_LOW_LEVEL
 ),

353 
	`IsEº‹
–
ERR_ROOM_HIGH_LEVEL
 )

358 
Àn
 +
	`•rötf
–(*)&
buf
[Üen ], "\r\n" );

361  
Àn
;

363 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser_debug.h

1 #i‚de‡
__PARSER_DEBUG_H__


2 
	#__PARSER_DEBUG_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"comm.h
"

7 
I16
 
IsVÆidPkt_Debug
–
U8
 *
buf
, I16 
Àn
 );

8 
I16
 
P¨£rPkt_Debug
–
U8
 *
buf
, I16 
Àn
);

9 
I16
 
Crc16_Debug
–
U8
 *
buf
, I16 
Àn
 );

10 
I16
 
MakePkt_Debug
–
CommHódî_T
 *
p_comm
, 
U8
 *
buf
 );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser_eol.c

5 
	~"hw.h
"

6 
	~"∑r£r_eﬁ.h
"

7 
	~"utû.h
"

8 
	~"eﬁ.h
"

9 
	~"¥o˚ss_eﬁ.h
"

10 
	~"timî.h
"

12 
	~"ãmp.h
"

13 
	~"îr_ãmp.h
"

14 
	~"Àvñ.h
"

15 
	~"ªœy.h
"

16 
	~"vÆve.h
"

17 
	~"room_w©î.h
"

18 
	~"cﬁd_w©î.h
"

19 
	~"hŸ_w©î.h
"

20 
	~"comp.h
"

21 
	~"pump.h
"

23 
	~"hÆ_adc.h
"

24 
	~"îr‹.h
"

25 
	~"¥o˚ss_di•œy.h
"

27 
	~<°dio.h
>

28 
	~<°dlib.h
>

33 
	#PKT_STX
 0x01

	)

34 
	#PKT_ETX
 0x04

	)

36 
	#PKT_ACK
 0x06

	)

37 
	#PKT_NAK
 0x15

	)

39 
	#MIN_PKT_SZ
 6

	)

42 
	#MK_DATA
–
_buf
, 
_Àn
, 
_s
, 
_vÆ
 ) \

44 
_Àn
 +
	`•rötf
–(*)&
_buf
[ _À¿], 
_s
, 
_vÆ
 );\

45 }0)

	)

48 
I16
 
	$MkTemp
(
TEMP_T
 
mTemp
, 
U8
 *
pBuf
, 
I16
 
mi16Lí
)

50 
U16
 
mu16Temp
;

52 
mu16Temp
 = (
U16
)–
mTemp
 * 10.0f );

54 
pBuf
[ 
mi16Lí
++ ] = 
	`GET_HIGH_BYTE
–
mu16Temp
 );

55 
pBuf
[ 
mi16Lí
++ ] = 
	`GET_LOW_BYTE
–
mu16Temp
 );

57  
mi16Lí
;

58 
	}
}

60 
U8
 
	$check_¸c
–
U8
 *
buf
, 
I16
 
Àn
 )

62 
U8
 
i
 = 0;

63 
U8
 
mu8Chksum
 = 0;

65  
i
 = 0; i < 
Àn
 - 3 ; i++ )

67 
mu8Chksum
 ^
buf
[ 
i
 ];

70  
mu8Chksum
;

71 
	}
}

73 
U8
 
	$IsTrueChksum
–
U8
 *
buf
, 
I16
 
Àn
 )

75 
U8
 
mu8CÆ
;

76 
U8
 
mu8VÆ
;

79 
mu8CÆ
 = 
	`check_¸c
–
buf
, 
Àn
 );

80 
mu8VÆ
 = 
	`C⁄vAsc2Byã
–
buf
[ 
Àn
 - 3 ], buf[Üen - 2 ] );

81 if–
mu8CÆ
 !
mu8VÆ
 )

83  
FALSE
;

86  
TRUE
;

87 
	}
}

90 
I16
 
	$IsVÆidPkt_EOL
–
U8
 *
buf
, 
I16
 
Àn
 )

92 
U8
 
mu8Chksum
 = 0;

94 if–
buf
 =
NULL
 )

96  
FALSE
;

99 if–
Àn
 < 
MIN_PKT_SZ
 )

101  
FALSE
;

104 if–
buf
[0] !
PKT_STX


105 || 
buf
[ 
Àn
 - 1] !
PKT_ETX
 )

107  
FALSE
;

110 if–
	`IsTrueChksum
–
buf
, 
Àn
 ) =
FALSE
 )

112  
FALSE
;

117 if–
	`GëEﬁMode
(Ë=
EOL_MODE_DONE
 )

119  
FALSE
;

125 if–
	`GëEﬁSètus
(Ë=
FALSE
 )

128 if–
	`IsExpúedEﬁLimôTimî
(Ë=
TRUE
 )

130  
FALSE
;

134 
	`SèπEﬁ
–
EOL_TYPE_LOAD
 );

135 
	`SèπDi•œyInô
();

136 
	`SëVîsi⁄Di•
( 50 );

139  
TRUE
;

140 
	}
}

143 (*
	tA˘i⁄P¨£r_t
)();

144 
	s_∑r£r_li°_t


146 
U8
 
Ty≥
;

147 
A˘i⁄P¨£r_t
 
P¨£rPkt
;

148 } 
	t∑r£r_li°_t
;

151 
	`P¨£rSís‹
();

152 
	`P¨£rNoLﬂd
();

153 
	`P¨£rF™MŸ‹
();

154 
	`P¨£rFìdVÆve
();

155 
	`P¨£rNosVÆve
();

156 
	`P¨£rFlushögVÆve
();

157 
	`P¨£rBoo°Pump
();

158 
	`P¨£rHóãr
();

159 
	`P¨£rGasFìdVÆve
();

160 
	`P¨£rGasNosVÆveClo£
();

161 
	`P¨£rGasNosVÆveO≥n
();

162 
	`P¨£rComp
();

163 
	`P¨£rCom∂ëe
();

165 c⁄° 
∑r£r_li°_t
 
∑r£r_li°
[] =

167 { 
PKT_EOL_MODEL
, 
NULL
 },

168 { 
PKT_EOL_MODE
, 
NULL
 },

170 { 
PKT_EOL_EEPROM
, 
P¨£rSís‹
 },

171 { 
PKT_EOL_SENSOR_TEMP
, 
NULL
 },

172 { 
PKT_EOL_SENSOR_LEVEL
, 
NULL
 },

174 { 
PKT_EOL_HEATER
, 
P¨£rHóãr
 },

175 { 
PKT_EOL_NO_LOAD
, 
P¨£rNoLﬂd
 },

177 { 
PKT_EOL_FEED_VALVE
, 
P¨£rFìdVÆve
 },

178 { 
PKT_EOL_NOS_VALVE
, 
P¨£rNosVÆve
 },

181 { 
PKT_EOL_FLUSHING_VALVE
, 
P¨£rFlushögVÆve
 },

182 { 
PKT_EOL_BOOST_PUMP
, 
P¨£rBoo°Pump
 },

184 { 
PKT_EOL_GAS_FEED_VALVE
, 
P¨£rGasFìdVÆve
 },

185 { 
PKT_EOL_GAS_NOS_VALVE_CLOSE
, 
P¨£rGasNosVÆveClo£
 },

186 { 
PKT_EOL_GAS_NOS_VALVE_OPEN
, 
P¨£rGasNosVÆveO≥n
 },

188 { 
PKT_EOL_COMP
, 
P¨£rComp
 },

189 { 
PKT_EOL_COMPLETE
, 
P¨£rCom∂ëe
 }

192 
	}
};

193 
	#SZ_PARSER_TABLE
 (–
∑r£r_li°
 ) / –
∑r£r_li°_t
 ))

	)

196 
I16
 
	$P¨£rPkt_EOL
–
U8
 *
buf
, 
I16
 
Àn
)

198 
U8
 
mu8Index
 = 0;

199 
U8
 
mu8PktTy≥
 = 0;

200 
A˘i⁄P¨£r_t
 
pP¨£r
 = 
NULL
;

204 
mu8PktTy≥
 = 
	`C⁄vAsc2Byã
–
buf
[1], buf[2] );

205  
mu8Index
 = 0; mu8Index < 
SZ_PARSER_TABLE
; mu8Index++ )

207 if–
mu8PktTy≥
 =
∑r£r_li°
[ 
mu8Index
 ].
Ty≥
 )

209 
pP¨£r
 = 
∑r£r_li°
[ 
mu8Index
 ].
P¨£rPkt
;

210 if–
pP¨£r
 !
NULL
 )

212 
	`pP¨£r
();

216 
	`SëCommHódî
–
COMM_ID_EOL
, 
mu8PktTy≥
 );

217 
	`SèπTimî
–
TIMER_ID_COMM_EOL_TX
, 0 );

223 
	}
}

225 
	$Tu∫OffAŒLﬂd
()

228 
	`Clo£VÆve
–
VALVE_ALL
 );

229 
	`O≥nVÆve
–
VALVE_NOS
 );

232 
	`Tu∫OffRñayAŒ
();

235 
	`Tu∫OffPump
();

237 
	}
}

256 
	$P¨£rSís‹
()

258 
	`SëEﬁMode
–
EOL_MODE_CHECK_SENSOR
 );

259 
	}
}

261 
	$P¨£rNoLﬂd
()

263 
	`SëEﬁMode
–
EOL_MODE_CHECK_LOAD
 );

265 
	`Tu∫OffAŒLﬂd
();

266 
	}
}

271 
	$P¨£rFìdVÆve
()

273 
	`Tu∫OffAŒLﬂd
();

275 
	`O≥nVÆve
–
VALVE_FEED
 );

276 
	}
}

278 
	$P¨£rNosVÆve
()

280 
	`Tu∫OffAŒLﬂd
();

282 
	`Clo£VÆve
–
VALVE_NOS
 );

283 
	}
}

285 
	$P¨£rFlushögVÆve
()

287 
	`Tu∫OffAŒLﬂd
();

289 
	`O≥nVÆve
–
VALVE_FLUSHING
 );

290 
	}
}

291 
	$P¨£rBoo°Pump
()

293 
	`Tu∫OffAŒLﬂd
();

295 
	`Tu∫OnPump
();

296 
	}
}

298 
	$P¨£rHóãr
()

300 
U8
 
mu8PrŸe˘HóãrFœg
 = 0;

302 
	`Tu∫OffAŒLﬂd
();

304 if–
mu8PrŸe˘HóãrFœg
 == 0 )

306 
mu8PrŸe˘HóãrFœg
 = 1;

307 
	`Tu∫OnRñay
–
RELAY_HEATER
 );

310 
	`Tu∫OnRñay
–
RELAY_HEATER
 );

312 
	}
}

314 
	$P¨£rGasFìdVÆve
()

316 
	`O≥nVÆve
–
VALVE_FEED
 );

317 
	`O≥nVÆve
–
VALVE_NOS
 );

318 
	}
}

320 
	$P¨£rGasNosVÆveClo£
()

322 
	`Clo£VÆve
–
VALVE_NOS
 );

323 
	}
}

325 
	$P¨£rGasNosVÆveO≥n
()

327 
	`O≥nVÆve
–
VALVE_NOS
 );

328 
	}
}

331 
	$P¨£rComp
()

336 
	`Tu∫OnRñay
–
RELAY_COMP
 );

338 
	`SèπEﬁI˚Sy°em
();

339 
	}
}

342 
	$P¨£rCom∂ëe
()

344 
	`SëEﬁMode
–
EOL_MODE_DONE
 );

346 
	`Tu∫OffAŒLﬂd
();

347 
	}
}

351 
I16
 
	$Crc16_EOL
–
U8
 *
buf
, 
I16
 
Àn
 )

353 
U8
 
i
 = 0;

354 
U8
 
mu8Chksum
 = 0;

355 
U8
 
¸c_buf
[5];

358 if–
Àn
 < 
MIN_PKT_SZ
 )

363 
mu8Chksum
 = 
	`check_¸c
–
buf
, 
Àn
);

364 
	`•rötf
–(*)
¸c_buf
, "%02X", 
mu8Chksum
 );

366 
buf
[ 
Àn
 - 3 ] = 
¸c_buf
[0];

367 
buf
[ 
Àn
 - 2 ] = 
¸c_buf
[1];

369  
Àn
;

370 
	}
}

372 
	$I16
 (*
	tA˘i⁄_t
)–
	tU8
 *
	tbuf
, U8 
	tmu8PktTy≥
 );

373 
	s_make_li°_t


375 
U8
 
Ty≥
;

376 
A˘i⁄_t
 
MakePkt
;

377 } 
	tmake_li°_t
;

378 
I16
 
	`MakePkt_Modñ
–
U8
 *
buf
, U8 
mu8PktTy≥
 );

379 
I16
 
	`MakePkt_Eïrom
–
U8
 *
buf
, U8 
mu8PktTy≥
 );

380 
I16
 
	`MakePkt_Sís‹Temp
–
U8
 *
buf
, U8 
mu8PktTy≥
 );

381 
I16
 
	`MakePkt_Sís‹Levñ
–
U8
 *
buf
, U8 
mu8PktTy≥
 );

382 
I16
 
	`MakePkt_Comp
–
U8
 *
buf
, U8 
mu8PktTy≥
 );

383 
I16
 
	`MakePkt_NoPayLﬂd
–
U8
 *
buf
, U8 
mu8PktTy≥
 );

385 c⁄° 
make_li°_t
 
make_li°
[] =

387 { 
PKT_EOL_MODEL
, 
MakePkt_Modñ
 },

388 { 
PKT_EOL_MODE
, 
MakePkt_NoPayLﬂd
 },

390 { 
PKT_EOL_EEPROM
, 
MakePkt_Eïrom
 },

391 { 
PKT_EOL_SENSOR_TEMP
, 
MakePkt_Sís‹Temp
 },

392 { 
PKT_EOL_SENSOR_LEVEL
, 
MakePkt_Sís‹Levñ
 },

394 { 
PKT_EOL_HEATER
, 
MakePkt_NoPayLﬂd
 },

395 { 
PKT_EOL_NO_LOAD
, 
MakePkt_NoPayLﬂd
 },

397 { 
PKT_EOL_FEED_VALVE
, 
MakePkt_NoPayLﬂd
 },

398 { 
PKT_EOL_NOS_VALVE
, 
MakePkt_NoPayLﬂd
 },

401 { 
PKT_EOL_FLUSHING_VALVE
, 
MakePkt_NoPayLﬂd
 },

402 { 
PKT_EOL_BOOST_PUMP
, 
MakePkt_NoPayLﬂd
 },

404 { 
PKT_EOL_GAS_FEED_VALVE
, 
MakePkt_NoPayLﬂd
 },

405 { 
PKT_EOL_GAS_NOS_VALVE_CLOSE
, 
MakePkt_NoPayLﬂd
 },

406 { 
PKT_EOL_GAS_NOS_VALVE_OPEN
, 
MakePkt_NoPayLﬂd
 },

408 { 
PKT_EOL_COMP
, 
MakePkt_Comp
 },

409 { 
PKT_EOL_COMPLETE
, 
MakePkt_NoPayLﬂd
 }

412 
	}
};

414 
	#SZ_MAKE_TABLE
 ( –
make_li°
 ) / –
make_li°_t
 ))

	)

416 
I16
 
	$MakePkt_EOL
–
CommHódî_T
 *
pComm
, 
U8
 *
buf
 )

418 
U8
 
mu8Ty≥
;

419 
A˘i⁄_t
 
p_make_pkt
;

420 
U8
 
i
;

421 
I16
 
Àn
 = -1;

424  
i
 = 0; i < 
SZ_MAKE_TABLE
; i++ )

426 
mu8Ty≥
 = 
make_li°
[ 
i
 ].
Ty≥
;

427 
p_make_pkt
 = 
make_li°
[ 
i
 ].
MakePkt
;

429 if–
mu8Ty≥
 =(
U8
)
pComm
 )

431 if–
p_make_pkt
 !
NULL
 )

433 
Àn
 = 
	`p_make_pkt
–
buf
, 
mu8Ty≥
 );

439  
Àn
;

440 
	}
}

443 
I16
 
	$MakePkt_Modñ
–
U8
 *
buf
, U8 
mu8PktTy≥
 )

445 
I16
 
mi16Lí
 = 0;

448 
buf
[ 
mi16Lí
++ ] = 
PKT_STX
;

449 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
PKT_ACK
 );

450 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
mu8PktTy≥
 );

451 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
MODEL_CODE
 );

452 
buf
[ 
mi16Lí
++ ] = 0;

453 
buf
[ 
mi16Lí
++ ] = 0;

454 
buf
[ 
mi16Lí
++ ] = 
PKT_ETX
;

456  
mi16Lí
;

457 
	}
}

460 
	#VERSION_CHINA
 0x01

	)

461 
I16
 
	$MakePkt_Eïrom
–
U8
 *
buf
, U8 
mu8PktTy≥
 )

463 
I16
 
mi16Lí
 = 0;

466 
buf
[ 
mi16Lí
++ ] = 
PKT_STX
;

467 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
PKT_ACK
 );

468 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
mu8PktTy≥
 );

469 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`GëEﬁCheckSètus
–
EOL_CHK_ID_EEPROM
 ) );

470 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
VERSION
 );

471 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`GëHŸW©îA…idue
() );

472 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
VERSION_CHINA
 );

475 
buf
[ 
mi16Lí
++ ] = 0;

476 
buf
[ 
mi16Lí
++ ] = 0;

477 
buf
[ 
mi16Lí
++ ] = 
PKT_ETX
;

479  
mi16Lí
;

480 
	}
}

482 
	#TEMP_ERROR
 0xFF

483 
	#TEMP_UNDER
 0x00

484 
U8
 
	`C⁄vEﬁTemp
(U8 
mu8AdcId
, 
TEMP_T
 
mTemp
)

	)

486 
U8
 
	gmu8Rë
 = 
TEMP_ERROR
;

488 
U16
 
	gmu16Adc
 = 0;

492 
	gmu16Adc
 = 
HAL_GëAdcVÆue
–
mu8AdcId
 );

493 if–
GëTempEº‹Ty≥
–
mu16Adc
 ) !
STATUS_NORMAL
 )

495 
mu8Rë
 = 
TEMP_ERROR
;

499 if–
	gmTemp
 > 0.0f )

501 
	gmu8Rë
 = (
U8
)
mTemp
;

505 
	gmu8Rë
 = 
TEMP_UNDER
;

509  
	gmu8Rë
;

512 
I16
 
	$MakePkt_Sís‹Temp
–
U8
 *
buf
, U8 
mu8PktTy≥
 )

514 
I16
 
mi16Lí
 = 0;

515 
U16
 
mu16Adc
;

517 
buf
[ 
mi16Lí
++ ] = 
PKT_STX
;

518 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
PKT_ACK
 );

519 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
mu8PktTy≥
 );

522 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`C⁄vEﬁTemp
–
ANI_TEMP_COLD_WATER
, 
	`GëTemp
–
TEMP_ID_COLD_WATER
) ));

523 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`C⁄vEﬁTemp
–
ANI_TEMP_HOT_WATER
, 
	`GëTemp
–
TEMP_ID_HOT_WATER
) ));

525 
mu16Adc
 = 
	`HAL_GëAdcVÆue
–
ANI_TEMP_COLD_WATER
 );

526 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`GET_HIGH_BYTE
–
mu16Adc
 ) );

527 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`GET_LOW_BYTE
–
mu16Adc
 ));

529 
mu16Adc
 = 
	`HAL_GëAdcVÆue
–
ANI_TEMP_HOT_WATER
 );

530 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`GET_HIGH_BYTE
–
mu16Adc
 ) );

531 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`GET_LOW_BYTE
–
mu16Adc
 ));

534 
buf
[ 
mi16Lí
++ ] = 0;

535 
buf
[ 
mi16Lí
++ ] = 0;

536 
buf
[ 
mi16Lí
++ ] = 
PKT_ETX
;

538  
mi16Lí
;

539 
	}
}

541 
I16
 
	$MakePkt_Sís‹Levñ
–
U8
 *
buf
, U8 
mu8PktTy≥
 )

543 
I16
 
mi16Lí
 = 0;

545 
U8
 
mu8Low
;

546 
U8
 
mu8High
;

547 
U8
 
mu8OvîÊow
;

549 
mu8Low
 = 
	`GET_REVERSE_ROOM_TANK_LOW
();

550 
mu8High
 = 
	`GET_REVERSE_ROOM_TANK_HIGH
();

551 
mu8OvîÊow
 = 
	`GET_ROOM_TANK_OVERFLOW
();

553 
buf
[ 
mi16Lí
++ ] = 
PKT_STX
;

554 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
PKT_ACK
 );

555 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
mu8PktTy≥
 );

556 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
mu8Low
 );

557 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
mu8High
 );

558 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
mu8OvîÊow
 );

559 
buf
[ 
mi16Lí
++ ] = 0;

560 
buf
[ 
mi16Lí
++ ] = 0;

561 
buf
[ 
mi16Lí
++ ] = 
PKT_ETX
;

563  
mi16Lí
;

564 
	}
}

566 
I16
 
	$MakePkt_Comp
–
U8
 *
buf
, U8 
mu8PktTy≥
 )

568 
I16
 
mi16Lí
 = 0;

569 
U16
 
mu16Adc
;

571 
buf
[ 
mi16Lí
++ ] = 
PKT_STX
;

572 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
PKT_ACK
 );

573 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
mu8PktTy≥
 );

575 
mu16Adc
 = 
	`HAL_GëAdcVÆue
–
ANI_TEMP_COLD_WATER
 );

576 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`GET_HIGH_BYTE
–
mu16Adc
 ) );

577 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
	`GET_LOW_BYTE
–
mu16Adc
 ));

579 
buf
[ 
mi16Lí
++ ] = 0;

580 
buf
[ 
mi16Lí
++ ] = 0;

581 
buf
[ 
mi16Lí
++ ] = 
PKT_ETX
;

583  
mi16Lí
;

584 
	}
}

587 
I16
 
	$MakePkt_NoPayLﬂd
–
U8
 *
buf
, U8 
mu8PktTy≥
 )

589 
I16
 
mi16Lí
 = 0;

591 
buf
[ 
mi16Lí
++ ] = 
PKT_STX
;

592 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
PKT_ACK
 );

593 
mi16Lí
 +
	`•rötf
–(*)&
buf
[ mi16Lí ], "%02X", 
mu8PktTy≥
 );

594 
buf
[ 
mi16Lí
++ ] = 0;

595 
buf
[ 
mi16Lí
++ ] = 0;

596 
buf
[ 
mi16Lí
++ ] = 
PKT_ETX
;

598  
mi16Lí
;

599 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser_eol.h

1 #i‚de‡
__PARSER_EOL_H__


2 
	#__PARSER_EOL_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"comm.h
"

9 
	mPKT_EOL_NONE
 = 0x00,

11 
	mPKT_EOL_MODEL
 = 0x20,

12 
	mPKT_EOL_MODE
 = 0x22,

14 
	mPKT_EOL_EEPROM
 = 0x32,

15 
	mPKT_EOL_SENSOR_TEMP
 = 0x35,

16 
	mPKT_EOL_SENSOR_LEVEL
 = 0x38,

18 
	mPKT_EOL_HEATER
 = 0x50,

19 
	mPKT_EOL_NO_LOAD
 = 0x54,

21 
	mPKT_EOL_FEED_VALVE
 = 0x58,

22 
	mPKT_EOL_NOS_VALVE
 = 0x5C,

25 
	mPKT_EOL_FLUSHING_VALVE
 = 0x5B,

26 
	mPKT_EOL_BOOST_PUMP
 = 0x5E,

28 
	mPKT_EOL_GAS_FEED_VALVE
 = 0x78,

29 
	mPKT_EOL_GAS_NOS_VALVE_CLOSE
 = 0x7D,

30 
	mPKT_EOL_GAS_NOS_VALVE_OPEN
 = 0x83,

32 
	mPKT_EOL_COMP
 = 0x99,

33 
	mPKT_EOL_COMPLETE
 = 0xF1,

37 
I16
 
IsVÆidPkt_EOL
–
U8
 *
buf
, I16 
Àn
 );

38 
I16
 
P¨£rPkt_EOL
–
U8
 *
buf
, I16 
Àn
);

39 
I16
 
Crc16_EOL
–
U8
 *
buf
, I16 
Àn
 );

40 
I16
 
MakePkt_EOL
–
CommHódî_T
 *
p_comm
, 
U8
 *
buf
 );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\config.h

1 #i‚de‡
__CONFIG_H__


2 
	#__CONFIG_H__


	)

9 
	#CONFIG_TEST
 0

10 
	#CONFIG_MMI
 0

11 
	#CONFIG_TEST_LED
 0

12 
	#CONFIG_TEST_SAVING
 0

13 
	#CONFIG_TEST_TEMP_READ
 0

14 
	#CONFIG_TEST_COLD_SENSOR
 0

15 

	)

17 
	#CONFIG_ERR_ALL
 1

	)

18 
	#DEBUG_COMM
 1

	)

19 
	#VERSION
 1

	)

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display.c

1 
	~"hw.h
"

3 
	~"di•œy.h
"

4 
	~"hÆ_Àd.h
"

6 
	#NOP_COUNT
 100

	)

7 
U8
 
	ggu8Sñ
 = 0;

8 
U8
 
gu8Wd©aAºay
[ 
DISPLAY_DATA_RAM_LENGTH
 ];

10 
	$Evt_1m£c_LED_H™dÀr
()

12 
U8
 
i
;

17 
	`INIT_LED_SCAN
();

18 
	`INIT_LED_SELECT
();

20  
i
=0; i < 
NOP_COUNT
; i++)

22 
	`NOP
();

26 
gu8Sñ
)

28 0 : 
SCAN_1
 = 0; ;

29 1 : 
SCAN_2
 = 0; ;

31  : 
SCAN_2
 = 0; ;

36 
SELECT_1
 = ((
gu8Wd©aAºay
[
gu8Sñ
] & 0x01));

37 
SELECT_2
 = ((
gu8Wd©aAºay
[
gu8Sñ
] & 0x02)>>1);

39 if(
gu8Sñ
 < 1)

41 
gu8Sñ
++;

45 
gu8Sñ
 = 0;

47 
	}
}

50 
	$Di•CﬁdW©îWók
–
U8
 
mu8OnOff
 )

52 
	`Comm⁄BôOnOff
–
COLD_WATER_WEAK
, 
mu8OnOff
 );

53 
	}
}

55 
	$Di•CﬁdW©îSå⁄g
–
U8
 
mu8OnOff
 )

57 
	`Comm⁄BôOnOff
–
COLD_WATER_STRONG
, 
mu8OnOff
 );

58 
	}
}

60 
	$Di•HŸW©îWók
–
U8
 
mu8OnOff
 )

62 
	`Comm⁄BôOnOff
–
HOT_WATER_WEAK
, 
mu8OnOff
 );

63 
	}
}

65 
	$Di•HŸW©îSå⁄g
–
U8
 
mu8OnOff
 )

67 
	`Comm⁄BôOnOff
–
HOT_WATER_STRONG
, 
mu8OnOff
 );

68 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display.h

1 #i‚de‡
__DISPLAY_H__


2 
	#__DISPLAY_H__


	)

4 
	~"¥j_ty≥.h
"

7 
	#ROW_0
 ( 0x00000001 )

	)

8 
	#ROW_1
 ( 0x00000002 )

	)

11 
	#COM_0
 ( 0x00000000 )

	)

12 
	#COM_1
 ( 0x00010000 )

	)

16 
	#COLD_WATER_STRONG
 ( 
COM_1
 | 
ROW_0
 )

	)

17 
	#HOT_WATER_STRONG
 ( 
COM_0
 | 
ROW_1
 )

	)

18 
	#COLD_WATER_WEAK
 ( 
COM_1
 | 
ROW_1
 )

	)

19 
	#HOT_WATER_WEAK
 ( 
COM_0
 | 
ROW_0
 )

	)

23 
Di•CﬁdW©îWók
–
U8
 
mu8OnOff
 );

24 
Di•CﬁdW©îSå⁄g
–
U8
 
mu8OnOff
 );

26 
Di•HŸW©îWók
–
U8
 
mu8OnOff
 );

27 
Di•HŸW©îSå⁄g
–
U8
 
mu8OnOff
 );

29 
Di•Vîsi⁄
(
U8
 
mu8VÆ
);

45 
Evt_1m£c_LED_H™dÀr
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display_eol.c

1 
	~"hw.h
"

2 
	~"di•œy_eﬁ.h
"

3 
	~"di•œy.h
"

6 
	$EﬁCheckI≈ut
()

9 
U32
 
mu32VÆ
;

12 
	`Tu∫OffAŒLED
();

14 
mu32VÆ
 = 
	`GëEﬁTe°I≈utVÆ
();

16 if–(
mu32VÆ
 & 
MK_EOL_PHOTO_SENSOR
 ) != 0 )

18 
	`Di•I˚FuŒ
–
ON
 );

21 if–(
mu32VÆ
 & 
MK_EOL_KEY_HOT
 ) != 0 )

23 
	`Di•HŸW©î
–
ON
 );

24 
	`Di•HŸTemp_1
–
ON
 );

25 
	`Di•HŸTemp_2
–
ON
 );

26 
	`Di•HŸTemp_3
–
ON
 );

29 if–(
mu32VÆ
 & 
MK_EOL_KEY_ROOM
 ) != 0 )

31 
	`Di•RoomW©î
–
ON
 );

34 if–(
mu32VÆ
 & 
MK_EOL_KEY_COLD
 ) != 0 )

36 
	`Di•CﬁdW©î
–
ON
 );

37 
	`Di•CﬁdTemp_1
–
ON
 );

38 
	`Di•CﬁdTemp_2
–
ON
 );

39 
	`Di•CﬁdTemp_3
–
ON
 );

42 if–(
mu32VÆ
 & 
MK_EOL_KEY_CONTY
 ) != 0 )

44 
	`Di•C⁄ty
–
ON
 );

45 
	`Di•C⁄ty1L
–
ON
 );

46 
	`Di•C⁄ty1D5L
–
ON
 );

49 if–(
mu32VÆ
 & 
MK_EOL_KEY_ICE_MAKE
 ) != 0 )

51 
	`Di•I˚
–
ON
 );

52 
	`Di•I˚Makî
–
ON
 );

56 
	`Di•I˚Makî
–
OFF
 );

59 if–(
mu32VÆ
 & 
MK_EOL_KEY_ICE_TURBO
 ) != 0 )

61 
	`Di•I˚Turbo
–
ON
 );

64 if–(
mu32VÆ
 & 
MK_EOL_KEY_ICE_LOCK
 ) != 0 )

66 
	`Di•LockI˚
–
ON
 );

69 if–(
mu32VÆ
 & 
MK_EOL_KEY_STER
 ) != 0 )

71 
	`Di•Sãr
–
ON
 );

72 
	`Di•Døö
–
ON
 );

73 
	`Di•SãrProgªssB¨
( 100 );

77 
	`Di•SãrProgªssB¨
( 0 );

80 if–(
mu32VÆ
 & 
MK_EOL_KEY_HOT_LOCK
 ) != 0 )

82 
	`Di•LockHŸ
–
ON
 );

85 if–(
mu32VÆ
 & 
MK_EOL_KEY_SAVE
 ) != 0 )

87 
	`Di•PowîSavög
–
ON
 );

90 if–(
mu32VÆ
 & 
MK_EOL_LEVER_WATER
 ) != 0 )

92 
	`Di•W©îOut
–
ON
 );

96 
	`Di•W©îOut
–
OFF
 );

99 if–(
mu32VÆ
 & 
MK_EOL_LEVER_ICE
 ) != 0 )

101 
	`Di•I˚Out
–
ON
 );

105 
	`Di•I˚Out
–
OFF
 );

108 if–(
mu32VÆ
 & 
MK_EOL_TANK_OPEN
 ) != 0 )

110 
	`Di•Sîvi˚
–
ON
 );

113 
	}
}

119 
	$Di•œyEﬁFr⁄tTe°
()

124 if–
	`GëEﬁTe°I≈utVÆ
(Ë=
MK_EOL_ALL
 )

126 
	`Tu∫OffAŒLED
();

128 
	`Di•I˚Out
–
OFF
 );

129 
	`Di•W©îOut
–
OFF
 );

130 
	`Di•I˚Makî
–
OFF
 );

131 
	`Di•SãrProgªssB¨
( 0 );

135 
	`EﬁCheckI≈ut
();

139 if–
	`GëEﬁEº‹Comm
(Ë=
TRUE
 )

141 
	`Di•I˚FuŒ
–
ON
 );

145 
U8
 
mu8ToggÀ
 = 0;

147 if(
Di•
.
BlökTime_5s
 == 0 )

149 
mu8ToggÀ
 = !mu8Toggle;

152 if–
mu8ToggÀ
 == 0 )

154 
	`Di•I˚FuŒ
–
ON
 );

158 
	`Di•I˚FuŒ
–
OFF
 );

162 
	`EﬁCheckI≈ut
();

171 if–
	`GëEﬁEº‹NFC
(Ë=
FALSE
 )

173 
U8
 
mu8ToggÀ
 = 0;

174 
U8
 
mu8BlökTime
 = 11;

176 if(
mu8BlökTime
 == 0 )

178 
mu8BlökTime
 = 11;

179 
mu8ToggÀ
 = !mu8Toggle;

181 
mu8BlökTime
--;

183 if–
	`GëEﬁEº‹NFC
(Ë=
FALSE
 )

185 if–
mu8ToggÀ
 == 0 )

187 
	`Di•Sãr
–
ON
 );

188 
	`Di•Døö
–
ON
 );

192 
	`Di•Sãr
–
OFF
 );

193 
	`Di•Døö
–
OFF
 );

199 
	}
}

201 
	$Di•œyEﬁLﬂdTe°
()

207 if–
	`GëEﬁTe°I≈utVÆ
(Ë=
MK_EOL_ALL
 )

209 
	`Tu∫OffAŒLED
();

211 
	`Di•I˚Out
–
OFF
 );

212 
	`Di•W©îOut
–
OFF
 );

213 
	`Di•I˚Makî
–
OFF
 );

214 
	`Di•SãrProgªssB¨
( 0 );

218 if–
	`GëW©îOutSñe˘
(Ë=
SEL_WATER_HOT
 )

220 
	`SëEﬁTe°I≈utBô
–
MK_EOL_KEY_HOT
 );

221 
	`CÀ¨EﬁTe°I≈utBô
–
MK_EOL_KEY_ROOM
 );

222 
	`CÀ¨EﬁTe°I≈utBô
–
MK_EOL_KEY_COLD
 );

224 if–
	`GëW©îOutSñe˘
(Ë=
SEL_WATER_ROOM
 )

226 
	`CÀ¨EﬁTe°I≈utBô
–
MK_EOL_KEY_HOT
 );

227 
	`SëEﬁTe°I≈utBô
–
MK_EOL_KEY_ROOM
 );

228 
	`CÀ¨EﬁTe°I≈utBô
–
MK_EOL_KEY_COLD
 );

232 
	`CÀ¨EﬁTe°I≈utBô
–
MK_EOL_KEY_HOT
 );

233 
	`CÀ¨EﬁTe°I≈utBô
–
MK_EOL_KEY_ROOM
 );

234 
	`SëEﬁTe°I≈utBô
–
MK_EOL_KEY_COLD
 );

236 
	`EﬁCheckI≈ut
();

239 
	}
}

242 
	$Pro˚ssDi•œyEﬁ
()

244 if–
	`GëEﬁTy≥
(Ë=
EOL_TYPE_FRONT
 )

247 
	`Di•œyEﬁFr⁄tTe°
();

252 
	`Di•œyEﬁLﬂdTe°
();

254 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display_eol.h

1 #i‚de‡
__DISPLAY_EOL_H__


2 
	#__DISPLAY_EOL_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"eﬁ.h
"

7 
Pro˚ssDi•œyEﬁ
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display_error.c

1 
	~"hw.h
"

2 
	~"hÆ_Àd.h
"

3 
	~"di•œy.h
"

5 
	~"îr‹.h
"

6 
	~"di•œy_îr‹.h
"

9 
EºTempCﬁd
(
U8
 
mu8Cmd
);

10 
EºTempHŸ
(
U8
 
mu8Cmd
);

12 
EºRoomLow
(
U8
 
mu8Cmd
);

13 
EºFìdVÆve
(
U8
 
mu8Cmd
);

14 
EºRoomHigh
(
U8
 
mu8Cmd
);

15 
EºRoomCom∂ex
(
U8
 
mu8Cmd
);

17 (*
	tA˘i⁄_T
)(
	tU8
 
	tmu8Cmd
);

18 
	s_îr‹_di•œy_li°_


20 
Eº‹Id_T
 
Id
;

21 
A˘i⁄_T
 
Di•A˘i⁄
;

23 } 
	tEºDi•œy_T
;

25 
EºDi•œy_T
 
EºDi•œyLi°
[] =

27 { 
ERR_TEMP_COLD_WATER
, 
EºTempCﬁd
 },

28 { 
ERR_TEMP_HOT_WATER
, 
EºTempHŸ
 },

30 { 
ERR_ROOM_OVF
, 
EºFìdVÆve
 },

31 { 
ERR_ROOM_COMPLEX
, 
EºRoomCom∂ex
 },

32 { 
ERR_ROOM_HIGH_LEVEL
, 
EºRoomHigh
 },

33 { 
ERR_ROOM_LOW_LEVEL
, 
EºRoomLow
 },

34 
	}
};

36 
	#SZ_LIST
 ( (
EºDi•œyLi°
Ë/ (
EºDi•œy_T
 ))

	)

39 
	$Di•œyEº‹
(
U8
 
mu8EºCode
, U8 
mu8Cmd
 )

41 
U8
 
i
;

42 
A˘i⁄_T
 
pA˘i⁄
 = 
NULL
;

45  
i
 = 0; i < 
SZ_LIST
 ; i++ )

47 if–
EºDi•œyLi°
[ 
i
 ].
Id
 =
mu8EºCode
 )

49 
pA˘i⁄
 = 
EºDi•œyLi°
[ 
i
 ].
Di•A˘i⁄
;

50 if–
pA˘i⁄
 !
NULL
 )

52 
	`pA˘i⁄
–
mu8Cmd
 );

57 
	}
}

62 
	$EºTempCﬁd
(
U8
 
mu8Cmd
)

65 
	`Comm⁄BôOnOff
–
COLD_WATER_WEAK
, 
mu8Cmd
 );

66 
	`Comm⁄BôOnOff
–
COLD_WATER_STRONG
, 
mu8Cmd
 );

67 
	`Comm⁄BôOnOff
–
HOT_WATER_WEAK
, 
OFF
 );

68 
	`Comm⁄BôOnOff
–
HOT_WATER_STRONG
, 
OFF
 );

69 
	}
}

73 
	$EºTempHŸ
(
U8
 
mu8Cmd
)

76 
	`Comm⁄BôOnOff
–
COLD_WATER_WEAK
, 
OFF
 );

77 
	`Comm⁄BôOnOff
–
COLD_WATER_STRONG
, 
OFF
 );

78 
	`Comm⁄BôOnOff
–
HOT_WATER_WEAK
, 
mu8Cmd
 );

79 
	`Comm⁄BôOnOff
–
HOT_WATER_STRONG
, 
mu8Cmd
 );

80 
	}
}

84 
	$EºRoomLow
(
U8
 
mu8Cmd
)

87 
	`Comm⁄BôOnOff
–
COLD_WATER_WEAK
, 
mu8Cmd
 );

88 
	`Comm⁄BôOnOff
–
COLD_WATER_STRONG
, 
OFF
 );

89 
	`Comm⁄BôOnOff
–
HOT_WATER_WEAK
, 
OFF
 );

90 
	`Comm⁄BôOnOff
–
HOT_WATER_STRONG
, 
OFF
 );

92 
	}
}

95 
	$EºFìdVÆve
(
U8
 
mu8Cmd
)

98 
	`Comm⁄BôOnOff
–
COLD_WATER_WEAK
, 
OFF
 );

99 
	`Comm⁄BôOnOff
–
COLD_WATER_STRONG
, 
mu8Cmd
 );

100 
	`Comm⁄BôOnOff
–
HOT_WATER_WEAK
, 
OFF
 );

101 
	`Comm⁄BôOnOff
–
HOT_WATER_STRONG
, 
mu8Cmd
 );

103 
	}
}

106 
	$EºRoomHigh
(
U8
 
mu8Cmd
)

109 
	`Comm⁄BôOnOff
–
COLD_WATER_WEAK
, 
OFF
 );

110 
	`Comm⁄BôOnOff
–
COLD_WATER_STRONG
, 
mu8Cmd
 );

111 
	`Comm⁄BôOnOff
–
HOT_WATER_WEAK
, 
OFF
 );

112 
	`Comm⁄BôOnOff
–
HOT_WATER_STRONG
, 
OFF
 );

114 
	}
}

117 
	$EºRoomCom∂ex
(
U8
 
mu8Cmd
)

120 
	`Comm⁄BôOnOff
–
COLD_WATER_WEAK
, 
OFF
 );

121 
	`Comm⁄BôOnOff
–
COLD_WATER_STRONG
, 
mu8Cmd
 );

122 
	`Comm⁄BôOnOff
–
HOT_WATER_WEAK
, 
OFF
 );

123 
	`Comm⁄BôOnOff
–
HOT_WATER_STRONG
, 
OFF
 );

124 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display_error.h

1 #i‚de‡
__DISPLAY_ERROR_H__


2 
	#__DISPLAY_ERROR_H__


	)

4 
	~"¥j_ty≥.h
"

6 
Di•œyEº‹
(
U8
 
mu8EºCode
, U8 
mu8ToggÀ
 );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\process_display.c

1 
	~"di•œy.h
"

2 
	~"¥o˚ss_di•œy.h
"

3 
	~"hÆ_Àd.h
"

5 
	~"room_w©î.h
"

6 
	~"cﬁd_w©î.h
"

7 
	~"hŸ_w©î.h
"

8 
	~"Temp.h
"

10 
	~"•ecül_mode.h
"

11 
	~"time_sh‹t.h
"

13 
	~"îr‹.h
"

14 
	~"sound.h
"

15 
	~"ì¥om.h
"

17 
	~"di•œy_îr‹.h
"

18 
	~"di•œy_eﬁ.h
"

24 
	s_di•œy_


26 
U8
 
	mMode
;

28 
U8
 
	mInô
;

29 
U8
 
	mVîsi⁄
;

30 
U8
 
	mVîsi⁄OnTime
;

32 
U16
 
	mBlökTime_5s
;

33 
U16
 
	mBlökTime_1s
;

34 
U16
 
	mBlökTime_4s
;

37 
U8
 
	mA…iC⁄fig
;

40 
U8
 
	mUnu£dSaveC⁄fig
;

41 
U16
 
	mUnu£dSaveTimeOut
;

44 
U8
 
	mAdju°HourC⁄fig
;

45 
U16
 
	mAdju°HourTimeOut
;

48 
U8
 
	mMemíto
;

49 
U8
 
	mMemítoSãp
;

50 
U8
 
	mMemítoTimî
;

52 
U16
 
	mC⁄figTime
;

53 } 
	tDi•œy_T
;

55 
Di•œy_T
 
	gDi•
;

58 
BlökLED
–(*
pFun
)(
U8
 
mu8OnOff
), 
U16
 
mu16Timî
, U16 
mu16Tick
 );

59 
	`BlökLEDRevî£
–(*
pFun
)(
U8
 
mu8OnOff
), 
U16
 
mu16Timî
, U16 
mu16Tick
 );

61 
	`Di•œyHŸTempLevñ
();

62 
	`Di•œyCﬁdTempLevñ
();

63 
	`Di•œyW©îLevñ
();

64 
U8
 
	`Di•œyAnim©i⁄
 ( );

65 
	`Upd©eTimî
();

66 
	`Pro˚ssDi•œyBoŸ
();

67 
	`Pro˚ssDi•œyC⁄fHŸA…ôude
();

68 
	`Pro˚ssDi•œyN‹mÆMode
();

69 
	`Pro˚ssDi•œyEº‹Mode
();

70 
	`Pro˚ssDi•œyVîsi⁄Mode
();

71 
	`Pro˚ssDi•œyMemítoMode
();

72 
	`Pro˚ssDi•œyTimeSh‹t
();

73 
	`Pro˚ssDi•œyS≥cülMode
();

75 
	$InôDi•œy
()

78 
Di•
.
BlökTime_5s
 = 0;

79 
Di•
.
BlökTime_1s
 = 0;

80 
Di•
.
BlökTime_4s
 = 0;

84 
Di•
.
Inô
 = 
FALSE
;

86 
Di•
.
Inô
 = 
TRUE
;

90 
Di•
.
A…iC⁄fig
 = 
FALSE
;

93 
Di•
.
Unu£dSaveC⁄fig
 = 
FALSE
;

94 
Di•
.
Unu£dSaveTimeOut
 = 0;

97 
Di•
.
Adju°HourC⁄fig
 = 
FALSE
;

98 
Di•
.
Adju°HourTimeOut
 = 0;

102 
Di•
.
Vîsi⁄
 = 
TRUE
;

103 
Di•
.
Vîsi⁄OnTime
 = 50;

105 
Di•
.
Vîsi⁄
 = 
FALSE
;

106 
Di•
.
Vîsi⁄OnTime
 = 0;

110 
Di•
.
C⁄figTime
 = 300;

112 
	`Tu∫OffAŒLED
();

113 
	}
}

115 
U8
 
	$GëDi•œyInô
()

117  
Di•
.
Inô
;

118 
	}
}

120 
	$SèπDi•œyInô
()

122 
Di•
.
Inô
 = 
FALSE
;

123 
	}
}

132 
BlökLED
–(*
pFun
)(
U8
 
mu8OnOff
), 
U16
 
mu16Timî
, U16 
mu16Tick
 )

134 if–
pFun
 =
NULL
 )

139 if–
mu16Timî
 > 
mu16Tick
 )

141 
	`pFun
–
ON
 );

145 
	`pFun
–
OFF
 );

147 
	}
}

148 
BlökLEDRevî£
–(*
pFun
)(
U8
 
mu8OnOff
), 
U16
 
mu16Timî
, U16 
mu16Tick
 )

150 if–
pFun
 =
NULL
 )

155 if–
mu16Timî
 > 
mu16Tick
 )

157 
	`pFun
–
OFF
 );

161 
	`pFun
–
ON
 );

163 
	}
}

169 
U8
 
	$GëA…idueC⁄fig
()

171  
Di•
.
A…iC⁄fig
;

172 
	}
}

174 
	$SëA…ôudeC⁄fig
(
U8
 
mu8C⁄f
 )

176 
Di•
.
A…iC⁄fig
 = 
mu8C⁄f
;

177 
	}
}

180 
U8
 
	$GëDi•Unu£dSaveC⁄fig
()

182  
Di•
.
Unu£dSaveC⁄fig
;

183 
	}
}

185 
	$SëDi•Unu£dSaveC⁄fig
(
U8
 
mu8C⁄f
 )

187 
Di•
.
Unu£dSaveC⁄fig
 = 
mu8C⁄f
;

188 i‡–
mu8C⁄f
 =
TRUE
 )

190 
Di•
.
Unu£dSaveTimeOut
 = 20;

192 
	}
}

196 
U8
 
	$GëDi•Adju°HourC⁄fig
()

198  
Di•
.
Adju°HourC⁄fig
;

199 
	}
}

201 
	$SëDi•Adju°HourC⁄fig
(
U8
 
mu8C⁄f
 )

203 
Di•
.
Adju°HourC⁄fig
 = 
mu8C⁄f
;

204 i‡–
mu8C⁄f
 =
TRUE
 )

206 
Di•
.
Adju°HourTimeOut
 = 50;

208 
	}
}

212 
U16
 
	$IsExpúedC⁄figTime
()

214 if–
Di•
.
C⁄figTime
 != 0 )

216  
FALSE
;

219  
TRUE
;

220 
	}
}

223 
	$SëVîsi⁄Di•
(
U8
 
mu8Di•Sec
)

225 
Di•
.
Vîsi⁄
 = 
TRUE
;

226 
Di•
.
Vîsi⁄OnTime
 = 
mu8Di•Sec
;

227 
	}
}

230 
U8
 
	$GëMemítoDi•
()

232  
Di•
.
Memíto
;

233 
	}
}

235 
	$SëMemítoDi•
(
U8
 
mu8C⁄f
 )

237 
Di•
.
Memíto
 = 
mu8C⁄f
;

238 
Di•
.
MemítoSãp
 = 0;

239 
Di•
.
MemítoTimî
 = 0;

240 
	}
}

242 
	$Pro˚ssDi•œy
()

244 
	`Upd©eTimî
();

247 if–
Di•
.
Inô
 =
FALSE
 )

249 
	`Pro˚ssDi•œyBoŸ
();

254 if–
Di•
.
Vîsi⁄
 =
TRUE
 )

256 
	`Pro˚ssDi•œyVîsi⁄Mode
();

261 if–
	`GëEﬁSètus
(Ë=
TRUE
 )

263 
	`Pro˚ssDi•œyEﬁ
();

268 if–
Di•
.
Memíto
 =
TRUE
 )

270 
	`Pro˚ssDi•œyMemítoMode
();

275 if–
	`GëEº‹Id
(Ë!
ERR_NONE
 )

277 
	`Pro˚ssDi•œyEº‹Mode
();

282 i‡–
	`GëS≥cülMode
(Ë=
SPECIAL_WAIT
 )

284 
	`Pro˚ssDi•œyS≥cülMode
();

289 if–
	`GëS≥cülMode
(Ë=
SPECIAL_HOT_ALTITUDE
 )

291 
	`Pro˚ssDi•œyC⁄fHŸA…ôude
();

296 if–
	`GëTimeSh‹tSètus
(Ë=
TRUE
 )

298 
	`Pro˚ssDi•œyTimeSh‹t
();

303 
	`Pro˚ssDi•œyN‹mÆMode
();

304 
	}
}

308 
	$Upd©eTimî
()

311 if–
Di•
.
BlökTime_5s
 == 0 )

313 
Di•
.
BlökTime_5s
 = 6;

315 
Di•
.
BlökTime_5s
--;

317 if–
Di•
.
BlökTime_1s
 == 0 )

319 
Di•
.
BlökTime_1s
 = 11;

321 
Di•
.
BlökTime_1s
--;

323 if–
Di•
.
BlökTime_4s
 == 0 )

325 
Di•
.
BlökTime_4s
 = 41;

327 
Di•
.
BlökTime_4s
--;

330 if–
Di•
.
C⁄figTime
 != 0 )

332 
Di•
.
C⁄figTime
--;

335 if–
Di•
.
Vîsi⁄OnTime
 != 0 )

337 
Di•
.
Vîsi⁄OnTime
--;

339 
	}
}

342 
	$Pro˚ssDi•œyBoŸ
()

344 
U8
 
mu8Cou¡
 = 5;

345 
U8
 
mu8ToggÀ
 = 0;

347 if–
Di•
.
BlökTime_5s
 == 0 )

349 
mu8ToggÀ
 = !mu8Toggle;

351 
mu8Cou¡
--;

352 if–
mu8Cou¡
 == 0 )

354 
mu8Cou¡
 = 5;

355 
Di•
.
Inô
 = 
TRUE
;

360 if–
mu8ToggÀ
 == 0 )

362 
	`Tu∫OffAŒLED
();

366 
	`Tu∫OnAŒLED
();

368 
	}
}

371 
	$Pro˚ssDi•œyS≥cülMode
()

373 
	`BlökLED
–
Di•HŸW©îWók
, 
Di•
.
BlökTime_1s
, 5 );

374 
	`BlökLED
–
Di•CﬁdW©îWók
, 
Di•
.
BlökTime_1s
, 5 );

375 
	`BlökLEDRevî£
–
Di•HŸW©îSå⁄g
, 
Di•
.
BlökTime_1s
, 5 );

376 
	`BlökLEDRevî£
–
Di•CﬁdW©îSå⁄g
, 
Di•
.
BlökTime_1s
, 5 );

377 
	}
}

380 
	$Pro˚ssDi•œyC⁄fHŸA…ôude
()

382 
U8
 
mu8A…ôude
;

386 
mu8A…ôude
 = 
	`GëHŸW©îA…idue
();

387 
	`Tu∫OffAŒLED
();

389  
mu8A…ôude
 )

391 
ALTITUDE_LEVEL_0
 :

393 
	`BlökLED
–
Di•HŸW©îWók
, 
Di•
.
BlökTime_5s
, 3 );

396 
ALTITUDE_LEVEL_1
 :

398 
	`BlökLED
–
Di•HŸW©îSå⁄g
, 
Di•
.
BlökTime_5s
, 3 );

401 
ALTITUDE_LEVEL_2
 :

403 
	`BlökLED
–
Di•HŸW©îWók
, 
Di•
.
BlökTime_5s
, 3 );

404 
	`BlökLED
–
Di•HŸW©îSå⁄g
, 
Di•
.
BlökTime_5s
, 3 );

407 
ALTITUDE_LEVEL_3
 :

409 
	`Tu∫OffAŒLED
();

413 
	`Tu∫OffAŒLED
();

416 
	}
}

421 
	$Pro˚ssDi•œyVîsi⁄Mode
()

423 
U8
 
mu8Vîsi⁄Bô_1
;

424 
U8
 
mu8Vîsi⁄Bô_2
;

425 
U8
 
mu8Remaödî
;

427 if–
Di•
.
Vîsi⁄OnTime
 == 0 )

429 
Di•
.
Vîsi⁄
 = 
FALSE
;

433 
	`Tu∫OffAŒLED
();

436 
mu8Remaödî
 = 
VERSION
 % 3;

437 i‡–
mu8Remaödî
 == 0 )

439 
mu8Remaödî
 = 0x03;

442 
mu8Vîsi⁄Bô_1
 = ( 
mu8Remaödî
 & 0x01 );

443 
mu8Vîsi⁄Bô_2
 = ( 
mu8Remaödî
 & 0x02 );

445 i‡–
mu8Vîsi⁄Bô_1
 == 0x01 )

447 
	`BlökLED
–
Di•CﬁdW©îWók
, 
Di•
.
BlökTime_1s
, 5 );

450 i‡–
mu8Vîsi⁄Bô_2
 == 0x02 )

452 
	`BlökLED
–
Di•CﬁdW©îSå⁄g
, 
Di•
.
BlökTime_1s
, 5 );

455 
	}
}

458 
	$Di•MemítoId
(
U8
 
mu8Id
, 
SoundId_T
 
mSoundId
)

460 
Memíto_T
 
mMemíto
;

462 
	`GëMemítoEº‹
–
mu8Id
, &
mMemíto
 );

463 if–
mMemíto
.
Eº‹
 =
ERR_NONE
 )

465 
Di•
.
MemítoSãp
 = 0;

470 
	`Di•œyEº‹
–
mMemíto
.
Eº‹
, 
ON
 );

471 
	`Sound
–
mSoundId
 );

472 
Di•
.
MemítoTimî
 = 50;

474 
Di•
.
MemítoSãp
++;

476 
	}
}

478 
	$Pro˚ssDi•œyMemítoMode
()

481 if–
Di•
.
MemítoTimî
 != 0 )

483 
Di•
.
MemítoTimî
--;

491  
Di•
.
MemítoSãp
 )

494 
	`Tu∫OnAŒLED
();

495 
Di•
.
MemítoTimî
 = 10;

497 
Di•
.
MemítoSãp
++;

501 
	`Tu∫OffAŒLED
();

502 
Di•
.
MemítoTimî
 = 10;

504 
Di•
.
MemítoSãp
++;

508 
	`Di•MemítoId
–4, 
SOUND_MEMENTO_1
 );

512 
	`Tu∫OffAŒLED
();

513 
Di•
.
MemítoTimî
 = 10;

514 
Di•
.
MemítoSãp
++;

518 
	`Di•MemítoId
–3, 
SOUND_MEMENTO_2
 );

523 
	`Tu∫OffAŒLED
();

524 
Di•
.
MemítoTimî
 = 10;

525 
Di•
.
MemítoSãp
++;

529 
	`Di•MemítoId
–2, 
SOUND_MEMENTO_3
 );

533 
	`Tu∫OffAŒLED
();

534 
Di•
.
MemítoTimî
 = 10;

535 
Di•
.
MemítoSãp
++;

539 
	`Di•MemítoId
–1, 
SOUND_MEMENTO_4
 );

543 
	`Tu∫OffAŒLED
();

544 
Di•
.
MemítoTimî
 = 10;

545 
Di•
.
MemítoSãp
++;

549 
	`Di•MemítoId
–0, 
SOUND_MEMENTO_5
 );

553 
	`Tu∫OffAŒLED
();

554 
Di•
.
MemítoTimî
 = 10;

555 
Di•
.
MemítoSãp
 = 0;

561 
	}
}

564 
	$Pro˚ssDi•œyEº‹Mode
()

566 
Eº‹Id_T
 
mu8PªvEº
 = 0;

567 
Eº‹Id_T
 
mu8CurEº
 = 0;

569 
U8
 
mu8Cmd
 = 0;

570 
U8
 
mu8Cou¡î
 = 10;

574 
mu8CurEº
 = 
	`GëEº‹Id
();

577 if–
mu8CurEº
 =
ERR_NONE
 )

579 
mu8Cmd
 = 0;

580 
mu8Cou¡î
 = 10;

584 
mu8Cou¡î
--;

585 if–
mu8Cou¡î
 == 0 )

587 
mu8Cou¡î
 = 10;

591 if–
mu8Cou¡î
 <= 5 )

593 
mu8Cmd
 = 0;

597 
mu8Cmd
 = 1;

600 
	`Di•œyEº‹
–
mu8CurEº
, 
mu8Cmd
 );

604 if–
mu8PªvEº
 !
mu8CurEº
 )

606 
mu8PªvEº
 = 
mu8CurEº
;

608 
	}
}

611 
	$Pro˚ssDi•œyN‹mÆMode
()

614 
	`Di•œyHŸTempLevñ
();

615 
	`Di•œyCﬁdTempLevñ
();

616 
	}
}

618 
	$Pro˚ssDi•œyTimeSh‹t
()

620 
U8
 
mu8Sãp
 = 0;

621 
U8
 
mu8Rë
;

623  
mu8Sãp
 )

627 
mu8Rë
 = 
	`Di•œyAnim©i⁄
();

628 i‡–
mu8Rë
 =
TRUE
 )

630 
mu8Sãp
++;

637 
mu8Sãp
++;

642 
	`Di•œyHŸTempLevñ
();

643 
	`Di•œyW©îLevñ
();

646 
	}
}

648 
	$Di•œyHŸTempLevñ
()

650 
TEMP_T
 
mTempHŸOn
;

651 
TEMP_T
 
mTempHŸOff
;

652 
TEMP_T
 
mTempHŸCuºít
;

654 
U8
 
mu8HŸA…ôude
;

655 
mu8HŸA…ôude
 = 
	`GëHŸW©îA…idue
();

657 
mTempHŸOn
 = 
	`GëT¨gëHŸOnTemp
–
mu8HŸA…ôude
 );

658 
mTempHŸOff
 = 
	`GëT¨gëHŸOffTemp
–
mu8HŸA…ôude
 );

659 
mTempHŸCuºít
 = 
	`GëTemp
–
TEMP_ID_HOT_WATER
 );

662 if–
	`GëHŸW©îC⁄figMake
(Ë=
ON
 )

664 
	`Di•HŸW©îWók
–
ON
 );

666 i‡–
mTempHŸCuºít
 > 
mTempHŸOff
 )

668 
	`Di•HŸW©îSå⁄g
–
ON
 );

670 i‡–
mTempHŸCuºít
 < 
mTempHŸOn
 )

672 
	`Di•HŸW©îSå⁄g
–
OFF
 );

681 
	`Di•HŸW©îWók
–
OFF
 );

682 
	`Di•HŸW©îSå⁄g
–
OFF
 );

684 
	}
}

686 
	$Di•œyCﬁdTempLevñ
()

688 
TEMP_T
 
mTempCﬁdOn
;

689 
TEMP_T
 
mTempCﬁdOff
;

690 
TEMP_T
 
mTempCﬁdCuºít
;

692 
mTempCﬁdOn
 = 
	`GëT¨gëCﬁdOnTemp
();

693 
mTempCﬁdOff
 = 
	`GëT¨gëCﬁdOffTemp
();

694 
mTempCﬁdCuºít
 = 
	`GëTemp
–
TEMP_ID_COLD_WATER
 );

697 if–
	`GëCﬁdW©îC⁄figMake
(Ë=
ON
 )

699 
	`Di•CﬁdW©îWók
–
ON
 );

701 i‡–
mTempCﬁdCuºít
 < 
mTempCﬁdOff
 )

703 
	`Di•CﬁdW©îSå⁄g
–
ON
 );

705 i‡–
mTempCﬁdCuºít
 > 
mTempCﬁdOn
 )

707 
	`Di•CﬁdW©îSå⁄g
–
OFF
 );

716 
	`Di•CﬁdW©îWók
–
OFF
 );

717 
	`Di•CﬁdW©îSå⁄g
–
OFF
 );

720 
	}
}

722 
	$Di•œyW©îLevñ
()

724 
U8
 
mu8Levñ
;

726 
mu8Levñ
 = 
	`GëRoomW©îLevñ
();

728 i‡–
mu8Levñ
 =
LEVEL_HIGH
 )

730 
	`Di•CﬁdW©îWók
–
ON
 );

731 
	`Di•CﬁdW©îSå⁄g
–
ON
 );

733 i‡–
mu8Levñ
 =
LEVEL_MID
 )

735 
	`Di•CﬁdW©îWók
–
ON
 );

736 
	`Di•CﬁdW©îSå⁄g
–
OFF
 );

740 
	`Di•CﬁdW©îWók
–
OFF
 );

741 
	`Di•CﬁdW©îSå⁄g
–
OFF
 );

744 
	}
}

746 
U8
 
	$Di•œyAnim©i⁄
 ( )

748 
U16
 
mu16Cou¡
 = 12;

749 
U8
 
mu8Rë
 = 
FALSE
;

751 i‡–
mu16Cou¡
 > 9 )

753 
	`Di•HŸW©îWók
–
OFF
 );

754 
	`Di•HŸW©îSå⁄g
–
OFF
 );

755 
	`Di•CﬁdW©îSå⁄g
 ( 
OFF
 );

756 
	`Di•CﬁdW©îWók
–
ON
 );

758 i‡–
mu16Cou¡
 > 6 )

760 
	`Di•HŸW©îWók
–
OFF
 );

761 
	`Di•HŸW©îSå⁄g
–
OFF
 );

762 
	`Di•CﬁdW©îSå⁄g
–
ON
 );

763 
	`Di•CﬁdW©îWók
–
OFF
 );

765 i‡–
mu16Cou¡
 > 3 )

767 
	`Di•HŸW©îWók
–
ON
 );

768 
	`Di•HŸW©îSå⁄g
–
OFF
 );

769 
	`Di•CﬁdW©îSå⁄g
–
OFF
 );

770 
	`Di•CﬁdW©îWók
–
OFF
 );

772 i‡–
mu16Cou¡
 > 0 )

774 
	`Di•HŸW©îWók
–
OFF
 );

775 
	`Di•HŸW©îSå⁄g
–
ON
 );

776 
	`Di•CﬁdW©îSå⁄g
–
OFF
 );

777 
	`Di•CﬁdW©îWók
–
OFF
 );

781 
	`SëVîsi⁄Di•
 ( 20 );

784 i‡–
mu16Cou¡
 != 0 )

786 
mu16Cou¡
--;

787 
mu8Rë
 = 
FALSE
;

791 
mu8Rë
 = 
TRUE
;

794  
mu8Rë
;

795 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\process_display.h

1 #i‚de‡
__PROCESS_DISPLAY_H__


2 
	#__PROCESS_DISPLAY_H__


	)

4 
	~"¥j_ty≥.h
"

7 
InôDi•œy
();

10 
U8
 
GëDi•œyInô
();

11 
SèπDi•œyInô
();

14 
U8
 
GëA…idueC⁄fig
();

15 
SëA…ôudeC⁄fig
(
U8
 
mu8C⁄f
 );

18 
U8
 
GëDi•Unu£dSaveC⁄fig
();

19 
SëDi•Unu£dSaveC⁄fig
(
U8
 
mu8C⁄f
 );

22 
U8
 
GëDi•Adju°HourC⁄fig
();

23 
SëDi•Adju°HourC⁄fig
(
U8
 
mu8C⁄f
 );

27 
U16
 
IsExpúedC⁄figTime
();

30 
SëVîsi⁄Di•
(
U8
 
mu8Di•Sec
);

33 
U8
 
GëMemítoDi•
();

34 
SëMemítoDi•
(
U8
 
mu8C⁄f
 );

38 
Pro˚ssDi•œy
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eeprom\eeprom.c

1 
	~"hÆ_ì¥om.h
"

2 
	~"ì¥om.h
"

3 
	~"utû.h
"

4 
	~"¸c16.h
"

6 
	~"time_sh‹t.h
"

7 
	~"¥o˚ss_di•œy.h
"

9 
	~"hŸ_w©î.h
"

10 
	~"cﬁd_w©î.h
"

11 
	~"îr‹.h
"

15 
	#EEP_ADDR_OFFSET
 0x0010

	)

21 
	mEEP_BLOCK_NONE
,

22 
	mEEP_BLOCK_0
,

23 
	mEEP_BLOCK_1
,

28 
	mNUM_EEP_BLOCK


29 } 
	tEïromBlock_T
;

31 
	s_ì¥om_c⁄åﬁ_


34 
U8
 
	mInô
;

35 
U8
 
	mWrôe
;

36 
U8
 
	mEø£
;

37 
U8
 
	mFa˘‹yRe£t
;

39 
U16
 
	mDñayTime
;

40 
U8
 
	mRódD©a
[ 
EEP_PAGE_SIZE
 ];

41 
U8
 
	mWrôeD©a
[ 
EEP_PAGE_SIZE
 ];

42 } 
	tEEP_C⁄åﬁ_T
;

45 
EEP_C⁄åﬁ_T
 
	gEï
;

48 
U8
 
RódD©aBlocks
();

49 
U8
 
WrôeD©aBlocks
();

50 
InôBlockTabÀAŒSë
();

52 
	$InôEïrom
()

54 
Eï
.
Inô
 = 
FALSE
;

55 
Eï
.
Eø£
 = 
FALSE
;

56 
Eï
.
Fa˘‹yRe£t
 = 
FALSE
;

58 if–
	`RódD©aBlocks
(Ë=
TRUE
 )

61 
Eï
.
Inô
 = 
TRUE
;

66 
Eï
.
Fa˘‹yRe£t
 = 
TRUE
;

68 
	`InôBlockTabÀAŒSë
();

69 
	`WrôeD©aBlocks
();

75 
Eï
.
Wrôe
 = 
FALSE
;

76 
Eï
.
DñayTime
 = 0;

77 
	}
}

79 
	s_ì¥om_block_m≠_


81 
EïromId_T
 
	mid
;

82 
EïromBlock_T
 
	mblockId
;

83 } 
	tEïromM≠_T
;

85 c⁄° 
EïromM≠_T
 
	gEïromM≠pögTabÀ
[] =

87 { 
EEP_ID_CONF_MAKE_COLD
, 
EEP_BLOCK_0
 },

88 { 
EEP_ID_CONF_MAKE_HOT
, 
EEP_BLOCK_0
 },

89 { 
EEP_ID_HOT_ALTITUDE
, 
EEP_BLOCK_0
 },

91 { 
EEP_ID_MEMENTO_1
, 
EEP_BLOCK_1
 },

92 { 
EEP_ID_MEMENTO_2
, 
EEP_BLOCK_1
 },

93 { 
EEP_ID_MEMENTO_3
, 
EEP_BLOCK_1
 },

94 { 
EEP_ID_MEMENTO_4
, 
EEP_BLOCK_1
 },

95 { 
EEP_ID_MEMENTO_5
, 
EEP_BLOCK_1
 },

98 
	#SZ_EEPROM_MAPPING_TABLE
 ((
EïromM≠pögTabÀ
)/(
EïromM≠_T
))

	)

101 
EïromBlock_T
 
	$GëBlockId
(
EïromId_T
 
mu8Id
 )

103 
U8
 
i
;

105  
i
 = 0; i < 
SZ_EEPROM_MAPPING_TABLE
; i++ )

107 if–
mu8Id
 =
EïromM≠pögTabÀ
[ 
i
 ].
id
 )

109  
EïromM≠pögTabÀ
[ 
i
 ].
blockId
;

113  
EEP_BLOCK_NONE
;

114 
	}
}

117 
	$U8
 (*
	tA˘i⁄_T
)(
	tEïromBlock_T
);

118 
	s_ì¥om_block_èbÀ_


120 
EïromBlock_T
 
blockId
;

121 
U8
 
wrôe
;

122 
A˘i⁄_T
 
pWrôeA˘i⁄
;

123 
A˘i⁄_T
 
pRódA˘i⁄
;

124 }
	tEïBlockTabÀ_T
;

126 
U8
 
	`WrôeBlock0
(
EïromBlock_T
 
mBlockId
);

127 
U8
 
	`RódBlock0
(
EïromBlock_T
 
mBlockId
);

128 
U8
 
	`WrôeBlock1
(
EïromBlock_T
 
mBlockId
);

129 
U8
 
	`RódBlock1
(
EïromBlock_T
 
mBlockId
);

131 
U8
 
	`WrôeBlock2
(
EïromBlock_T
 
mBlockId
);

132 
U8
 
	`RódBlock2
(
EïromBlock_T
 
mBlockId
);

133 
U8
 
	`WrôeBlock3
(
EïromBlock_T
 
mBlockId
);

134 
U8
 
	`RódBlock3
(
EïromBlock_T
 
mBlockId
);

135 
U8
 
	`WrôeBlock4
(
EïromBlock_T
 
mBlockId
);

136 
U8
 
	`RódBlock4
(
EïromBlock_T
 
mBlockId
);

139 
EïBlockTabÀ_T
 
EïromBlockTabÀLi°
[] =

141 { 
EEP_BLOCK_0
, 
FALSE
, 
WrôeBlock0
, 
RódBlock0
 },

142 { 
EEP_BLOCK_1
, 
FALSE
, 
WrôeBlock1
, 
RódBlock1
 },

143 
	}
};

144 
	#SZ_BLOCK_TABLE
 ((
EïromBlockTabÀLi°
)/(
EïBlockTabÀ_T
))

	)

146 
	$InôBlockTabÀAŒSë
()

148 
U8
 
i
;

150  
i
 = 0; i < 
SZ_BLOCK_TABLE
; i++ )

152 
EïromBlockTabÀLi°
[ 
i
 ].
wrôe
 = 
TRUE
;

154 
	}
}

156 
	$SëBlockWrôe
–
EïromBlock_T
 
muBlockId
 )

158 
U8
 
i
;

160  
i
 = 0; i < 
SZ_BLOCK_TABLE
; i++ )

162 if–
muBlockId
 =
EïromBlockTabÀLi°
[ 
i
 ].
blockId
 )

164 
EïromBlockTabÀLi°
[ 
i
 ].
wrôe
 = 
TRUE
;

167 
	}
}

170 
	$SaveEïromId
–
EïromId_T
 
mu8Id
 )

172 
EïromBlock_T
 
muBlockId
;

174 if–
mu8Id
 > 
EEP_ID_NUM
 )

179 
Eï
.
DñayTime
 = 1;

180 
Eï
.
Wrôe
 = 
TRUE
;

182 
muBlockId
 = 
	`GëBlockId
–
mu8Id
 );

183 if–
muBlockId
 !
EEP_BLOCK_NONE
 )

185 
	`SëBlockWrôe
–
muBlockId
 );

187 
	}
}

189 
	$Eø£Eïrom
()

191 
Eï
.
Wrôe
 = 
TRUE
;

192 
Eï
.
Eø£
 = 
TRUE
;

193 
	}
}

196 
U8
 
	$EïromPageWrôe
–
U16
 
mu16Addr
, 
U8
 *
pD©a
 )

203 
mu16Addr
 +
EEP_ADDR_OFFSET
;

204  
	`HAL_RTC_PageWrôe
–
DEV_ADDR_EEP
, 
mu16Addr
, 
pD©a
, 
EEP_PAGE_SIZE
);

205 
	}
}

207 
U8
 
	$EïromSeqRód
–
U16
 
mu16Addr
, 
U8
 *
pD©a
, U8 
mu16Lígth
 )

214 
mu16Addr
 +
EEP_ADDR_OFFSET
;

215  
	`HAL_RTC_SeqRód
–
DEV_ADDR_EEP
, 
mu16Addr
, 
pD©a
, 
mu16Lígth
 );

216 
	}
}

219 
U8
 
	$WrôeBlock0
(
EïromBlock_T
 
mBlockId
)

221 
U16
 
mu16CheckSum
 = 0U;

223 
Eï
.
WrôeD©a
[ 0 ] = 
	`GëCﬁdW©îC⁄figMake
();

224 
Eï
.
WrôeD©a
[ 1 ] = 
	`GëHŸW©îC⁄figMake
();

225 
Eï
.
WrôeD©a
[ 2 ] = 
	`GëHŸW©îA…idue
();

226 
Eï
.
WrôeD©a
[ 3 ] = 0;

227 
Eï
.
WrôeD©a
[ 4 ] = 0;

228 
Eï
.
WrôeD©a
[ 5 ] = 0;

229 
Eï
.
WrôeD©a
[ 6 ] = 0;

230 
Eï
.
WrôeD©a
[ 7 ] = 0;

231 
mu16CheckSum
 = 
	`¸c16_ˇl
–&
Eï
.
WrôeD©a
[0], (
EEP_PAGE_SIZE
 - 2) );

233 
Eï
.
WrôeD©a
[
EEP_PAGE_SIZE
 - 2] = 
	`GET_HIGH_BYTE
–
mu16CheckSum
 );

234 
Eï
.
WrôeD©a
[
EEP_PAGE_SIZE
 - 1] = 
	`GET_LOW_BYTE
–
mu16CheckSum
 );

238  
	`EïromPageWrôe
–((
U16
)
mBlockId
 * 
EEP_PAGE_SIZE
Ë, &
Eï
.
WrôeD©a
[0] );

239 
	}
}

241 
U8
 
	$RódBlockId
(
U8
 
mu8BlockId
, U8 *
pBuf
)

243 
U8
 
mu8Rë
;

244 
U16
 
mu16SrcChksum
 = 0U;

245 
U16
 
mu16CÆcChksum
 = 0U;

249 
mu8Rë
 = 
	`EïromSeqRód
–((
U16
)
mu8BlockId
 * 
EEP_PAGE_SIZE
 ), 
pBuf
, EEP_PAGE_SIZE );

250 if–
mu8Rë
 =
FALSE
 )

252  
FALSE
;

256 
mu16SrcChksum
 = 
	`GET_UINT_WORD
–
pBuf
[
EEP_PAGE_SIZE
 - 1],ÖBuf[EEP_PAGE_SIZE - 2] );

257 
mu16CÆcChksum
 = 
	`¸c16_ˇl
–
pBuf
, (
EEP_PAGE_SIZE
 - 2) );

258 if–
mu16SrcChksum
 !
mu16CÆcChksum
 )

260  
FALSE
;

263  
TRUE
;

264 
	}
}

266 
U8
 
	$RódBlock0
(
EïromBlock_T
 
mBlockId
)

268 
U8
 
mu8Rë
;

270 
mu8Rë
 = 
	`RódBlockId
–
mBlockId
, &
Eï
.
RódD©a
[0] );

271 if–
mu8Rë
 =
FALSE
 )

273  
FALSE
;

277 
	`SëCﬁdW©îC⁄figMake
–
Eï
.
RódD©a
[0] );

278 
	`SëHŸW©îC⁄figMake
–
Eï
.
RódD©a
[1] );

279 
	`SëHŸW©îA…idue
–
Eï
.
RódD©a
[2] );

281  
TRUE
;

282 
	}
}

284 
U8
 
	$WrôeBlock1
(
EïromBlock_T
 
mBlockId
)

286 
U16
 
mu16CheckSum
 = 0U;

288 
Memíto_T
 
mMemíto
;

292 
	`GëMemítoEº‹
–0, &
mMemíto
 );

293 
Eï
.
WrôeD©a
[ 0 ] = 
mMemíto
.
Eº‹
;

296 
	`GëMemítoEº‹
–1, &
mMemíto
 );

297 
Eï
.
WrôeD©a
[ 1 ] = 
mMemíto
.
Eº‹
;

300 
	`GëMemítoEº‹
–2, &
mMemíto
 );

301 
Eï
.
WrôeD©a
[ 2 ] = 
mMemíto
.
Eº‹
;

304 
	`GëMemítoEº‹
–3, &
mMemíto
 );

305 
Eï
.
WrôeD©a
[ 3 ] = 
mMemíto
.
Eº‹
;

308 
	`GëMemítoEº‹
–4, &
mMemíto
 );

309 
Eï
.
WrôeD©a
[ 4 ] = 
mMemíto
.
Eº‹
;

311 
mu16CheckSum
 = 
	`¸c16_ˇl
–&
Eï
.
WrôeD©a
[0], (
EEP_PAGE_SIZE
 - 2) );

313 
Eï
.
WrôeD©a
[
EEP_PAGE_SIZE
 - 2] = 
	`GET_HIGH_BYTE
–
mu16CheckSum
 );

314 
Eï
.
WrôeD©a
[
EEP_PAGE_SIZE
 - 1] = 
	`GET_LOW_BYTE
–
mu16CheckSum
 );

318  
	`EïromPageWrôe
–((
U16
)
mBlockId
 * 
EEP_PAGE_SIZE
Ë, &
Eï
.
WrôeD©a
[0] );

319 
	}
}

321 
U8
 
	$RódBlock1
(
EïromBlock_T
 
mBlockId
)

323 
U8
 
mu8Rë
;

324 
Memíto_T
 
mMemíto
;

327 
mu8Rë
 = 
	`RódBlockId
–
mBlockId
, &
Eï
.
RódD©a
[0] );

328 if–
mu8Rë
 =
FALSE
 )

330  
FALSE
;

333 
mMemíto
.
D©e
.
u16Yór
 = 0;

334 
mMemíto
.
D©e
.
u8M⁄th
 = 0;

335 
mMemíto
.
D©e
.
u8D©e
 = 0;

338 
mMemíto
.
Eº‹
 = 
Eï
.
RódD©a
[0];

339 
	`SëMemítoEº‹
–0, 
mMemíto
.
Eº‹
, &mMemíto.
D©e
 );

341 
mMemíto
.
Eº‹
 = 
Eï
.
RódD©a
[1];

342 
	`SëMemítoEº‹
–1, 
mMemíto
.
Eº‹
, &mMemíto.
D©e
 );

344 
mMemíto
.
Eº‹
 = 
Eï
.
RódD©a
[2];

345 
	`SëMemítoEº‹
–2, 
mMemíto
.
Eº‹
, &mMemíto.
D©e
 );

347 
mMemíto
.
Eº‹
 = 
Eï
.
RódD©a
[3];

348 
	`SëMemítoEº‹
–3, 
mMemíto
.
Eº‹
, &mMemíto.
D©e
 );

350 
mMemíto
.
Eº‹
 = 
Eï
.
RódD©a
[4];

351 
	`SëMemítoEº‹
–4, 
mMemíto
.
Eº‹
, &mMemíto.
D©e
 );

353  
TRUE
;

354 
	}
}

357 
U8
 
	$WrôeD©aBlocks
()

359 
U8
 
i
 = 0;

360 vﬁ©ûê
U8
 
mu8Rë
 = 
TRUE
;

361 
EïromBlock_T
 
mBlockId
;

363  
i
 = 0; i < 
SZ_BLOCK_TABLE
 ; i++ )

365 if–
EïromBlockTabÀLi°
[ 
i
 ].
wrôe
 =
TRUE
 )

367 if–
EïromBlockTabÀLi°
[ 
i
 ].
pWrôeA˘i⁄
 !
NULL
 )

369 
mBlockId
 = 
EïromBlockTabÀLi°
[ 
i
 ].
blockId
;

370 
mu8Rë
 = 
EïromBlockTabÀLi°
[ 
i
 ].
	`pWrôeA˘i⁄
–
mBlockId
 );

371 if–
mu8Rë
 =
TRUE
 )

373 
EïromBlockTabÀLi°
[ 
i
 ].
wrôe
 = 
FALSE
;

378 
EïromBlockTabÀLi°
[ 
i
 ].
wrôe
 = 
FALSE
;

383  
TRUE
;

384 
	}
}

387 
U8
 
	$RódD©aBlocks
()

389 
U8
 
i
 = 0;

390 vﬁ©ûê
U8
 
mu8Rë
 = 
TRUE
;

391 
EïromBlock_T
 
mBlockId
;

394  
i
 = 0; i < 
SZ_BLOCK_TABLE
 ; i++ )

396 if–
EïromBlockTabÀLi°
[ 
i
 ].
pRódA˘i⁄
 !
NULL
 )

398 
mBlockId
 = 
EïromBlockTabÀLi°
[ 
i
 ].
blockId
;

399 
mu8Rë
 = 
EïromBlockTabÀLi°
[ 
i
 ].
	`pRódA˘i⁄
–
mBlockId
 );

400 if–
mu8Rë
 =
FALSE
 )

402  
FALSE
;

407  
TRUE
;

408 
	}
}

411 
	$Pro˚ssEïrom
()

415 if–
	`GëTimeSh‹tSètus
(Ë=
TRUE
 )

417 
Eï
.
Wrôe
 = 
FALSE
;

428 if–
Eï
.
Wrôe
 =
FALSE
 )

434 if–
Eï
.
DñayTime
 != 0 )

436 
Eï
.
DñayTime
--;

443 if–
Eï
.
Eø£
 =
TRUE
 )

446 if–
	`HAL_RTC_EEPROM_AŒEø£
(Ë=
TRUE
 )

448 
Eï
.
Wrôe
 = 
FALSE
;

449 
Eï
.
Eø£
 = 
FALSE
;

450 
	`Re£t
();

455 
	`WrôeD©aBlocks
();

456 
Eï
.
Wrôe
 = 
FALSE
;

460 
	}
}

462 
U8
 
	$Te°Eïrom
()

464 vﬁ©ûê
U8
 
mu8Rë
 = 0;

465 vﬁ©ûê
U8
 
mu8Ród
 = 0;

466 
U16
 
mu16Addr
;

472 
mu16Addr
 = (
EEP_BLOCK_0
 * 
EEP_PAGE_SIZE
Ë+ 
EEP_ADDR_OFFSET
;

473 
	`HAL_RTC_ByãWrôe
–
DEV_ADDR_EEP
, 
mu16Addr
, 0x12 );

474 
	`HAL_RTC_ByãRód
–
DEV_ADDR_EEP
, 
mu16Addr
, &
mu8Ród
 );

477 if–
mu8Ród
 == 0x12 )

479  
TRUE
;

482  
FALSE
;

483 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eeprom\eeprom.h

1 #i‚de‡
__EEPROM_H__


2 
	#__EEPROM_H__


	)

4 
	~"¥j_ty≥.h
"

9 
	mEEP_ID_CONF_MAKE_COLD
,

10 
	mEEP_ID_CONF_MAKE_HOT
,

11 
	mEEP_ID_CONF_NONE_1
,

12 
	mEEP_ID_CONF_NONE_2
,

13 
	mEEP_ID_HOT_ALTITUDE
,

15 
	mEEP_ID_MEMENTO_1
,

16 
	mEEP_ID_MEMENTO_2
,

17 
	mEEP_ID_MEMENTO_3
,

18 
	mEEP_ID_MEMENTO_4
,

19 
	mEEP_ID_MEMENTO_5
,

21 
	mEEP_ID_NUM


22 } 
	tEïromId_T
;

24 
InôEïrom
();

26 
SaveEïromId
–
EïromId_T
 
mu8Id
 );

28 
Eø£Eïrom
();

30 
Pro˚ssEïrom
();

32 
U8
 
Te°Eïrom
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\eol.c

1 
	~"eﬁ.h
"

4 
	#DEFAULT_LIMIT_TIME_VALUE
 300U

	)

5 
	#DEFAULT_COMM_ERR_TIMER
 30U

	)

7 
	s_íd_of_löe_


9 
U8
 
	mSètus
;

10 
U8
 
	mTy≥
;

11 
U8
 
	mMode
;

14 
U32
 
	mI≈utTe°
;

17 
U8
 
	mmu8LﬂdComm
;

20 
U8
 
	mEºComm
;

22 
U16
 
	mTe°Timî
;

23 
U16
 
	mLimôTimî
;

24 
U16
 
	mCommEºTimî
;

27 
U16
 
	mCheckLi°
[ 
EOL_CHK_ID_NUM
 ];

28 } 
	tEﬁ_T
;

30 
Eﬁ_T
 
	geﬁ
;

33 
	$InôEﬁ
()

35 
eﬁ
.
Sètus
 = 
FALSE
;

36 
eﬁ
.
LimôTimî
 = 
DEFAULT_LIMIT_TIME_VALUE
;

37 
eﬁ
.
Te°Timî
 = 
DEFAULT_TEST_TIME_VALUE
;

38 
eﬁ
.
CommEºTimî
 = 
DEFAULT_COMM_ERR_TIMER
;

40 
eﬁ
.
Mode
 = 
EOL_MODE_READY
;

42 
	`SëEﬁCheckSètus
–
EOL_CHK_ID_EEPROM
, 0xA5 );

43 
	}
}

46 
	$SèπEﬁ
(
U8
 
mu8Ty≥
)

48 if–
eﬁ
.
LimôTimî
 == 0 )

53 
eﬁ
.
Sètus
 = 
TRUE
;

54 
eﬁ
.
Ty≥
 = 
mu8Ty≥
;

55 
	}
}

57 
U8
 
	$IsExpúedEﬁLimôTimî
()

59 if–
eﬁ
.
LimôTimî
 != 0 )

61  
FALSE
;

63  
TRUE
;

64 
	}
}

66 
U8
 
	$GëEﬁSètus
()

68  
eﬁ
.
Sètus
;

69 
	}
}

71 
U8
 
	$GëEﬁTy≥
()

73  
eﬁ
.
Ty≥
;

74 
	}
}

76 
	$SëEﬁMode
(
U8
 
mu8Mode
)

78 
eﬁ
.
Mode
 = 
mu8Mode
;

79 
	}
}

81 
U8
 
	$GëEﬁMode
()

83  
eﬁ
.
Mode
;

84 
	}
}

86 
	$SëEﬁTe°Timî
(
U16
 
mu16Time
)

88 
eﬁ
.
Te°Timî
 = 
mu16Time
;

89 
	}
}

91 
U16
 
	$GëEﬁTe°Timî
()

93  
eﬁ
.
Te°Timî
;

94 
	}
}

99 
	$SëEﬁTe°I≈utBô
(
U32
 
mu32MaskBô
)

101 
eﬁ
.
I≈utTe°
 |
mu32MaskBô
;

102 
	}
}

104 
	$CÀ¨EﬁTe°I≈utBô
(
U32
 
mu32MaskBô
)

106 
eﬁ
.
I≈utTe°
 &~
mu32MaskBô
;

107 
	}
}

109 
	$SëEﬁTe°I≈utVÆ
(
U32
 
mu32MaskBô
)

111 
eﬁ
.
I≈utTe°
 = 
mu32MaskBô
;

112 
	}
}

114 
U32
 
	$GëEﬁTe°I≈utVÆ
()

116  
eﬁ
.
I≈utTe°
;

117 
	}
}

121 
	$SëEﬁEº‹Comm
(
U8
 
mu8Eº‹
)

123 
eﬁ
.
EºComm
 = 
mu8Eº‹
;

124 
	}
}

126 
U8
 
	$GëEﬁEº‹Comm
()

128  
eﬁ
.
EºComm
;

129 
	}
}

133 
U16
 
	$GëEﬁCheckSètus
(
U8
 
mu8Id
 )

135 if–
mu8Id
 >
EOL_CHK_ID_NUM
 )

140  
eﬁ
.
CheckLi°
[ 
mu8Id
 ];

141 
	}
}

143 
	$SëEﬁCheckSètus
(
U8
 
mu8Id
, 
U16
 
mu16VÆ
)

145 if–
mu8Id
 >
EOL_CHK_ID_NUM
 )

150 
eﬁ
.
CheckLi°
[ 
mu8Id
 ] = 
mu16VÆ
;

151 
	}
}

153 
	$Upd©eEﬁTimî
()

155 if–
eﬁ
.
LimôTimî
 != 0 )

157 
eﬁ
.
LimôTimî
--;

160 if–
eﬁ
.
Te°Timî
 != 0 )

162 
eﬁ
.
Te°Timî
--;

164 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\eol.h

1 #i‚de‡
__EOL_H__


2 
	#__EOL_H__


	)

4 
	~"¥j_ty≥.h
"

7 
	#MODEL_CODE_CHP_260
 0x01

	)

8 
	#MODEL_CODE_CP_260
 0x02

	)

9 
	#MODEL_CODE_CHP_590
 0x03

	)

10 
	#MODEL_CODE_CHP_671
 0x04

	)

12 
	#MODEL_CODE
 
MODEL_CODE_CHP_590


	)

14 
	#CONFIG_EOL_TEST_WATER
 1

15 

	)

16 
	#DEFAULT_TEST_TIME_VALUE
 54000U

	)

19 
InôEﬁ
();

21 
	#EOL_TYPE_LOAD
 0

	)

22 
	#EOL_TYPE_FRONT
 1

	)

23 
SèπEﬁ
(
U8
 
mu8Ty≥
);

24 
U8
 
IsExpúedEﬁLimôTimî
();

25 
U8
 
GëEﬁSètus
();

26 
U8
 
GëEﬁTy≥
();

28 
	#EOL_MODE_READY
 0

	)

29 
	#EOL_MODE_INIT
 1

	)

30 
	#EOL_MODE_CHECK_SENSOR
 2

	)

31 
	#EOL_MODE_CHECK_LOAD
 3

	)

32 
	#EOL_MODE_CHECK_VACCUM
 4

	)

33 
	#EOL_MODE_CHECK_GAS
 5

	)

34 
	#EOL_MODE_DONE
 6

	)

35 
SëEﬁMode
(
U8
 
mu8Mode
);

36 
U8
 
GëEﬁMode
();

38 
SëEﬁTe°Timî
(
U16
 
mu16Time
);

39 
U16
 
GëEﬁTe°Timî
();

41 
SëEﬁExpúedSãpTimî
(
U8
 
mu8VÆ
);

42 
U16
 
GëEﬁExpúedSãpTimî
();

44 
RñﬂdEﬁCommEºTimî
();

45 
U16
 
GëEﬁCommEºTimî
();

48 
	#MK_EOL_PHOTO_SENSOR_DP
 0x80000000UL

49 
	#MK_EOL_KEY_SAVE
 0x00000001UL

	)

50 
	#MK_EOL_KEY_HOT
 0x00000002UL

	)

51 
	#MK_EOL_KEY_COLD
 0x00000004UL

	)

52 
	#MK_EOL_PHOTO_SENSOR
 0x00000008UL

	)

53 
	#MK_EOL_ALL
 0x0000000FUL

	)

54 
SëEﬁTe°I≈utBô
(
U32
 
mu32MaskBô
);

55 
CÀ¨EﬁTe°I≈utBô
(
U32
 
mu32MaskBô
);

56 
SëEﬁTe°I≈utVÆ
(
U32
 
mu32MaksBô
);

57 
U32
 
GëEﬁTe°I≈utVÆ
();

60 
SëEﬁEº‹Comm
(
U8
 
mu8Eº‹
);

61 
U8
 
GëEﬁEº‹Comm
();

64 
	#EOL_CHK_ID_EEPROM
 0

	)

65 
	#EOL_CHK_ID_NUM
 1

	)

66 
U16
 
GëEﬁCheckSètus
(
U8
 
mu8Id
 );

67 
SëEﬁCheckSètus
(
U8
 
mu8Id
, 
U16
 
mu16VÆ
);

69 
Upd©eEﬁTimî
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\key_eol_handler.c

1 
	~"key_eﬁ_h™dÀr.h
"

2 
	~"key.h
"

3 
	~"key_comm⁄_h™dÀr.h
"

4 
	~"di•œy.h
"

5 
	~"sound.h
"

6 
	~"¥o˚ss_eﬁ.h
"

8 
SëKeyBô
(
U32
 
mu32MaskBô
 );

12 
U8
 
EOL_Cﬁd
();

13 c⁄° 
KeyEvítLi°_T
 
	gEOL_KeyEvítLi°
[] =

18 { 
K_COLD
, 
EOL_Cﬁd
, 
NULL
, NULL, NULL, NULL, NULL },

25 
U8
 
EOL_SñCﬁd
();

26 c⁄° 
KeyEvítLi°_T
 
	gEOL_KeyLﬂdEvítLi°
[] =

31 { 
K_COLD
, 
EOL_SñCﬁd
, 
NULL
, NULL, NULL, NULL, NULL }

35 
U8
 
	$IsVÆidkeyEﬁ
(
U16
 
mu16Key
)

37 if–
	`GëEﬁMode
(Ë!
EOL_MODE_READY
 &&

38 
	`GëEﬁMode
(Ë!
EOL_MODE_DONE
 )

40  
FALSE
;

44  
TRUE
;

45 
	}
}

47 
U8
 
	$IsVÆidKeyFr⁄t
(
U16
 
mu16Key
)

49  
	`IsVÆidkeyEﬁ
–
mu16Key
 );

50 
	}
}

52 
U8
 
	$IsVÆidEﬁKeyC⁄dôi⁄
(
U16
 
mu16Key
)

54 if–
	`GëEﬁTy≥
(Ë=
EOL_TYPE_FRONT
 )

56  
	`IsVÆidKeyFr⁄t
–
mu16Key
 );

59  
	`IsVÆidkeyEﬁ
–
mu16Key
 );

60 
	}
}

62 * 
	$GëEﬁKeyEvítLi°
()

64 if–
	`GëEﬁTy≥
(Ë=
EOL_TYPE_FRONT
 )

66  (*)
EOL_KeyEvítLi°
;

69  (*)
EOL_KeyLﬂdEvítLi°
;

70 
	}
}

72 
U8
 
	$GëEﬁKeyEvítLi°Size
()

74 if–
	`GëEﬁTy≥
(Ë=
EOL_TYPE_FRONT
 )

76  ( (
EOL_KeyEvítLi°
Ë/ (
KeyEvítLi°_T
) );

79  ( (
EOL_KeyLﬂdEvítLi°
Ë/ (
KeyEvítLi°_T
) );

80 
	}
}

82 
	$SëKeyBô
(
U32
 
mu32MaskBô
 )

84 
U32
 
mu32I≈utVÆ
;

87 
mu32I≈utVÆ
 = 
	`GëEﬁTe°I≈utVÆ
();

88 if–(
mu32I≈utVÆ
 & 
mu32MaskBô
 ) != 0 )

90 
	`CÀ¨EﬁTe°I≈utBô
–
mu32MaskBô
 );

94 
	`SëEﬁTe°I≈utBô
–
mu32MaskBô
 );

96 
	}
}

99 
U8
 
	$EOL_Cﬁd
()

101 
	`SëKeyBô
–
MK_EOL_KEY_COLD
 );

103  
SOUND_SELECT
;

104 
	}
}

108 
U8
 
	$EOL_SñCﬁd
()

112  
SOUND_SELECT
;

113 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\key_eol_handler.h

1 #i‚de‡
__KEY_EOL_HANDLER_H__


2 
	#__KEY_EOL_HANDLER_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"eﬁ.h
"

8 
U8
 
IsVÆidEﬁKeyC⁄dôi⁄
(
U16
 
mu16Key
);

10 * 
GëEﬁKeyEvítLi°
();

12 
U8
 
GëEﬁKeyEvítLi°Size
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\process_eol.c

1 
	~"hw.h
"

2 
	~"¥o˚ss_eﬁ.h
"

3 
	~"eﬁ.h
"

4 
	~"∑r£r_eﬁ.h
"

6 
	~"key.h
"

7 
	~"ì¥om.h
"

8 
	~"utû.h
"

9 
	~"comm.h
"

10 
	~"timî.h
"

12 
	~"vÆve.h
"

13 
	~"ªœy.h
"

14 
	~"ãmp.h
"

15 
	~"hÆ_adc.h
"

16 
	~"Àvñ.h
"

17 
	~"cﬁd_w©î.h
"

18 
	~"hŸ_w©î.h
"

21 
	s_eﬁ_i˚_sy°em_


23 
U8
 
	mSèπ
;

24 
U8
 
	mSètus
;

25 
U8
 
	mSãp
;

27 
U16
 
	mWaôTime
;

28 } 
	tEﬁI˚Sys_T
;

30 
EﬁI˚Sys_T
 
	gEﬁI˚
;

34 
	$CheckEïrom
()

36 
U8
 
mu8Inô
 = 
FALSE
;

37 
U8
 
mu8RëryCou¡
 = 5;

38 
U8
 
mu8Rë
 = 
FALSE
;

41 if–
mu8Inô
 =
TRUE
 )

47 
mu8Rë
 = 
	`Te°Eïrom
();

48 if–
mu8Rë
 =
TRUE
 )

50 
mu8Inô
 = 
TRUE
;

52 
	`SëEﬁCheckSètus
–
EOL_CHK_ID_EEPROM
, 0xA5 );

56 
	`SëEﬁCheckSètus
–
EOL_CHK_ID_EEPROM
, 0x01 );

59 if–--
mu8RëryCou¡
 == 0 )

61 
mu8Inô
 = 
TRUE
;

63 
	}
}

65 
	$CheckSís‹
()

67 
	`CheckEïrom
();

68 
	}
}

74 
	$SèπEﬁI˚Sy°em
()

76 
EﬁI˚
.
Sèπ
 = 
TRUE
;

77 
	}
}

80 
	$I¬îPro˚ssFr⁄t
()

83 
	`CheckEïrom
();

88 
	}
}

90 
	$ModeRódy
()

93 
	`CheckSís‹
();

94 
	}
}

96 
	$ModeInô
()

98 
	`Tu∫OffRñay
–
RELAY_COMP
 );

99 
	`Tu∫OffRñay
–
RELAY_HEATER
 );

101 
	`Clo£VÆve
–
VALVE_ALL
 );

102 
	`O≥nVÆve
–
VALVE_NOS
 );

104 
	}
}

106 
	$I¬îPro˚ssLﬂd
()

108 
U8
 
mu8Mode
;

110 
mu8Mode
 = 
	`GëEﬁMode
();

111  
mu8Mode
 )

113 
EOL_MODE_READY
:

114 
	`ModeRódy
();

116 
	`SëEﬁMode
–
EOL_MODE_INIT
 );

120 
EOL_MODE_INIT
:

123 
	`ModeInô
();

127 
EOL_MODE_CHECK_SENSOR
:

131 
EOL_MODE_CHECK_LOAD
:

134 
EOL_MODE_CHECK_VACCUM
:

135 
EOL_MODE_CHECK_GAS
:

138 
EOL_MODE_DONE
:

145 
	}
}

147 
	#PROTECT_TIME
 50

148 
	`EﬁPrŸe˘Hóãr
 ( )

	)

150 
U8
 
	gHóãrEx
 = 
OFF
;

151 
U8
 
	gHóãrCur
 = 
OFF
;

152 
U8
 
	gHóãrTime
 = 0;

154 
	gHóãrCur
 = 
IsTu∫OnRñay
–
RELAY_HEATER
 );

156 i‡–
	gHóãrEx
 !
HóãrCur
 )

158 
HóãrEx
 = 
HóãrCur
;

159 
	gHóãrTime
 = 
PROTECT_TIME
;

163 i‡–
	gHóãrCur
 =
ON
 )

165 i‡–
HóãrTime
 != 0 )

167 
HóãrTime
--;

171 
Tu∫OffRñay
–
RELAY_HEATER
 );

176 
Tu∫OffRñay
–
RELAY_HEATER
 );

182 
	$Pro˚ssEﬁ
()

185 if–
	`GëEﬁTe°Timî
() == 0 )

187 
	`Re£t
();

192 if–
	`GëEﬁTy≥
(Ë=
EOL_TYPE_FRONT
 )

194 
	`I¬îPro˚ssFr⁄t
();

198 
	`I¬îPro˚ssLﬂd
();

199 
	`EﬁPrŸe˘Hóãr
();

201 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\process_eol.h

1 #i‚de‡
__PROCESS_EOL_H__


2 
	#__PROCESS_EOL_H__


	)

4 
	~"¥j_ty≥.h
"

6 
InôCheckI˚Sy°em
();

8 
SèπEﬁI˚Sy°em
();

11 
TEMP_T
 
GëEﬁInôTempI˚
();

13 
TEMP_T
 
GëEﬁInôTempCﬁd
();

15 
U8
 
MovögI˚Tøy
(U8 
mu8Sãp
 );

17 
Pro˚ssEﬁ
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_room_level.c

1 
	~"îr_room_Àvñ.h
"

2 
	~"Àvñ.h
"

5 
U8
 
	ggu8EºCou¡Limô
 = 
DEFAULT_ROOM_ERR_COUNT
;

6 
U8
 
	ggu8EºCou¡LimôHighAndCom∂ex
 = 
DEFAULT_ROOM_ERR_COUNT_HIGH_AND_COMPLEX
;

9 
	$SëRoomEºCou¡Limô
(
U8
 
mu8Cou¡
, U8 
mu8Cou¡OvîAndCom∂ex
)

11 
gu8EºCou¡Limô
 = 
mu8Cou¡
;

12 
gu8EºCou¡LimôHighAndCom∂ex
 = 
mu8Cou¡OvîAndCom∂ex
;

13 
	}
}

17 
U8
 
	$CheckEºRoomOvf
(
U8
 
mu8Eº‹
)

19 
U8
 
mu8Cou¡
;

22 
mu8Cou¡
 = 
	`GëT™kLevñEº‹Cou¡
–
LEVEL_ID_ROOM
, 
ERR_TYPE_OVF
 );

23 if–
mu8Cou¡
 >
gu8EºCou¡Limô
 )

25  
TRUE
;

27  
mu8Eº‹
;

28 
	}
}

30 
U8
 
	$Rñó£EºRoomOvf
(
U8
 
mu8Eº‹
)

32 
U8
 
mu8Cou¡
;

35 
mu8Cou¡
 = 
	`GëT™kLevñEº‹Cou¡
–
LEVEL_ID_ROOM
, 
ERR_TYPE_OVF
 );

36 if–
mu8Cou¡
 == 0 )

38  
FALSE
;

40  
mu8Eº‹
;

41 
	}
}

45 
U8
 
	$CheckEºRoomCom∂ex
(
U8
 
mu8Eº‹
)

47 
U8
 
mu8Cou¡
;

50 
mu8Cou¡
 = 
	`GëT™kLevñEº‹Cou¡
–
LEVEL_ID_ROOM
, 
ERR_TYPE_COMPLEX
 );

51 if–
mu8Cou¡
 >
gu8EºCou¡LimôHighAndCom∂ex
 )

53  
TRUE
;

55  
mu8Eº‹
;

56 
	}
}

58 
U8
 
	$Rñó£EºRoomCom∂ex
(
U8
 
mu8Eº‹
)

60 
U8
 
mu8Cou¡
;

63 
mu8Cou¡
 = 
	`GëT™kLevñEº‹Cou¡
–
LEVEL_ID_ROOM
, 
ERR_TYPE_COMPLEX
 );

64 if–
mu8Cou¡
 == 0 )

66  
FALSE
;

68  
mu8Eº‹
;

69 
	}
}

72 
U8
 
	$CheckEºRoomHigh
(
U8
 
mu8Eº‹
)

74 
U8
 
mu8Cou¡
;

77 
mu8Cou¡
 = 
	`GëT™kLevñEº‹Cou¡
–
LEVEL_ID_ROOM
, 
ERR_TYPE_HIGH
 );

78 if–
mu8Cou¡
 >
gu8EºCou¡LimôHighAndCom∂ex
 )

80  
TRUE
;

82  
mu8Eº‹
;

83 
	}
}

85 
U8
 
	$Rñó£EºRoomHigh
(
U8
 
mu8Eº‹
)

87 
U8
 
mu8Cou¡
;

90 
mu8Cou¡
 = 
	`GëT™kLevñEº‹Cou¡
–
LEVEL_ID_ROOM
, 
ERR_TYPE_HIGH
 );

91 if–
mu8Cou¡
 == 0 )

93  
FALSE
;

95  
mu8Eº‹
;

96 
	}
}

99 
U8
 
	$CheckEºRoomLow
(
U8
 
mu8Eº‹
)

101 
U8
 
mu8Cou¡
;

104 
mu8Cou¡
 = 
	`GëT™kLevñEº‹Cou¡
–
LEVEL_ID_ROOM
, 
ERR_TYPE_LOW
 );

105 if–
mu8Cou¡
 >= 1 )

107  
TRUE
;

109  
mu8Eº‹
;

110 
	}
}

112 
U8
 
	$Rñó£EºRoomLow
(
U8
 
mu8Eº‹
)

114 
U8
 
mu8Cou¡
;

117 
mu8Cou¡
 = 
	`GëT™kLevñEº‹Cou¡
–
LEVEL_ID_ROOM
, 
ERR_TYPE_LOW
 );

118 if–
mu8Cou¡
 == 0 )

120  
FALSE
;

122  
mu8Eº‹
;

123 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_room_level.h

1 #i‚de‡
__ERR_ROOM_LEVEL_H__


2 
	#__ERR_ROOM_LEVEL_H__


	)

4 
	~"¥j_ty≥.h
"

7 
	#DEFAULT_ROOM_ERR_COUNT
 3

	)

8 
	#DEFAULT_ROOM_ERR_COUNT_HIGH_AND_COMPLEX
 5

	)

10 
SëRoomEºCou¡Limô
(
U8
 
mu8Cou¡
, U8 
mu8Cou¡OvîAndCom∂ex
);

12 
U8
 
CheckEºRoomOvf
(U8 
mu8Eº‹
);

13 
U8
 
Rñó£EºRoomOvf
(U8 
mu8Eº‹
);

15 
U8
 
CheckEºRoomCom∂ex
(U8 
mu8Eº‹
);

16 
U8
 
Rñó£EºRoomCom∂ex
(U8 
mu8Eº‹
);

18 
U8
 
CheckEºRoomLow
(U8 
mu8Eº‹
);

19 
U8
 
Rñó£EºRoomLow
(U8 
mu8Eº‹
);

21 
U8
 
CheckEºRoomHigh
(U8 
mu8Eº‹
);

22 
U8
 
Rñó£EºRoomHigh
(U8 
mu8Eº‹
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp.c

1 
	~"îr_ãmp.h
"

9 
	#ADC_10BIT_TOP
 985

	)

10 
	#ADC_10BIT_BOTTOM
 41

	)

12 
U8
 
	$GëTempEº‹Ty≥
(
U16
 
mu16Adc
)

14 if–
mu16Adc
 > 
ADC_10BIT_TOP
 )

16  
STATUS_SHORT
;

18 if–
mu16Adc
 < 
ADC_10BIT_BOTTOM
 )

20  
STATUS_OPEN
;

23  
STATUS_NORMAL
;

24 
	}
}

27 
U8
 
	$CheckEº‹Temp
(
U8
 
mu8Eº‹
, 
U16
 
mu16Adc
, U8 *
pBuf
)

29 
U8
 
mu8Index
;

32 
mu8Index
 = 
	`GëTempEº‹Ty≥
–
mu16Adc
 );

33 if–
mu8Index
 !
pBuf
[0] )

35 
pBuf
[0] = 
mu8Index
;

37 
pBuf
[1] = 
COUNT_NUM
;

38 
pBuf
[2] = 
COUNT_NUM
;

39 
pBuf
[3] = 
COUNT_NUM
;

40  
mu8Eº‹
;

43 if–
pBuf
[ 
mu8Index
 ] != 0 )

45 
pBuf
[ 
mu8Index
 ]--;

48 if–
pBuf
[ 
mu8Index
 ] == 0 )

50 if–
mu8Index
 =
STATUS_NORMAL
 )

52 
mu8Eº‹
 = 
FALSE
;

56 
mu8Eº‹
 = 
TRUE
;

60  
mu8Eº‹
;

61 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp.h

1 #i‚de‡
__ERR_TEMP_H__


2 
	#__ERR_TEMP_H__


	)

4 
	~"¥j_ty≥.h
"

7 
	#STATUS_NORMAL
 1

	)

8 
	#STATUS_OPEN
 2

	)

9 
	#STATUS_SHORT
 3

	)

10 
U8
 
GëTempEº‹Ty≥
(
U16
 
mu16Adc
);

12 
	#COUNT_NUM
 30

	)

13 
U8
 
CheckEº‹Temp
(U8 
mu8Eº‹
, 
U16
 
mu16Adc
, U8 *
pTimîBuf
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp_cold_water.c

1 
	~"îr_ãmp_cﬁd_w©î.h
"

2 
	~"îr_ãmp.h
"

3 
	~"≠i_adc.h
"

4 
	~"cﬁd_w©î.h
"

5 
	~"ãmp.h
"

7 
U8
 
	gmu8Cou¡Li°
[4] =

10 
COUNT_NUM
,

11 
COUNT_NUM
,

12 
COUNT_NUM


15 
U8
 
	$CheckEºTempCﬁdW©î
(
U8
 
mu8Eº‹
)

17 
U16
 
mu16Adc
;

19 if–
	`GëCﬁdW©îC⁄figMake
(Ë=
FALSE
 )

21  
FALSE
;

23 
mu16Adc
 = 
	`GëAdcD©a
–
ADC_ID_TEMP_COLD_WATER_FB
 );

24  
	`CheckEº‹Temp
–
mu8Eº‹
, 
mu16Adc
, 
mu8Cou¡Li°
 );

25 
	}
}

27 
U8
 
	$Rñó£EºTempCﬁdW©î
(
U8
 
mu8Eº‹
 )

29 if–
	`GëCﬁdW©îC⁄figMake
(Ë=
FALSE
 )

31  
FALSE
;

35 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 10 );

37  
	`CheckEºTempCﬁdW©î
–
mu8Eº‹
 );

38 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp_cold_water.h

1 #i‚de‡
__ERR_TEMP_COLD_WATER_H__


2 
	#__ERR_TEMP_COLD_WATER_H__


	)

4 
	~"¥j_ty≥.h
"

6 
U8
 
CheckEºTempCﬁdW©î
(U8 
mu8Eº‹
);

8 
U8
 
Rñó£EºTempCﬁdW©î
(U8 
mu8Eº‹
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp_hot_water.c

1 
	~"îr_ãmp_hŸ_w©î.h
"

2 
	~"îr_ãmp.h
"

3 
	~"≠i_adc.h
"

4 
	~"hŸ_w©î.h
"

6 
U8
 
	gmu8Cou¡Li°
[4] =

9 
COUNT_NUM
,

10 
COUNT_NUM
,

11 
COUNT_NUM


14 
U8
 
	$CheckEºTempHŸW©î
(
U8
 
mu8Eº‹
)

16 
U16
 
mu16Adc
;

18 if–
	`GëHŸW©îC⁄figMake
(Ë=
FALSE
 )

20  
FALSE
;

22 
mu16Adc
 = 
	`GëAdcD©a
–
ADC_ID_TEMP_HOT_WATER_FB
 );

23  
	`CheckEº‹Temp
–
mu8Eº‹
, 
mu16Adc
, 
mu8Cou¡Li°
 );

24 
	}
}

26 
U8
 
	$Rñó£EºTempHŸW©î
(
U8
 
mu8Eº‹
)

29 if–
	`GëHŸW©îC⁄figMake
(Ë=
FALSE
 )

31  
FALSE
;

34  
	`CheckEºTempHŸW©î
(
mu8Eº‹
);

35 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp_hot_water.h

1 #i‚de‡
__ERR_TEMP_HOT_WATER_H__


2 
	#__ERR_TEMP_HOT_WATER_H__


	)

4 
	~"¥j_ty≥.h
"

6 
U8
 
CheckEºTempHŸW©î
(U8 
mu8Eº‹
);

8 
U8
 
Rñó£EºTempHŸW©î
(U8 
mu8Eº‹
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\error.c

1 
	~"îr‹.h
"

2 
	~"ì¥om.h
"

3 
	~"time_sh‹t.h
"

6 
Eº‹_T
 
	gEº
;

8 
	$InôEº‹
()

10 
	`mem£t
–&
Eº
, 0, –
Eº‹_T
 ));

11 
	}
}

13 
	$GëEº‹D©a
(
Eº‹_T
 *
pD©a
)

15 
	`mem˝y
–
pD©a
, &
Eº
, –
Eº‹_T
));

16 
	}
}

18 
	$SëEº‹Sètus
(
Eº‹Id_T
 
mId
, 
U8
 
mu8Sètus
)

20 if–
mId
 < 
ERR_NUM
 )

22 
Eº
.
Sètus
[ 
mId
 ] = 
mu8Sètus
;

24 
	}
}

26 
	$SëEº‹SètusD©e
(
Eº‹Id_T
 
mId
, 
U8
 
mu8Sètus
, 
Eº‹D©e_T
 *
pD©e
)

28 if–
mId
 < 
ERR_NUM
 )

30 
Eº
.
Sètus
[ 
mId
 ] = 
mu8Sètus
;

31 
	`mem˝y
–&
Eº
.
SètusD©e
[ 
mId
 ], 
pD©e
, –
Eº‹D©e_T
 ));

33 
	}
}

35 
U8
 
	$GëEº‹Sètus
(
Eº‹Id_T
 
mId
)

37  
Eº
.
Sètus
[ 
mId
 ];

38 
	}
}

40 
	$GëEº‹SètusD©e
(
Eº‹Id_T
 
mId
, 
Eº‹D©e_T
 *
pD©e
)

42 if–
mId
 < 
ERR_NUM
 )

44 
	`mem˝y
–
pD©e
, &
Eº
.
SètusD©e
[ 
mId
 ], –
Eº‹D©e_T
 ));

46 
	}
}

48 
U8
 
	$IsEº‹
(
Eº‹Id_T
 
mId
 )

50  
Eº
.
Sètus
[ 
mId
 ];

51 
	}
}

53 
Eº‹Id_T
 
	$GëEº‹Id
()

55  
Eº
.
Eº‹Id
;

56 
	}
}

58 
	$SëEº‹Id
(
Eº‹Id_T
 
mEºId
)

60 
Eº
.
Eº‹Id
 = 
mEºId
;

61 
	}
}

63 
U8
 
	$GëEº‹Di•œyId
(
Eº‹Id_T
 
mEºId
)

65 
U8
 
mu8Eº‹Code
 = 0;

68  
mEºId
 )

70 
ERR_ROOM_LOW_LEVEL
: 
mu8Eº‹Code
 = 11; ;

71 
ERR_ROOM_HIGH_LEVEL
: 
mu8Eº‹Code
 = 13; ;

72 
ERR_ROOM_COMPLEX
: 
mu8Eº‹Code
 = 14; ;

73 
ERR_ROOM_OVF
: 
mu8Eº‹Code
 = 10; ;

74 
ERR_LEAK
: 
mu8Eº‹Code
 = 1; ;

75 
ERR_TEMP_COLD_WATER
: 
mu8Eº‹Code
 = 44; ;

76 
ERR_TEMP_ROOM_WATER
: 
mu8Eº‹Code
 = 42; ;

77 
ERR_TEMP_AMBIENT
: 
mu8Eº‹Code
 = 43; ;

79 
ERR_DRAIN_PUMP
: 
mu8Eº‹Code
 = 60; ;

80 
ERR_TEMP_EVA_2
: 
mu8Eº‹Code
 = 63; ;

81 
ERR_TEMP_EVA_1
: 
mu8Eº‹Code
 = 63; ;

82 
ERR_COLD_LOW_LEVEL
: 
mu8Eº‹Code
 = 20; ;

83 
ERR_SODA_PUMP
: 
mu8Eº‹Code
 = 94; ;

84 
ERR_MICRO_SW_DETECT
: 
mu8Eº‹Code
 = 61; ;

85 
ERR_MICRO_SW_MOVE
: 
mu8Eº‹Code
 = 62; ;

89 : 
mu8Eº‹Code
 = 0; ;

94  
mu8Eº‹Code
;

95 
	}
}

97 
	$GëEº‹D©e
(
Eº‹D©e_T
 *
pD©e
)

100 
TimeD©a_T
 
mTime
;

102 if–
pD©e
 !
NULL
 )

104 
	`GëRtcTime
–&
mTime
 );

106 
pD©e
->
u16Yór
 = 
mTime
.
Yór
 + 2000;

107 
pD©e
->
u8M⁄th
 = 
mTime
.
M⁄th
;

108 
pD©e
->
u8D©e
 = 
mTime
.
D©e
;

111 
	}
}

113 
U8
 
	$IsEm±yMemítoEº‹
()

115 
U8
 
mu8Num
;

116 
Memíto_T
 
mMemíto
;

118 
mu8Num
 = 
MEMENTO_LIST_NUM
 - 1;

119 
	`GëMemítoEº‹
–
mu8Num
, &
mMemíto
 );

120 if–
mMemíto
.
Eº‹
 =
ERR_NONE
 )

122  
TRUE
;

125  
FALSE
;

126 
	}
}

128 
U8
 
	$GëMemítoEº‹
(
U8
 
mu8Index
, 
Memíto_T
 *
pMemíto
)

130 if–
mu8Index
 < 
MEMENTO_LIST_NUM
 )

132 
	`mem˝y
–
pMemíto
, &
Eº
.
MemítoLi°
[ 
mu8Index
 ], –
Memíto_T
 ));

133  
TRUE
;

136  
FALSE
;

137 
	}
}

139 
	$SëMemítoEº‹
(
U8
 
mu8Index
, 
Eº‹Id_T
 
mEº‹
, 
Eº‹D©e_T
 *
pD©e
 )

141 if–
mu8Index
 >
MEMENTO_LIST_NUM
 )

146 if–
mEº‹
 >
ERR_NUM
 )

151 
Eº
.
MemítoLi°
[ 
mu8Index
 ].
Eº‹
 = 
mEº‹
;

152 
	`mem˝y
–&
Eº
.
MemítoLi°
[ 
mu8Index
 ].
D©e
, 
pD©e
, –
Eº‹D©e_T
 ));

153 
	}
}

155 
	$CÀ¨MemítoEº‹
()

157 
U8
 
i
;

158 
Eº‹D©e_T
 
mD©e
;

160 
	`mem£t
–&
mD©e
, 0, –
Eº‹D©e_T
 ));

161  
i
 = 0; i < 
MEMENTO_LIST_NUM
 ; i++ )

163 
	`SëMemítoEº‹
–
i
, 
ERR_NONE
, &
mD©e
 );

164 
	`SaveEïromId
–
EEP_ID_MEMENTO_1
 );

165 
	`SaveEïromId
–
EEP_ID_MEMENTO_2
 );

166 
	`SaveEïromId
–
EEP_ID_MEMENTO_3
 );

167 
	`SaveEïromId
–
EEP_ID_MEMENTO_4
 );

168 
	`SaveEïromId
–
EEP_ID_MEMENTO_5
 );

170 
	}
}

172 
	$Upd©eMemítoEº‹
–
Memíto_T
 *
pMemíto
 )

174 if–
pMemíto
->
Eº‹
 !
ERR_NONE
 )

178 if–
Eº
.
MemítoLi°
[ 
MEMENTO_LIST_NUM
 - 1 ].
Eº‹
 !
pMemíto
->Error )

182 
	`mem˝y
–&
Eº
.
MemítoLi°
[ 0 ], &Eº.MemítoLi°[1], –
Memíto_T
 ) * (
MEMENTO_LIST_NUM
 - 1) );

183 
	`mem˝y
–&
Eº
.
MemítoLi°
[ 
MEMENTO_LIST_NUM
 - 1 ], 
pMemíto
, –
Memíto_T
 ) );

185 
	`SaveEïromId
–
EEP_ID_MEMENTO_1
 );

186 
	`SaveEïromId
–
EEP_ID_MEMENTO_2
 );

187 
	`SaveEïromId
–
EEP_ID_MEMENTO_3
 );

188 
	`SaveEïromId
–
EEP_ID_MEMENTO_4
 );

189 
	`SaveEïromId
–
EEP_ID_MEMENTO_5
 );

192 
	}
}

196 
U8
 
	$IsEº‹Ty≥NosFìd
()

199 if–
	`IsEº‹
–
ERR_ROOM_OVF
 ) =
TRUE


200 || 
	`IsEº‹
–
ERR_ROOM_COMPLEX
 ) =
TRUE


201 || 
	`IsEº‹
–
ERR_ROOM_HIGH_LEVEL
 ) =
TRUE


206  
TRUE
;

209  
FALSE
;

210 
	}
}

213 
U8
 
	$IsEº‹Ty≥CﬁdW©î
()

215 if–
	`IsEº‹
–
ERR_TEMP_COLD_WATER
 ) =
TRUE


216 || 
	`IsEº‹
–
ERR_ROOM_COMPLEX
 ) =
TRUE


217 || 
	`IsEº‹
–
ERR_ROOM_HIGH_LEVEL
 ) =
TRUE


218 || 
	`IsEº‹
–
ERR_ROOM_OVF
 ) =
TRUE


219 || 
	`IsEº‹
–
ERR_ROOM_LOW_LEVEL
 ) =
TRUE


222  
TRUE
;

225  
FALSE
;

226 
	}
}

228 
U8
 
	$IsEº‹Ty≥HŸW©î
()

231 if–
	`IsEº‹
–
ERR_TEMP_HOT_WATER
 ) =
TRUE


232 || 
	`IsEº‹
–
ERR_ROOM_COMPLEX
 ) =
TRUE


233 || 
	`IsEº‹
–
ERR_ROOM_HIGH_LEVEL
 ) =
TRUE


234 || 
	`IsEº‹
–
ERR_ROOM_OVF
 ) =
TRUE


235 || 
	`IsEº‹
–
ERR_ROOM_LOW_LEVEL
 ) =
TRUE


238  
TRUE
;

242  
FALSE
;

243 
	}
}

246 
U8
 
	$IsEº‹Ty≥CﬁdW©î
()

249 if–
	`GëTimeSh‹tSètus
(Ë=
FALSE
 )

251 if–
	`IsEº‹
–
ERR_ROOM_COMPLEX
 ) =
TRUE


252 || 
	`IsEº‹
–
ERR_ROOM_HIGH_LEVEL
 ) =
TRUE


253 || 
	`IsEº‹
–
ERR_ROOM_OVF
 ) =
TRUE


254 || 
	`IsEº‹
–
ERR_ROOM_LOW_LEVEL
 ) =
TRUE
 )

256  
TRUE
;

260 if–
	`IsEº‹
–
ERR_TEMP_COLD_WATER
 ) =
TRUE
 )

262  
TRUE
;

265  
FALSE
;

266 
	}
}

269 
U8
 
	$IsEº‹Ty≥HŸW©î
()

272 if–
	`GëTimeSh‹tSètus
(Ë=
FALSE
 )

274 if–
	`IsEº‹
–
ERR_ROOM_COMPLEX
 ) =
TRUE


275 || 
	`IsEº‹
–
ERR_ROOM_HIGH_LEVEL
 ) =
TRUE


276 || 
	`IsEº‹
–
ERR_ROOM_OVF
 ) =
TRUE


277 || 
	`IsEº‹
–
ERR_ROOM_LOW_LEVEL
 ) =
TRUE
 )

279  
TRUE
;

283 if–
	`IsEº‹
–
ERR_TEMP_HOT_WATER
 ) =
TRUE
 )

285  
TRUE
;

289  
FALSE
;

290 
	}
}

293 
U8
 
	$IsEº‹Ty≥I˚
()

296 if–
	`IsEº‹
–
ERR_TEMP_ROOM_WATER
 ) =
TRUE


297 || 
	`IsEº‹
–
ERR_TEMP_AMBIENT
 ) =
TRUE


298 || 
	`IsEº‹
–
ERR_ROOM_COMPLEX
 ) =
TRUE


299 || 
	`IsEº‹
–
ERR_ROOM_HIGH_LEVEL
 ) =
TRUE


300 || 
	`IsEº‹
–
ERR_ROOM_OVF
 ) =
TRUE


301 || 
	`IsEº‹
–
ERR_ROOM_LOW_LEVEL
 ) =
TRUE


302 || 
	`IsEº‹
–
ERR_DRAIN_PUMP
 ) =
TRUE


303 || 
	`IsEº‹
–
ERR_MICRO_SW_DETECT
 ) =
TRUE


304 || 
	`IsEº‹
–
ERR_MICRO_SW_MOVE
 ) =
TRUE


305 || 
	`IsEº‹
–
ERR_LEAK
 ) =
TRUE


308  
TRUE
;

312  
FALSE
;

313 
	}
}

315 
U8
 
	$IsEº‹Ty≥Soda
()

318 if–
	`IsEº‹
–
ERR_COLD_LOW_LEVEL
 ) =
TRUE
 )

320  
TRUE
;

324  
FALSE
;

325 
	}
}

327 
U8
 
	$IsEº‹Ty≥DøöW©î
()

330 if–
	`IsEº‹
–
ERR_ROOM_COMPLEX
 ) =
TRUE


331 || 
	`IsEº‹
–
ERR_ROOM_HIGH_LEVEL
 ) =
TRUE


332 || 
	`IsEº‹
–
ERR_ROOM_OVF
 ) =
TRUE


333 || 
	`IsEº‹
–
ERR_ROOM_LOW_LEVEL
 ) =
TRUE


334 || 
	`IsEº‹
–
ERR_COLD_LOW_LEVEL
 ) =
TRUE


335 || 
	`IsEº‹
–
ERR_DRAIN_PUMP
 ) =
TRUE


336 || 
	`IsEº‹
–
ERR_LEAK
 ) =
TRUE


339  
TRUE
;

343  
FALSE
;

344 
	}
}

346 
U8
 
	$IsEº‹Ty≥Sãr
()

349 if–
	`IsEº‹Ty≥DøöW©î
(Ë=
TRUE
 )

351  
TRUE
;

354 if–
	`IsEº‹
–
ERR_NFC_COMM
 ) =
TRUE
 )

356  
TRUE
;

360  
FALSE
;

361 
	}
}

365 
	$Upd©eNewEº‹
(
U8
 
mu8Eº‹
)

367 
Memíto_T
 
mMemíto
;

371 if–
mu8Eº‹
 =
ERR_TEMP_EVA_1


372 || 
mu8Eº‹
 =
ERR_TEMP_EVA_2
 )

378 if–
Eº
.
Eº‹Id
 !
mu8Eº‹
 )

380 
Eº
.
PªvEº‹Id
 = Eº.
Eº‹Id
;

382 
mMemíto
.
Eº‹
 = 
mu8Eº‹
;

383 
	`GëEº‹SètusD©e
–
mMemíto
.
Eº‹
, &mMemíto.
D©e
 );

388 
Eº
.
Eº‹Id
 = 
mu8Eº‹
;

389 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\error.h

1 #i‚de‡
__ERROR_H__


2 
	#__ERROR_H__


	)

4 
	~"¥j_ty≥.h
"

12 
	e_îr‹_id_


14 
	mERR_NONE
,

16 
	mERR_TEMP_COLD_WATER
,

17 
	mERR_TEMP_HOT_WATER
,

21 
	mERR_ROOM_COMPLEX
,

22 
	mERR_ROOM_HIGH_LEVEL
,

23 
	mERR_ROOM_LOW_LEVEL
,

24 
	mERR_ROOM_OVF
,

26 
	mERR_NUM


27 } 
	tEº‹Id_T
;

30 
	s_îr‹_d©e_


32 
U16
 
	mu16Yór
;

33 
U8
 
	mu8M⁄th
;

34 
U8
 
	mu8D©e
;

35 } 
	tEº‹D©e_T
;

37 
	s_memíto_


39 
Eº‹Id_T
 
	mEº‹
;

40 
Eº‹D©e_T
 
	mD©e
;

41 } 
	tMemíto_T
;

44 
	#MEMENTO_LIST_NUM
 5

	)

45 
	s_îr‹_


47 
Eº‹Id_T
 
	mPªvEº‹Id
;

48 
Eº‹Id_T
 
	mEº‹Id
;

49 
Eº‹D©e_T
 
	mEº‹D©e
;

51 
U8
 
	mSètus
[ 
ERR_NUM
 ];

52 
Eº‹D©e_T
 
	mSètusD©e
[ 
ERR_NUM
 ];

56 
Memíto_T
 
	mMemítoLi°
[ 
MEMENTO_LIST_NUM
 ];

57 }
	tEº‹_T
;

60 
InôEº‹
();

62 
GëEº‹D©a
(
Eº‹_T
 *
pD©a
);

64 
SëEº‹Sètus
(
Eº‹Id_T
 
mId
, 
U8
 
mu8Sètus
);

65 
SëEº‹SètusD©e
(
Eº‹Id_T
 
mId
, 
U8
 
mu8Sètus
, 
Eº‹D©e_T
 *
pD©e
);

67 
U8
 
GëEº‹Sètus
(
Eº‹Id_T
 
mId
);

68 
GëEº‹SètusD©e
(
Eº‹Id_T
 
mId
, 
Eº‹D©e_T
 *
pD©e
);

70 
Eº‹Id_T
 
GëEº‹Id
();

71 
SëEº‹Id
(
Eº‹Id_T
 
mEºId
);

72 
U8
 
GëEº‹Di•œyId
(
Eº‹Id_T
 
mEºId
);

73 
GëEº‹D©e
(
Eº‹D©e_T
 *
pD©e
);

77 
U8
 
IsEm±yMemítoEº‹
();

78 
U8
 
GëMemítoEº‹
(U8 
mu8Index
, 
Memíto_T
 *
pMemíto
);

79 
SëMemítoEº‹
(
U8
 
mu8Index
, 
Eº‹Id_T
 
mEº‹
, 
Eº‹D©e_T
 *
pD©e
 );

80 
CÀ¨MemítoEº‹
();

82 
U8
 
IsEº‹
(
Eº‹Id_T
 
mId
 );

83 
U8
 
IsEº‹Ty≥NosFìd
();

84 
U8
 
IsEº‹Ty≥CﬁdW©î
();

85 
U8
 
IsEº‹Ty≥HŸW©î
();

86 
U8
 
IsEº‹Ty≥I˚
();

87 
U8
 
IsEº‹Ty≥Soda
();

88 
U8
 
IsEº‹Ty≥DøöW©î
();

89 
U8
 
IsEº‹Ty≥Sãr
();

91 
Upd©eNewEº‹
(
U8
 
mu8Eº‹
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\process_error.c

1 
	~"¥o˚ss_îr‹.h
"

2 
	~"îr‹.h
"

4 
	~"ì¥om.h
"

5 
	~"Àvñ.h
"

6 
	~"time_sh‹t.h
"

8 
	~"îr_ãmp_cﬁd_w©î.h
"

9 
	~"îr_ãmp_hŸ_w©î.h
"

10 
	~"îr_room_Àvñ.h
"

14 
	$U8
 (*
	tEºFun_T
)(
	tU8
 
	tmu8Eº‹
);

15 
	s_îr‹_li°_


17 
Eº‹Id_T
 
Id
;

18 
U8
 
PªvEº‹
;

19 
U8
 
Eº‹
;

20 
U8
 
SãrA˘ive
;

21 
U8
 
Di•A˘ive
;

23 
EºFun_T
 
Check
;

24 
EºFun_T
 
Rñó£
;

25 } 
	tEº‹Li°_T
;

27 
	$InôEº‹Li°
()

29 
	`InôEº‹
();

30 
	}
}

32 
U8
 
Rñó£EºRoomOvfEx
(U8 
mu8Eº‹
);

33 
U8
 
Rñó£EºRoomCom∂exEx
(U8 
mu8Eº‹
);

34 
U8
 
Rñó£EºRoomHighEx
(U8 
mu8Eº‹
);

35 
U8
 
Rñó£EºRoomLowEx
(U8 
mu8Eº‹
);

38 
Eº‹Li°_T
 
	gEºLi°
[] =

41 { 
ERR_ROOM_COMPLEX
, 
FALSE
, FALSE, 
TRUE
, TRUE, 
CheckEºRoomCom∂ex
, 
Rñó£EºRoomCom∂exEx
 },

42 { 
ERR_ROOM_HIGH_LEVEL
, 
FALSE
, FALSE, 
TRUE
, TRUE, 
CheckEºRoomHigh
, 
Rñó£EºRoomHighEx
 },

43 { 
ERR_ROOM_LOW_LEVEL
, 
FALSE
, FALSE, 
TRUE
, TRUE, 
CheckEºRoomLow
, 
Rñó£EºRoomLow
 },

44 { 
ERR_ROOM_OVF
, 
FALSE
, FALSE, 
TRUE
, TRUE, 
CheckEºRoomOvf
, 
Rñó£EºRoomOvfEx
 },

45 { 
ERR_TEMP_COLD_WATER
, 
FALSE
, FALSE, 
TRUE
, TRUE, 
CheckEºTempCﬁdW©î
, 
Rñó£EºTempCﬁdW©î
 },

46 { 
ERR_TEMP_HOT_WATER
, 
FALSE
, FALSE, 
TRUE
, TRUE, 
CheckEºTempHŸW©î
, 
Rñó£EºTempHŸW©î
 }

48 
	#SZ_ERR_LIST
 ((
EºLi°
)/(
Eº‹Li°_T
))

	)

51 
Eº‹Id_T
 
	$FödCheckEº‹
–
Eº‹Li°_T
 *
pEºLi°
, 
U16
 
mu16Size
 )

53 
U8
 
i
;

54 
EºFun_T
 
pCheck
;

55 
EºFun_T
 
pRñó£
;

56 
Eº‹Id_T
 
mId
 = 
ERR_NONE
;

57 
Eº‹Id_T
 
mNewId
 = 
ERR_NONE
;

58 
U8
 
mu8Eº‹
 = 
FALSE
;

60 
Eº‹Li°_T
 *
pLi°
 = 
NULL
;

64  
i
 = 0; i < 
mu16Size
; i++ )

66 
pLi°
 = (
pEºLi°
 + 
i
 );

69 
mId
 = 
pLi°
->
Id
;

70 
mu8Eº‹
 = 
pLi°
->
Eº‹
;

71 
pCheck
 = 
pLi°
->
Check
;

72 
pRñó£
 = 
pLi°
->
Rñó£
;

74 if–
mu8Eº‹
 =
TRUE
 )

76 if–
pRñó£
 !
NULL
 )

78 
mu8Eº‹
 = 
	`pRñó£
( mu8Error );

83 if–
pCheck
 !
NULL
 )

85 
mu8Eº‹
 = 
	`pCheck
( mu8Error );

90 if–
pLi°
->
PªvEº‹
 !
mu8Eº‹
 )

92 
pLi°
->
PªvEº‹
 =ÖLi°->
Eº‹
;

93 
pLi°
->
Eº‹
 = 
mu8Eº‹
;

95 
	`SëEº‹Sètus
–
mId
, 
pLi°
->
Eº‹
 );

99 if–
pLi°
->
Di•A˘ive
 =
TRUE
 )

102 if–
	`GëEº‹Sètus
–
mId
 ) =
TRUE
 )

104 
mNewId
 = 
mId
;

110  
mNewId
;

111 
	}
}

114 
	$Pro˚ssEº‹
()

116 #i‡
CONFIG_ERR_ALL


117 
Eº‹Id_T
 
mNewId
 = 
ERR_NONE
;

120 
mNewId
 = 
	`FödCheckEº‹
–&
EºLi°
[0], 
SZ_ERR_LIST
 );

123 
	`Upd©eNewEº‹
–
mNewId
 );

125 
	}
}

128 
U8
 
	$Rñó£EºRoomOvfEx
(
U8
 
mu8Eº‹
)

130 if–
	`GëTimeSh‹tSètus
(Ë=
FALSE
 )

132  
mu8Eº‹
;

135  
	`Rñó£EºRoomOvf
–
mu8Eº‹
 );

136 
	}
}

138 
U8
 
	$Rñó£EºRoomCom∂exEx
(
U8
 
mu8Eº‹
)

140 if–
	`GëTimeSh‹tSètus
(Ë=
FALSE
 )

142  
mu8Eº‹
;

145  
	`Rñó£EºRoomCom∂ex
–
mu8Eº‹
 );

146 
	}
}

148 
U8
 
	$Rñó£EºRoomHighEx
(
U8
 
mu8Eº‹
)

150 if–
	`GëTimeSh‹tSètus
(Ë=
FALSE
 )

152  
mu8Eº‹
;

155  
	`Rñó£EºRoomHigh
–
mu8Eº‹
 );

156 
	}
}

158 
U8
 
	$Rñó£EºRoomLowEx
(
U8
 
mu8Eº‹
)

160 if–
	`GëTimeSh‹tSètus
(Ë=
FALSE
 )

162  
mu8Eº‹
;

165  
	`Rñó£EºRoomLow
–
mu8Eº‹
 );

166 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\process_error.h

1 #i‚de‡
__PROCESS_ERROR_H__


2 
	#__PROCESS_ERROR_H__


	)

4 
	~"¥j_ty≥.h
"

7 
InôEº‹Li°
();

8 
Pro˚ssEº‹
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\fct.c

1 
	~"f˘.h
"

4 
	#DEFAULT_LIMIT_TIME_VALUE
 30U

	)

5 
	#DEFAULT_TEST_TIME_VALUE
 1800U

	)

8 
	s_f˘_


10 
U8
 
	mSètus
;

11 
U16
 
	mLimôTimî
;

12 
U16
 
	mTe°Timî
;

15 
U32
 
	mI≈utTe°
;

16 } 
	tF˘_T
;

18 
F˘_T
 
	gf˘
;

21 
	$InôF˘
()

23 
f˘
.
Sètus
 = 
FALSE
;

24 
f˘
.
LimôTimî
 = 
DEFAULT_LIMIT_TIME_VALUE
;

25 
f˘
.
Te°Timî
 = 
DEFAULT_TEST_TIME_VALUE
;

26 
f˘
.
I≈utTe°
 = 0UL;

27 
	}
}

29 
	$SèπF˘
()

31 if–
f˘
.
LimôTimî
 == 0 )

36 
f˘
.
Sètus
 = 
TRUE
;

37 
	}
}

39 
	$St›F˘
()

41 
f˘
.
Sètus
 = 
FALSE
;

42 
	}
}

44 
U8
 
	$IsExpúedF˘LimôTimî
()

46 if–
f˘
.
LimôTimî
 != 0 )

48  
FALSE
;

50  
TRUE
;

51 
	}
}

53 
U8
 
	$GëF˘Sètus
()

55  
f˘
.
Sètus
;

56 
	}
}

58 
	$SëF˘Te°Timî
(
U16
 
mu16Time
)

60 
f˘
.
Te°Timî
 = 
mu16Time
;

61 
	}
}

63 
U16
 
	$GëF˘Te°Timî
()

65  
f˘
.
Te°Timî
;

66 
	}
}

70 
	$SëF˘Te°I≈utBô
(
U32
 
mu32MaskBô
)

72 
f˘
.
I≈utTe°
 |
mu32MaskBô
;

73 
	}
}

75 
	$CÀ¨F˘Te°I≈utBô
(
U32
 
mu32MaskBô
)

77 
f˘
.
I≈utTe°
 &~
mu32MaskBô
;

78 
	}
}

80 
	$SëF˘Te°I≈utVÆ
(
U32
 
mu32MaskBô
)

82 
f˘
.
I≈utTe°
 = 
mu32MaskBô
;

83 
	}
}

85 
U8
 
	$IsSëF˘Te°I≈utVÆ
–
U32
 
mu32MaskBô
 )

87 if–(
f˘
.
I≈utTe°
 & 
mu32MaskBô
) != 0 )

89  
TRUE
;

92  
FALSE
;

93 
	}
}

95 
U32
 
	$GëF˘Te°I≈utVÆ
()

97  
f˘
.
I≈utTe°
;

98 
	}
}

101 
	$Upd©eF˘Timî
()

103 if–
f˘
.
LimôTimî
 != 0 )

105 
f˘
.
LimôTimî
--;

107 if–
f˘
.
Te°Timî
 != 0 )

109 
f˘
.
Te°Timî
--;

111 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\fct.h

1 #i‚de‡
__FCT_H__


2 
	#__FCT_H__


	)

4 
	~"¥j_ty≥.h
"

6 
InôF˘
();

8 
SèπF˘
();

9 
St›F˘
();

10 
U8
 
IsExpúedF˘LimôTimî
();

11 
U8
 
GëF˘Sètus
();

13 
SëF˘Te°Timî
(
U16
 
mu16Time
);

14 
U16
 
GëF˘Te°Timî
();

18 
	#MK_FCT_KEY_BACK
 0x00000001UL

	)

19 
	#MK_FCT_KEY_SETTING
 0x00000002UL

	)

20 
	#MK_FCT_KEY_LEFT
 0x00000004UL

	)

21 
	#MK_FCT_KEY_RIGHT
 0x00000008UL

	)

23 
	#MK_FCT_KEY_ROOM
 0x00000010UL

	)

24 
	#MK_FCT_KEY_COLD
 0x00000020UL

	)

25 
	#MK_FCT_KEY_CONTY
 0x00000040UL

	)

26 
	#MK_FCT_KEY_SODA
 0x00000080UL

	)

28 
	#MK_FCT_KEY_USER
 0x00000100UL

	)

29 
	#MK_FCT_LEVER_WATER
 0x00000200UL

	)

30 
	#MK_FCT_LEVER_ICE
 0x00000400UL

	)

31 
	#MK_FCT_TANK_OPEN
 0x00000800UL

	)

33 
	#MK_FCT_EEPROM
 0x00001000UL

	)

34 
	#MK_FCT_LCD_MUTE
 0x00002000UL

	)

35 
	#MK_FCT_LCD_COLD
 0x00004000UL

	)

36 
	#MK_FCT_LCD_SAVING
 0x00008000UL

	)

38 
	#MK_FCT_LCD_ERROR
 0x00010000UL

	)

39 
	#MK_FCT_LCD_ICE
 0x00020000UL

	)

40 
	#MK_FCT_LCD_LOW
 0x00040000UL

	)

42 
	#MK_FCT_ALL
 0x0007FFFFUL

	)

43 
SëF˘Te°I≈utBô
(
U32
 
mu32MaskBô
);

44 
CÀ¨F˘Te°I≈utBô
(
U32
 
mu32MaskBô
);

45 
SëF˘Te°I≈utVÆ
(
U32
 
mu32MaksBô
);

46 
U8
 
IsSëF˘Te°I≈utVÆ
–
U32
 
mu32MaskBô
 );

47 
U32
 
GëF˘Te°I≈utVÆ
();

50 
Upd©eF˘Timî
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\key_fct_handler.c

1 
	~"key_f˘_h™dÀr.h
"

2 
	~"key.h
"

3 
	~"key_comm⁄_h™dÀr.h
"

4 
	~"di•œy.h
"

5 
	~"sound.h
"

6 
	~"¥o˚ss_f˘.h
"

8 
SëKeyBô
(
U32
 
mu32MaskBô
 );

9 
U8
 
FCT_Room
();

10 
U8
 
FCT_Cﬁd
();

11 
U8
 
FCT_C⁄ty
();

13 
U8
 
FCT_Soda
();

14 
U8
 
FCT_U£r
();

15 
U8
 
FCT_Back
();

16 
U8
 
FCT_Sëtög
();

17 
U8
 
FCT_Le·
();

18 
U8
 
FCT_Right
();

21 c⁄° 
KeyEvítLi°_T
 
	gFCT_KeyEvítLi°
[] =

27 { 
K_COLD
, 
FCT_Cﬁd
, 
NULL
, NULL, NULL, NULL, NULL }

31 
U8
 
	$IsVÆidF˘KeyC⁄dôi⁄
(
U16
 
mu16Key
)

34  
TRUE
;

35 
	}
}

37 * 
	$GëF˘KeyEvítLi°
()

39  (*)
FCT_KeyEvítLi°
;

40 
	}
}

42 
U8
 
	$GëF˘KeyEvítLi°Size
()

44  ( (
FCT_KeyEvítLi°
Ë/ (
KeyEvítLi°_T
) );

45 
	}
}

47 
	$SëKeyBô
(
U32
 
mu32MaskBô
 )

49 
U32
 
mu32I≈utVÆ
;

52 
mu32I≈utVÆ
 = 
	`GëF˘Te°I≈utVÆ
();

53 if–(
mu32I≈utVÆ
 & 
mu32MaskBô
 ) != 0 )

55 
	`CÀ¨F˘Te°I≈utBô
–
mu32MaskBô
 );

59 
	`SëF˘Te°I≈utBô
–
mu32MaskBô
 );

61 
	}
}

63 
U8
 
	$FCT_Room
()

65 
	`SëKeyBô
–
MK_FCT_KEY_ROOM
 );

68 
	`CÀ¨F˘Te°I≈utBô
–
MK_FCT_KEY_COLD
 );

69 
	`CÀ¨F˘Te°I≈utBô
–
MK_FCT_KEY_SODA
 );

70  
SOUND_SELECT
;

71 
	}
}

73 
U8
 
	$FCT_Cﬁd
()

75 
	`SëKeyBô
–
MK_FCT_KEY_COLD
 );

77 
	`CÀ¨F˘Te°I≈utBô
–
MK_FCT_KEY_ROOM
 );

78 
	`CÀ¨F˘Te°I≈utBô
–
MK_FCT_KEY_SODA
 );

80  
SOUND_SELECT
;

81 
	}
}

83 
U8
 
	$FCT_C⁄ty
()

85 
	`SëKeyBô
–
MK_FCT_KEY_CONTY
 );

87  
SOUND_SELECT
;

88 
	}
}

90 
U8
 
	$FCT_Soda
()

92 
	`SëKeyBô
–
MK_FCT_KEY_SODA
 );

94 
	`CÀ¨F˘Te°I≈utBô
–
MK_FCT_KEY_ROOM
 );

95 
	`CÀ¨F˘Te°I≈utBô
–
MK_FCT_KEY_COLD
 );

97  
SOUND_SELECT
;

98 
	}
}

100 
U8
 
	$FCT_U£r
()

102 
	`SëKeyBô
–
MK_FCT_KEY_USER
 );

104  
SOUND_SELECT
;

105 
	}
}

107 
U8
 
	$FCT_Back
()

109 
	`SëKeyBô
–
MK_FCT_KEY_BACK
 );

111  
SOUND_SELECT
;

112 
	}
}

114 
U8
 
	$FCT_Sëtög
()

116 
	`SëKeyBô
–
MK_FCT_KEY_SETTING
 );

118  
SOUND_SELECT
;

119 
	}
}

121 
U8
 
	$FCT_Le·
()

123 
	`SëKeyBô
–
MK_FCT_KEY_LEFT
 );

125  
SOUND_SELECT
;

126 
	}
}

128 
U8
 
	$FCT_Right
()

130 
	`SëKeyBô
–
MK_FCT_KEY_RIGHT
 );

132  
SOUND_SELECT
;

133 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\key_fct_handler.h

1 #i‚de‡
__KEY_FCT_HANDLER_H__


2 
	#__KEY_FCT_HANDLER_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"f˘.h
"

8 
U8
 
IsVÆidF˘KeyC⁄dôi⁄
(
U16
 
mu16Key
);

10 * 
GëF˘KeyEvítLi°
();

12 
U8
 
GëF˘KeyEvítLi°Size
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\process_fct.c

1 
	~"hw.h
"

2 
	~"¥o˚ss_f˘.h
"

3 
	~"f˘.h
"

5 
	~"≠i_adc.h
"

6 
	~"hÆ_Àd.h
"

8 
	~"key.h
"

9 
	~"ì¥om.h
"

10 
	~"utû.h
"

11 
	~"comm.h
"

12 
	~"timî.h
"

13 
	~"di•œy.h
"

14 
	~"ãmp.h
"

16 
	~"vÆve.h
"

17 
	~"ªœy.h
"

20 
U8
 
	$IsExpúedTe°Time
()

22 if–
	`GëF˘Te°Timî
() != 0 )

24  
FALSE
;

27  
TRUE
;

28 
	}
}

31 
	$InôLﬂd
()

33 
U8
 
mu8Rë
;

39 
	`Clo£VÆve
–
VALVE_ALL
 );

40 
	`O≥nVÆve
–
VALVE_NOS
 );

43 
	`Tu∫OffRñayAŒ
();

46 
mu8Rë
 = 
	`Te°Eïrom
();

47 if–
mu8Rë
 =
TRUE
 )

49 
	`SëF˘Te°I≈utBô
–
MK_FCT_EEPROM
 );

53 
	`CÀ¨F˘Te°I≈utBô
–
MK_FCT_EEPROM
 );

55 
	}
}

59 
	$Pro˚ssF˘LﬂdTe°
()

62 
	`Tu∫OffAŒLED
();

71 if–
	`IsSëF˘Te°I≈utVÆ
–
MK_FCT_EEPROM
 ) =
TRUE
 )

83 if–
	`IsSëF˘Te°I≈utVÆ
–
MK_FCT_KEY_COLD
 ) =
TRUE
 )

95 if–
	`GET_ROOM_TANK_HIGH
(Ë=
HIGH
 )

100 if–
	`GET_ROOM_TANK_LOW
(Ë=
HIGH
 )

113 if–
	`GET_ROOM_TANK_OVERFLOW
(Ë=
HIGH
 )

125 if–
	`GëTemp
–
TEMP_ID_COLD_WATER
 ) >= 8.0f

126 && 
	`GëTemp
–
TEMP_ID_COLD_WATER
 ) <= 12.0f )

134 
	}
}

137 
	$Pro˚ssF˘
()

139 
U8
 
mu8Inô
 = 0;

142 if–
	`IsExpúedTe°Time
(Ë=
TRUE
 )

144 
	`Re£t
();

148 if–
mu8Inô
 == 0 )

150 
mu8Inô
 = 1;

151 
	`InôLﬂd
();

153 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\process_fct.h

1 #i‚de‡
__PROCESS_FCT_H__


2 
	#__PROCESS_FCT_H__


	)

4 
	~"¥j_ty≥.h
"

6 
Pro˚ssF˘LﬂdTe°
();

8 
Pro˚ssF˘
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_adc.c

7 
	~"hw.h
"

9 
	~"hÆ_adc.h
"

12 
	#ADC_SET_CHANNEL
(
x
Ëdo{ 
ADS
 = (x); }0)

13 
	#ADC_START_CONVERSION_INT
(Ëdo{ 
ADIF
 = 0U; 
ADMK
 = 0U; 
ADCS
 = 1U; }0)

	)

14 
	#ADC_STOP_CONVERSION_INT
(Ëdo{ 
ADCS
 = 0U; 
ADMK
 = 1U; 
ADIF
 = 0U; }0)

	)

15 
	#ADC_START_CONVERSION
(Ëdo{ 
ADCS
 = 1U; }0)

16 
	#ADC_STOP_CONVERSION
(Ëdo{ 
ADCS
 = 0U; }0)

17 
	#ADC_SAMPLING
(Ë!
ADIF
)

	)

18 
	#ADC_GET_VALUE
(Ë(
ADCR
 >> 6)

	)

26 
U16
 
	$HÆSam∂eAdc
–
U8
 
xUch™√l
 )

28 
U16
 
uRawD©a
 = 0;

31 
ADIF
 = 0;

32 
	`ADC_STOP_CONVERSION
();

35 
	`ADC_SET_CHANNEL
–
xUch™√l
 );

38 
	`R_ADC_Së_O≥øti⁄On
();

39 
	`ADC_START_CONVERSION
();

42 
	`ADC_SAMPLING
();

43 
uRawD©a
 = 
	`ADC_GET_VALUE
();

46 
	`ADC_SAMPLING
();

47 
uRawD©a
 = 
	`ADC_GET_VALUE
();

50 
	`ADC_STOP_CONVERSION
();

51 
	`R_ADC_Së_O≥øti⁄Off
();

53  
uRawD©a
;

54 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_adc.h

7 #i‚de‡
__HAL_ADC_H__


8 
	#__HAL_ADC_H__


	)

10 
	~"¥j_ty≥.h
"

12 
U16
 
HÆSam∂eAdc
–
U8
 
xUch™√l
 );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_eeprom.c

3 
	~"hw.h
"

4 
	~"r_cg_£rül.h
"

5 
	~"hÆ_i2c.h
"

6 
	~"hÆ_ì¥om.h
"

7 
	~"utû.h
"

10 
	#EEP_OP_WR
 0x00

	)

11 
	#EEP_OP_RD
 0x01

	)

13 
	#DEFAULT_DELAY
 35

	)

14 
	#DEFAULT_RETRY_COUNT
 3

	)

16 
	s_πc_i¶12026_


19 
U8
 
	mWrôeProc
;

20 
U8
 
	mRódProc
;

22 
U32
 
	mRódFaû
;

23 
U32
 
	mRódOk
;

25 
U32
 
	mWrôeFaû
;

26 
U32
 
	mWrôeOk
;

27 } 
	tRTC_T
;

29 
RTC_T
 
	gπc
;

40 
	$HAL_RTC_Inô
()

42 
	`mem£t
–&
πc
, 0, –
RTC_T
 ));

43 
	}
}

50 
	$HAL_RTC_SëWrôeProc
–
U8
 
_¥oc
 )

52 
πc
.
WrôeProc
 = 
_¥oc
;

53 
	}
}

60 
U8
 
	$HAL_RTC_GëWrôeProc
( )

62  
πc
.
WrôeProc
;

63 
	}
}

70 
BOOL_T
 
	$HAL_RTC_WrôeProcCom∂ëe
( )

72 
U16
 
waô
 = 10000;

76 if–
waô
 > 0 )

77 
waô
--;

79  
FALSE
;

81  !–
	`HAL_RTC_GëWrôeProc
(Ë=
EEP_PROC_DONE
 ) );

83  
TRUE
;

84 
	}
}

91 
	$HAL_RTC_SëRódProc
–
U8
 
_¥oc
 )

93 
πc
.
RódProc
 = 
_¥oc
;

94 
	}
}

101 
U8
 
	$HAL_RTC_GëRódProc
( )

103  
πc
.
RódProc
;

104 
	}
}

111 
BOOL_T
 
	$HAL_RTC_RódProcCom∂ëe
( )

113 
U16
 
waô
 = 10000;

117 if–
waô
 > 0 )

118 
waô
--;

120  
FALSE
;

122  !–
	`HAL_RTC_GëRódProc
(Ë=
EEP_PROC_DONE
 ) );

124  
TRUE
;

125 
	}
}

127 
	$Cou¡RódEº‹
()

129 
πc
.
RódFaû
++;

130 
	}
}

132 
	$Cou¡WrôeEº‹
()

134 
πc
.
WrôeFaû
++;

135 
	}
}

137 
	$i2ˇ0_St›C⁄dôi⁄
()

139 
	`R_IICA0_St›C⁄dôi⁄
();

141 
	}
}

148 
BOOL_T
 
	$ByãWrôe
–
U8
 
_dev
, 
U16
 
_addr
 , U8 
_d©a
 )

150 
U8
 
buf
[ 3 ];

152 
buf
[ 0 ] = 
	`GET_HIGH_BYTE
(
_addr
);

153 
buf
[ 1 ] = 
	`GET_LOW_BYTE
(
_addr
);

154 
buf
[ 2 ] = 
_d©a
;

157 
	`HAL_RTC_SëWrôeProc
–
EEP_PROC_START
 );

159 if–
	`i2ˇ0_ma°î_£nd
–
_dev
 | 
EEP_OP_WR
 , &
buf
[1] , 2 , 200 ) !
MD_OK
 )

161 
	`Cou¡WrôeEº‹
();

163 
	`i2ˇ0_St›C⁄dôi⁄
();

164  
FALSE
;

167 if–!
	`HAL_RTC_WrôeProcCom∂ëe
() )

169 
	`Cou¡WrôeEº‹
();

170 
	`i2ˇ0_St›C⁄dôi⁄
();

171  
FALSE
;

174 
	`i2ˇ0_St›C⁄dôi⁄
();

175 
	`Dñay_MS
–
DEFAULT_DELAY
 );

178 
πc
.
WrôeOk
++;

179  
TRUE
;

180 
	}
}

182 
BOOL_T
 
	$HAL_RTC_ByãWrôe
–
U8
 
_dev
, 
U16
 
_addr
 , U8 
_d©a
 )

184 
U8
 
mu8RëryCou¡
 = 
DEFAULT_RETRY_COUNT
;

190 if–
mu8RëryCou¡
 == 0 )

192  
FALSE
;

194 
mu8RëryCou¡
--;

196 
	`RESET_WDT
();

199  
	`ByãWrôe
–
_dev
, 
_addr
, 
_d©a
 ) !
TRUE
 );

201 
	`RESET_WDT
();

202  
TRUE
;

203 
	}
}

211 
BOOL_T
 
	$PageWrôe
–
U8
 
_dev
, 
U16
 
_addr
 , U8 *
_d©a
, U8 
_Àn
 )

213 
U8
 
buf
 [ 
EEP_PAGE_SIZE
 + 2 ];

214 
U8
 
rbuf
[ 
EEP_PAGE_SIZE
 ];

216 
buf
[ 0 ] = 
	`GET_HIGH_BYTE
(
_addr
);

217 
buf
[ 1 ] = 
	`GET_LOW_BYTE
(
_addr
);

219 
	`mem˝y
–&
buf
[ 2 ], &
_d©a
[ 0 ], 
_Àn
 );

221 
	`HAL_RTC_SëWrôeProc
–
EEP_PROC_START
 );

225 if–
	`i2ˇ0_ma°î_£nd
–
_dev
 | 
EEP_OP_WR
 , &
buf
[ 1 ] , 
_Àn
 + 1 , 200 ) !
MD_OK
 )

227 
	`Cou¡WrôeEº‹
();

228 
	`i2ˇ0_St›C⁄dôi⁄
();

229  
FALSE
;

232 if–!
	`HAL_RTC_WrôeProcCom∂ëe
() )

234 
	`Cou¡WrôeEº‹
();

235 
	`i2ˇ0_St›C⁄dôi⁄
();

236  
FALSE
;

239 
	`i2ˇ0_St›C⁄dôi⁄
();

240 
	`Dñay_MS
–
DEFAULT_DELAY
 );

244 if–!
	`HAL_RTC_SeqRód
–
_dev
, 
_addr
, &
rbuf
[ 0 ], 
_Àn
 ) )

246 
	`Cou¡WrôeEº‹
();

247 
	`i2ˇ0_St›C⁄dôi⁄
();

248  
FALSE
;

252 if–
	`memcmp
–&
buf
[ 2 ], &
rbuf
[ 0 ], 
_Àn
 ) != 0 )

254 
	`Cou¡WrôeEº‹
();

255 
	`i2ˇ0_St›C⁄dôi⁄
();

256  
FALSE
;

259 
	`i2ˇ0_St›C⁄dôi⁄
();

260 
	`Dñay_MS
–
DEFAULT_DELAY
 );

262 
πc
.
WrôeOk
++;

263  
TRUE
;

264 
	}
}

266 
BOOL_T
 
	$HAL_RTC_PageWrôe
–
U8
 
_dev
, 
U16
 
_addr
 , U8 *
_d©a
, U8 
_Àn
 )

268 
U8
 
mu8RëryCou¡
 = 
DEFAULT_RETRY_COUNT
;

273 if–
mu8RëryCou¡
 == 0 )

275  
FALSE
;

277 
mu8RëryCou¡
--;

279 
	`RESET_WDT
();

282  
	`PageWrôe
–
_dev
, 
_addr
, 
_d©a
, 
_Àn
 ) !
TRUE
 );

284 
	`RESET_WDT
();

285  
TRUE
;

286 
	}
}

295 
BOOL_T
 
	$CuºítAddrRód
–
U8
 
_dev
, U8 *
_d©a
 )

297 
	`HAL_RTC_SëRódProc
–
EEP_PROC_START
 );

299 if–
	`i2ˇ0_ma°î_ªcv
–
_dev
 | 
EEP_OP_RD
 , 
_d©a
 , 1 , 10 ) !
MD_OK
 )

301 
	`Cou¡RódEº‹
();

302 
	`i2ˇ0_St›C⁄dôi⁄
();

303  
FALSE
;

306 if–!
	`HAL_RTC_RódProcCom∂ëe
() )

308 
	`Cou¡RódEº‹
();

309 
	`i2ˇ0_St›C⁄dôi⁄
();

310  
FALSE
;

313 
	`i2ˇ0_St›C⁄dôi⁄
();

314 
	`Dñay_MS
–
DEFAULT_DELAY
 );

315 
πc
.
RódOk
++;

316  
TRUE
;

317 
	}
}

319 
BOOL_T
 
	$HAL_RTC_CuºítAddrRód
–
U8
 
_dev
, U8 *
_d©a
 )

321 
U8
 
mu8RëryCou¡
 = 
DEFAULT_RETRY_COUNT
;

327 if–
mu8RëryCou¡
 == 0 )

329  
FALSE
;

331 
mu8RëryCou¡
--;

333 
	`RESET_WDT
();

336  
	`CuºítAddrRód
–
_dev
, 
_d©a
 ) !
TRUE
 );

338 
	`RESET_WDT
();

339  
TRUE
;

340 
	}
}

346 
BOOL_T
 
	$ByãRód
–
U8
 
_dev
, 
U16
 
_addr
 , U8 *
_d©a
 )

348 
U8
 
buf
[2] = {0};

351 
buf
[0] = 
	`GET_HIGH_BYTE
–
_addr
 );

352 
buf
[1] = 
	`GET_LOW_BYTE
–
_addr
 );

354 
	`HAL_RTC_SëWrôeProc
–
EEP_PROC_START
 );

357 if–
	`i2ˇ0_ma°î_£nd
–
_dev
 | 
EEP_OP_WR
 , &
buf
[1] , 1 , 200 ) !
MD_OK
 )

359 
	`Cou¡RódEº‹
();

360 
	`i2ˇ0_St›C⁄dôi⁄
();

361  
FALSE
;

364 if–!
	`HAL_RTC_WrôeProcCom∂ëe
() )

366 
	`Cou¡RódEº‹
();

367 
	`i2ˇ0_St›C⁄dôi⁄
();

368  
FALSE
;

371 
	`HAL_RTC_SëRódProc
–
EEP_PROC_START
 );

374 if–
	`i2ˇ0_ma°î_ªcv
–
_dev
 | 
EEP_OP_RD
 , 
_d©a
 , 1 , 200 ) !
MD_OK
 )

376 
	`Cou¡RódEº‹
();

377 
	`i2ˇ0_St›C⁄dôi⁄
();

378  
FALSE
;

382 if–!
	`HAL_RTC_RódProcCom∂ëe
() )

384 
	`Cou¡RódEº‹
();

385 
	`i2ˇ0_St›C⁄dôi⁄
();

386  
FALSE
;

389 
	`i2ˇ0_St›C⁄dôi⁄
();

390 
	`Dñay_MS
–
DEFAULT_DELAY
 );

391 
πc
.
RódOk
++;

392  
TRUE
;

393 
	}
}

395 
BOOL_T
 
	$HAL_RTC_ByãRód
–
U8
 
_dev
, 
U16
 
_addr
 , U8 *
_d©a
 )

397 
U8
 
mu8RëryCou¡
 = 
DEFAULT_RETRY_COUNT
;

402 if–
mu8RëryCou¡
 == 0 )

404  
FALSE
;

406 
mu8RëryCou¡
--;

408 
	`RESET_WDT
();

411  
	`ByãRód
–
_dev
, 
_addr
 , 
_d©a
 ) !
TRUE
 );

413 
	`RESET_WDT
();

414  
TRUE
;

415 
	}
}

422 
BOOL_T
 
	$SeqRód
–
U8
 
_dev
, 
U16
 
_addr
 , U8 * 
_d©a
, U8 
_Àn
 )

424 
U8
 
buf
[2] = {0};

427 
buf
[0] = 
	`GET_HIGH_BYTE
–
_addr
 );

428 
buf
[1] = 
	`GET_LOW_BYTE
–
_addr
 );

429 
	`HAL_RTC_SëWrôeProc
–
EEP_PROC_START
 );

433 if–
	`i2ˇ0_ma°î_£nd
–
_dev
 | 
EEP_OP_WR
 , &
buf
[1] , 1 , 200 ) !
MD_OK
 )

435 
	`Cou¡RódEº‹
();

436 
	`i2ˇ0_St›C⁄dôi⁄
();

437  
FALSE
;

441 if–!
	`HAL_RTC_WrôeProcCom∂ëe
() )

443 
	`Cou¡RódEº‹
();

444 
	`i2ˇ0_St›C⁄dôi⁄
();

445  
FALSE
;

448 
	`HAL_RTC_SëRódProc
–
EEP_PROC_START
 );

451 if–
	`i2ˇ0_ma°î_ªcv
–
_dev
 | 
EEP_OP_RD
 , 
_d©a
 , 
_Àn
 , 200 ) !
MD_OK
 )

453 
	`Cou¡RódEº‹
();

454 
	`i2ˇ0_St›C⁄dôi⁄
();

455  
FALSE
;

458 if–!
	`HAL_RTC_RódProcCom∂ëe
() )

460 
	`Cou¡RódEº‹
();

461 
	`i2ˇ0_St›C⁄dôi⁄
();

462  
FALSE
;

466 
	`i2ˇ0_St›C⁄dôi⁄
();

467 
	`Dñay_MS
–
DEFAULT_DELAY
 );

468 
πc
.
RódOk
++;

469  
TRUE
;

470 
	}
}

472 
BOOL_T
 
	$HAL_RTC_SeqRód
–
U8
 
_dev
, 
U16
 
_addr
 , U8 * 
_d©a
, U8 
_Àn
 )

474 
U8
 
mu8RëryCou¡
 = 
DEFAULT_RETRY_COUNT
;

479 if–
mu8RëryCou¡
 == 0 )

481  
FALSE
;

483 
mu8RëryCou¡
--;

485 
	`RESET_WDT
();

488  
	`SeqRód
–
_dev
, 
_addr
 , 
_d©a
, 
_Àn
 ) !
TRUE
 );

490 
	`RESET_WDT
();

491  
TRUE
;

492 
	}
}

499 
BOOL_T
 
	$HAL_RTC_EEPROM_AŒEø£
( )

501 
U8
 
buf
[ 
EEP_PAGE_SIZE
 + 2 ];

502 
U16
 
i
;

503 
U16
 
addr
;

505 
	`mem£t
–&
buf
[ 2 ], 0x00, 
EEP_PAGE_SIZE
 );

507  
i
 = 0; i < 
EEP_PAGE_NUM
; i++ )

509 
addr
 = (
i
 * 
EEP_PAGE_SIZE
);

510 
buf
[ 0 ] = 
	`GET_HIGH_BYTE
–
addr
 );

511 
buf
[ 1 ] = 
	`GET_LOW_BYTE
–
addr
 );

513 
	`HAL_RTC_SëWrôeProc
–
EEP_PROC_START
 );

516 if–
	`i2ˇ0_ma°î_£nd
–
DEV_ADDR_EEP
 | 
EEP_OP_WR
 , &
buf
[ 1 ] , 
EEP_PAGE_SIZE
 + 1 , 200 ) !
MD_OK
 )

518 
	`Cou¡WrôeEº‹
();

519 
	`i2ˇ0_St›C⁄dôi⁄
();

520  
FALSE
;

523 if–!
	`HAL_RTC_WrôeProcCom∂ëe
() )

525 
	`Cou¡WrôeEº‹
();

526 
	`i2ˇ0_St›C⁄dôi⁄
();

527  
FALSE
;

530 
	`i2ˇ0_St›C⁄dôi⁄
();

531 
	`Dñay_MS
–
DEFAULT_DELAY
 );

534 
	`i2ˇ0_St›C⁄dôi⁄
();

535 
	`Dñay_MS
–
DEFAULT_DELAY
 );

536 
πc
.
WrôeOk
++;

537  
TRUE
;

538 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_eeprom.h

3 #i‚de‡
__HAL_EEPROM_H__


4 
	#__HAL_EEPROM_H__


	)

7 
	~"¥j_ty≥.h
"

10 
	#DEV_ADDR_EEP
 0xA0

	)

12 
	#EEP_MAX_SIZE
 256

	)

13 
	#EEP_PAGE_SIZE
 8

	)

14 
	#EEP_PAGE_NUM
 32

	)

17 
	#EEP_PROC_START
 0

	)

18 
	#EEP_PROC_DONE
 1

	)

22 
HAL_RTC_Inô
();

29 
HAL_RTC_SëWrôeProc
–
U8
 
_¥oc
 );

36 
U8
 
HAL_RTC_GëWrôeProc
( );

43 
HAL_RTC_SëRódProc
–
U8
 
_¥oc
 );

50 
U8
 
HAL_RTC_GëRódProc
( );

57 
BOOL_T
 
HAL_RTC_ByãWrôe
–
U8
 
_dev
, 
U16
 
_addr
 , U8 
_d©a
 );

64 
BOOL_T
 
HAL_RTC_PageWrôe
–
U8
 
_dev
, 
U16
 
_addr
 , U8 *
_d©a
, U8 
_Àn
 );

71 
BOOL_T
 
HAL_RTC_CuºítAddrRód
–
U8
 
_dev
, U8 *
_d©a
 );

78 
BOOL_T
 
HAL_RTC_ByãRód
–
U8
 
_dev
, 
U16
 
_addr
 , U8 *
_d©a
 );

85 
BOOL_T
 
HAL_RTC_SeqRód
–
U8
 
_dev
, 
U16
 
_addr
 , U8 * 
_d©a
, U8 
_Àn
 );

92 
BOOL_T
 
HAL_RTC_EEPROM_AŒEø£
( );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_i2c.c

3 #¥agm®
öãºu±
 
INTIICA0
 
r_i2ˇ0_öãºu±


6 
	#TEST_EEP_NO_STOP
 1

	)

8 
	~"hÆ_i2c.h
"

9 
	~"r_cg_£rül.h
"

10 
	~"hÆ_ì¥om.h
"

17 vﬁ©ûê
uöt8_t
 
	gi2ˇ0_m°©us
 = 0;

18 vﬁ©ûê
uöt8_t
 *
	gi2ˇ0_rx_pbuf
 = 0;

19 vﬁ©ûê
uöt16_t
 
	gi2ˇ0_rx_Àn
 = 0;

20 vﬁ©ûê
uöt16_t
 
	gi2ˇ0_rx_˙t
 = 0;

22 vﬁ©ûê
uöt8_t
 *
	gi2ˇ0_tx_pbuf
 = 0;

23 vﬁ©ûê
uöt16_t
 
	gi2ˇ0_tx_˙t
 = 0;

26 vﬁ©ûê
uöt8_t
 
	gi2ˇ1_m°©us
 = 0;

27 vﬁ©ûê
uöt8_t
 *
	gi2ˇ1_rx_pbuf
 = 0;

28 vﬁ©ûê
uöt16_t
 
	gi2ˇ1_rx_Àn
 = 0;

29 vﬁ©ûê
uöt16_t
 
	gi2ˇ1_rx_˙t
 = 0;

31 vﬁ©ûê
uöt8_t
 *
	gi2ˇ1_tx_pbuf
 = 0;

32 vﬁ©ûê
uöt16_t
 
	gi2ˇ1_tx_˙t
 = 0;

41 
MD_STATUS
 
	$i2ˇ0_ma°î_£nd
–
uöt8_t
 
_addr
, uöt8_à* 
_tx_buf
, 
uöt16_t
 
_tx_num
, uöt8_à
_waô
 )

43 
MD_STATUS
 
°©us
 = 
MD_OK
;

45 
IICAMK0
 = 1U;

48 if–1U =
IICBSY0
 )

50 
IICAMK0
 = 0U;

51 
°©us
 = 
MD_ERROR1
;

54 if––1U =
SPT0
 ) || ( 1U =
STT0
 ) )

56 
IICAMK0
 = 0U;

57 
°©us
 = 
MD_ERROR2
;

61 
STT0
 = 1U;

62 
IICAMK0
 = 0U;

65  
_waô
-- )

70 if–0U =
STD0
 )

72 
°©us
 = 
MD_ERROR3
;

76 
i2ˇ0_tx_˙t
 = 
_tx_num
;

77 
i2ˇ0_tx_pbuf
 = 
_tx_buf
;

78 
i2ˇ0_m°©us
 = 
_00_IICA_MASTER_FLAG_CLEAR
;

79 
_addr
 &(
uöt8_t
)~0x01U;

80 
IICA0
 = 
_addr
;

83  ( 
°©us
 );

84 
	}
}

91 
MD_STATUS
 
	$i2ˇ0_ma°î_ªcv
–
uöt8_t
 
_addr
, uöt8_à* 
_rx_buf
, 
uöt16_t
 
_rx_num
, uöt8_à
_waô
 )

93 
MD_STATUS
 
°©us
 = 
MD_OK
;

96 #i‡!
TEST_EEP_NO_STOP


97 
IICAMK0
 = 1U;

100 if–1U =
IICBSY0
 )

102 
IICAMK0
 = 0U;

103 
°©us
 = 
MD_ERROR1
;

106 if––1U =
SPT0
 ) || ( 1U =
STT0
 ) )

108 
IICAMK0
 = 0U;

109 
°©us
 = 
MD_ERROR2
;

114 
STT0
 = 1U;

115 
IICAMK0
 = 0U;

118  
_waô
-- )

123 if–0U =
STD0
 )

125 
°©us
 = 
MD_ERROR3
;

129 
i2ˇ0_rx_˙t
 = 0U;

130 
i2ˇ0_rx_Àn
 = 
_rx_num
;

131 
i2ˇ0_rx_pbuf
 = 
_rx_buf
;

132 
i2ˇ0_m°©us
 = 
_00_IICA_MASTER_FLAG_CLEAR
;

133 
_addr
 |= 0x01U;

134 
IICA0
 = 
_addr
;

137  ( 
°©us
 );

138 
	}
}

141 
i2ˇ0_ˇŒback_ma°î_îr‹
(
MD_STATUS
 
Êag
);

142 
i2ˇ0_ˇŒback_ma°î_ª˚ivìnd
();

143 
i2ˇ0_ˇŒback_ma°î_£ndíd
();

150 
	$i2ˇ0_ma°î_h™dÀr
( )

153 if––0U =
IICBSY0
 ) && ( 
i2ˇ0_tx_˙t
 != 0U ) )

155 
	`i2ˇ0_ˇŒback_ma°î_îr‹
–
MD_SPT
 );

160 if––
i2ˇ0_m°©us
 & 
_80_IICA_ADDRESS_COMPLETE
 ) == 0U )

162 if–1U =
ACKD0
 )

164 
i2ˇ0_m°©us
 |
_80_IICA_ADDRESS_COMPLETE
;

166 if–1U =
TRC0
 )

168 
WTIM0
 = 1U;

170 if–
i2ˇ0_tx_˙t
 > 0U )

172 
IICA0
 = *
i2ˇ0_tx_pbuf
;

173 
i2ˇ0_tx_pbuf
++;

174 
i2ˇ0_tx_˙t
--;

178 
	`i2ˇ0_ˇŒback_ma°î_£ndíd
();

183 
ACKE0
 = 1U;

184 
WTIM0
 = 0U;

185 
WREL0
 = 1U;

190 
	`i2ˇ0_ˇŒback_ma°î_îr‹
–
MD_NACK
 );

196 if–1U =
TRC0
 )

198 if––0U =
ACKD0
 ) && ( 
i2ˇ0_tx_˙t
 != 0U ) )

200 
	`i2ˇ0_ˇŒback_ma°î_îr‹
–
MD_NACK
 );

205 if–
i2ˇ0_tx_˙t
 > 0U )

207 
IICA0
 = *
i2ˇ0_tx_pbuf
;

208 
i2ˇ0_tx_pbuf
++;

209 
i2ˇ0_tx_˙t
--;

213 
	`i2ˇ0_ˇŒback_ma°î_£ndíd
();

220 if–
i2ˇ0_rx_˙t
 < 
i2ˇ0_rx_Àn
 )

222 *
i2ˇ0_rx_pbuf
 = 
IICA0
;

223 
i2ˇ0_rx_pbuf
++;

224 
i2ˇ0_rx_˙t
++;

226 if–
i2ˇ0_rx_˙t
 =
i2ˇ0_rx_Àn
 )

228 
ACKE0
 = 0U;

229 
WREL0
 = 1U;

230 
WTIM0
 = 1U;

234 
WREL0
 = 1U;

239 
	`i2ˇ0_ˇŒback_ma°î_ª˚ivìnd
();

244 
	}
}

251 
	$i2ˇ0_ˇŒback_ma°î_îr‹
–
MD_STATUS
 
Êag
 )

256 
	}
}

263 
	$i2ˇ0_ˇŒback_ma°î_ª˚ivìnd
( )

265 #i‡!
TEST_EEP_NO_STOP


266 
SPT0
 = 1U;

269 
	`HAL_RTC_SëRódProc
–
EEP_PROC_DONE
 );

270 
	}
}

277 
	$i2ˇ0_ˇŒback_ma°î_£ndíd
( )

279 #i‡!
TEST_EEP_NO_STOP


280 
SPT0
 = 1U;

283 
	`HAL_RTC_SëWrôeProc
–
EEP_PROC_DONE
 );

284 
	}
}

286 
__öãºu±
 
	$r_i2ˇ0_öãºu±
()

288 i‡((
IICS0
 & 
_80_IICA_STATUS_MASTER
) == 0x80U)

290 
	`i2ˇ0_ma°î_h™dÀr
();

292 
	}
}

302 
MD_STATUS
 
	$i2ˇ1_ma°î_£nd
–
uöt8_t
 
_addr
, uöt8_à* 
_tx_buf
, 
uöt16_t
 
_tx_num
, uöt8_à
_waô
 )

304 
MD_STATUS
 
°©us
 = 
MD_OK
;

307 
IICAMK1
 = 1U;

310 if–1U =
IICBSY1
 )

312 
IICAMK1
 = 0U;

313 
°©us
 = 
MD_ERROR1
;

316 if––1U =
SPT1
 ) || ( 1U =
STT1
 ) )

318 
IICAMK1
 = 0U;

319 
°©us
 = 
MD_ERROR2
;

323 
STT1
 = 1U;

324 
IICAMK1
 = 0U;

327  
_waô
-- )

332 if–0U =
STD1
 )

334 
°©us
 = 
MD_ERROR3
;

338 
i2ˇ1_tx_˙t
 = 
_tx_num
;

339 
i2ˇ1_tx_pbuf
 = 
_tx_buf
;

340 
i2ˇ1_m°©us
 = 
_00_IICA_MASTER_FLAG_CLEAR
;

341 
_addr
 &(
uöt8_t
)~0x01U;

342 
IICA1
 = 
_addr
;

345  ( 
°©us
 );

346 
	}
}

353 
MD_STATUS
 
	$i2ˇ1_ma°î_ªcv
–
uöt8_t
 
_addr
, uöt8_à* 
_rx_buf
, 
uöt16_t
 
_rx_num
, uöt8_à
_waô
 )

355 
MD_STATUS
 
°©us
 = 
MD_OK
;

357 
IICAMK1
 = 1U;

360 if–1U =
IICBSY1
 )

362 
IICAMK1
 = 0U;

363 
°©us
 = 
MD_ERROR1
;

366 if––1U =
SPT1
 ) || ( 1U =
STT1
 ) )

368 
IICAMK1
 = 0U;

369 
°©us
 = 
MD_ERROR2
;

373 
STT1
 = 1U;

374 
IICAMK1
 = 0U;

377  
_waô
-- )

382 if–0U =
STD1
 )

384 
°©us
 = 
MD_ERROR3
;

388 
i2ˇ1_rx_˙t
 = 0U;

389 
i2ˇ1_rx_Àn
 = 
_rx_num
;

390 
i2ˇ1_rx_pbuf
 = 
_rx_buf
;

391 
i2ˇ1_m°©us
 = 
_00_IICA_MASTER_FLAG_CLEAR
;

392 
_addr
 |= 0x01U;

393 
IICA1
 = 
_addr
;

396  ( 
°©us
 );

397 
	}
}

400 
i2ˇ1_ˇŒback_ma°î_îr‹
(
MD_STATUS
 
Êag
);

401 
i2ˇ1_ˇŒback_ma°î_ª˚ivìnd
();

402 
i2ˇ1_ˇŒback_ma°î_£ndíd
();

409 
	$i2ˇ1_ma°î_h™dÀr
( )

412 if––0U =
IICBSY1
 ) && ( 
i2ˇ1_tx_˙t
 != 0U ) )

414 
	`i2ˇ1_ˇŒback_ma°î_îr‹
–
MD_SPT
 );

419 if––
i2ˇ1_m°©us
 & 
_80_IICA_ADDRESS_COMPLETE
 ) == 0U )

421 if–1U =
ACKD1
 )

423 
i2ˇ1_m°©us
 |
_80_IICA_ADDRESS_COMPLETE
;

425 if–1U =
TRC1
 )

427 
WTIM1
 = 1U;

429 if–
i2ˇ1_tx_˙t
 > 0U )

431 
IICA1
 = *
i2ˇ1_tx_pbuf
;

432 
i2ˇ1_tx_pbuf
++;

433 
i2ˇ1_tx_˙t
--;

437 
	`i2ˇ1_ˇŒback_ma°î_£ndíd
();

442 
ACKE1
 = 1U;

443 
WTIM1
 = 0U;

444 
WREL1
 = 1U;

449 
	`i2ˇ1_ˇŒback_ma°î_îr‹
–
MD_NACK
 );

455 if–1U =
TRC1
 )

457 if––0U =
ACKD1
 ) && ( 
i2ˇ1_tx_˙t
 != 0U ) )

459 
	`i2ˇ1_ˇŒback_ma°î_îr‹
–
MD_NACK
 );

463 if–
i2ˇ1_tx_˙t
 > 0U )

465 
IICA1
 = *
i2ˇ1_tx_pbuf
;

466 
i2ˇ1_tx_pbuf
++;

467 
i2ˇ1_tx_˙t
--;

471 
	`i2ˇ1_ˇŒback_ma°î_£ndíd
();

478 if–
i2ˇ1_rx_˙t
 < 
i2ˇ1_rx_Àn
 )

480 *
i2ˇ1_rx_pbuf
 = 
IICA1
;

481 
i2ˇ1_rx_pbuf
++;

482 
i2ˇ1_rx_˙t
++;

484 if–
i2ˇ1_rx_˙t
 =
i2ˇ1_rx_Àn
 )

486 
ACKE1
 = 0U;

487 
WREL1
 = 1U;

488 
WTIM1
 = 1U;

492 
WREL1
 = 1U;

497 
	`i2ˇ1_ˇŒback_ma°î_ª˚ivìnd
();

502 
	}
}

509 
	$i2ˇ1_ˇŒback_ma°î_îr‹
–
MD_STATUS
 
Êag
 )

514 
	}
}

521 
	$i2ˇ1_ˇŒback_ma°î_ª˚ivìnd
( )

523 
SPT1
 = 1U;

527 
	}
}

534 
	$i2ˇ1_ˇŒback_ma°î_£ndíd
( )

536 
SPT1
 = 1U;

540 
	}
}

542 
__öãºu±
 
	$r_i2ˇ1_öãºu±
()

544 i‡((
IICS1
 & 
_80_IICA_STATUS_MASTER
) == 0x80U)

546 
	`i2ˇ1_ma°î_h™dÀr
();

548 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_i2c.h

2 #i‚de‡
__HAL_I2C_H__


3 
	#__HAL_I2C_H__


	)

6 
	~"r_cg_ma¸odrivî.h
"

7 
	~"¥j_ty≥.h
"

20 
MD_STATUS
 
i2ˇ0_ma°î_£nd
–
uöt8_t
 
_addr
, uöt8_à* 
_tx_buf
, 
uöt16_t
 
_tx_num
, uöt8_à
_waô
 );

27 
MD_STATUS
 
i2ˇ0_ma°î_ªcv
–
uöt8_t
 
_addr
, uöt8_à* 
_rx_buf
, 
uöt16_t
 
_rx_num
, uöt8_à
_waô
 );

35 
MD_STATUS
 
i2ˇ1_ma°î_£nd
–
uöt8_t
 
_addr
, uöt8_à* 
_tx_buf
, 
uöt16_t
 
_tx_num
, uöt8_à
_waô
 );

42 
MD_STATUS
 
i2ˇ1_ma°î_ªcv
–
uöt8_t
 
_addr
, uöt8_à* 
_rx_buf
, 
uöt16_t
 
_rx_num
, uöt8_à
_waô
 );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_key.c

1 
	~"hw.h
"

2 
	~"hÆ_key.h
"

5 
	#HAL_KEY_PUSHED
 
LOW


	)

6 
	#HAL_LEVER_PUSHED
 
LOW


	)

9 
	s_hÆ_key_


11 
U16
 
	mKey
;

12 
U8
 
	mW©îOut
;

13 
U8
 
	mI˚Out
;

14 } 
	tTKeyVÆ
;

16 
TKeyVÆ
 
	gHÆKey
;

19 
	$HAL_InôKey
()

21 
HÆKey
.
Key
 = 0;

22 
HÆKey
.
W©îOut
 = 0;

23 
HÆKey
.
I˚Out
 = 0;

24 
	}
}

26 
	$HAL_SëKeyVÆ
(
U16
 
mu16VÆ
)

28 
HÆKey
.
Key
 = 
mu16VÆ
;

29 
	}
}

36 
U16
 
	$HAL_GëKeyVÆ
()

38 
U16
 
mu16VÆ
 = 0;

41 if–
P_KEY_1
 =
HAL_KEY_PUSHED
 )

43 
mu16VÆ
 |
HAL_KEY_1
;

45 if–
P_KEY_2
 =
HAL_KEY_PUSHED
 )

47 
mu16VÆ
 |
HAL_KEY_2
;

50  
mu16VÆ
;

51 
	}
}

54 
	$HAL_SëLevîI˚
(
U8
 
mu8VÆ
)

56 
HÆKey
.
I˚Out
 = 
mu8VÆ
;

57 
	}
}

59 
U8
 
	$HAL_GëLevîI˚
()

61  
HÆKey
.
I˚Out
;

62 
	}
}

65 
	$HAL_SëLevîW©î
(
U8
 
mu8VÆ
)

67 
HÆKey
.
W©îOut
 = 
mu8VÆ
;

68 
	}
}

71 
U8
 
	$HAL_GëLevîW©î
()

73  
HÆKey
.
W©îOut
;

74 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_key.h

1 #i‚de‡
__HAL_KEY_H__


2 
	#__HAL_KEY_H__


	)

4 
	#HAL_KEY_NONE
 0x0000

	)

5 
	#HAL_KEY_1
 0x0001

6 
	#HAL_KEY_2
 0x0002

16 
	#HAL_KEY_ALL
 0x0007

	)

19 
HAL_InôKey
();

21 
HAL_SëKeyVÆ
(
U16
 
mu16VÆ
);

22 
U16
 
HAL_GëKeyVÆ
();

24 
HAL_SëLevîI˚
(
U8
 
mu8VÆ
);

25 
U8
 
HAL_GëLevîI˚
();

27 
HAL_SëLevîW©î
(
U8
 
mu8VÆ
);

28 
U8
 
HAL_GëLevîW©î
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_led.c

1 #¥agm®
öãºu±
 
INTTM01
 
r_èu0_ch™√l1_öãºu±


3 
	~"hw.h
"

4 
	~"hÆ_Àd.h
"

26 
U8
 
	ggu8Wd©aAºay
[ 
DISPLAY_DATA_RAM_LENGTH
 ];

28 
	$HAL_InôLed
()

30 
	`R_TAU0_Ch™√l1_Sèπ
();

31 
	}
}

33 
	$Tu∫OffAŒLED
()

35 
U8
 
i
;

37  
i
 = 0; i < 
DISPLAY_DATA_RAM_LENGTH
 ; i++ )

39 
	`HAL_SëByãDi•œyBuf„r
–
i
, 0 );

42 
	}
}

45 
	$Tu∫OnAŒLED
()

47 
U8
 
i
;

49  
i
 = 0; i < 
DISPLAY_DATA_RAM_LENGTH
 ; i++ )

51 
	`HAL_SëByãDi•œyBuf„r
–
i
, 0xFF );

53 
	}
}

55 
	$Comm⁄BôOnOff
–
U32
 
mu32VÆ
, 
U8
 
mu8OnOff
 )

57 if–
mu8OnOff
 )

59 
	`HAL_SëBôDi•œyBuf„r
–
mu32VÆ
, 
ON
 );

63 
	`HAL_SëBôDi•œyBuf„r
–
mu32VÆ
, 
OFF
 );

65 
	}
}

67 
	$HAL_SëBôDi•œyBuf„r
–
U32
 
mu32Led
, 
U8
 
mu8OnOff
 )

69 
U8
 
mu8Com
;

70 
U8
 
mu8Row
;

73 
mu8Com
 = (
U8
)((
mu32Led
 & 0x00FF0000) >> 16);

74 
mu8Row
 = (
U8
)(
mu32Led
 & 0x0000FFFF);

76 if–
mu8OnOff
 != 0 )

78 
gu8Wd©aAºay
[
mu8Com
] |
mu8Row
;

82 
gu8Wd©aAºay
[
mu8Com
] &~
mu8Row
;

84 
	}
}

86 
	$HAL_SëByãDi•œyBuf„r
–
U8
 
mu8Index
, U8 
mu8VÆ
 )

88 
gu8Wd©aAºay
[ 
mu8Index
 ] = 
mu8VÆ
;

89 
	}
}

93 
__öãºu±
 
	$r_èu0_ch™√l1_öãºu±
()

95 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_led.h

1 #i‚de‡
__HAL_LED_H__


2 
	#__HAL_LED_H__


	)

4 
	#DISPLAY_DATA_RAM_LENGTH
 16

	)

6 
	#HAL_LED_01
 0x00000001UL

7 
	#HAL_LED_02
 0x00000002UL

8 
	#HAL_LED_03
 0x00000004UL

9 
	#HAL_LED_04
 0x00000008UL

10 
	#HAL_LED_05
 0x00000010UL

	)

11 
	#HAL_LED_06
 0x00000020UL

	)

12 
	#HAL_LED_07
 0x00000040UL

	)

13 
	#HAL_LED_08
 0x00000080UL

	)

14 
	#HAL_LED_09
 0x00000100UL

	)

15 
	#HAL_LED_10
 0x00000200UL

	)

16 
	#HAL_LED_11
 0x00000400UL

	)

17 
	#HAL_LED_12
 0x00000800UL

	)

18 
	#HAL_LED_13
 0x00001000UL

	)

19 
	#HAL_LED_14
 0x00002000UL

	)

20 
	#HAL_LED_15
 0x00004000UL

	)

21 
	#HAL_LED_16
 0x00008000UL

	)

22 
	#HAL_LED_17
 0x00010000UL

	)

23 
	#HAL_LED_18
 0x00020000UL

	)

24 
	#HAL_LED_19
 0x00040000UL

	)

25 
	#HAL_LED_20
 0x00080000UL

	)

26 
	#HAL_LED_21
 0x00100000UL

	)

27 
	#HAL_LED_22
 0x00200000UL

	)

28 
	#HAL_LED_23
 0x00400000UL

	)

29 
	#HAL_LED_24
 0x00800000UL

	)

30 
	#HAL_LED_25
 0x01000000UL

	)

31 
	#HAL_LED_26
 0x02000000UL

	)

32 
	#HAL_LED_27
 0x04000000UL

	)

33 
	#HAL_LED_28
 0x08000000UL

	)

34 
	#HAL_LED_29
 0x10000000UL

	)

35 
	#HAL_LED_30
 0x20000000UL

	)

36 
	#HAL_LED_31
 0x40000000UL

	)

37 
	#HAL_LED_32
 0x80000000UL

	)

38 
	#HAL_LED_ALL
 0xFFFFFFFFUL

	)

40 
HAL_InôLed
();

55 
Tu∫OffAŒLED
();

70 
Tu∫OnAŒLED
();

87 
Comm⁄BôOnOff
–
U32
 
mu32VÆ
, 
U8
 
mu8OnOff
 );

105 
HAL_SëBôDi•œyBuf„r
–
U32
 
mu32Led
, 
U8
 
mu8OnOff
 );

123 
HAL_SëByãDi•œyBuf„r
–
U8
 
mu8Index
, U8 
mu8VÆ
 );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_level.c

1 
	~"hw.h
"

2 
	~"hÆ_Àvñ.h
"

4 
U8
 
	$HAL_GëLevñRoomT™k
()

6 
U8
 
mu8VÆ
 = 0;

9 if–
	`GET_ROOM_TANK_LOW
(Ë=
HIGH
 )

11 
mu8VÆ
 |
LEVEL_DETECT_LOW
;

14 if–
	`GET_ROOM_TANK_HIGH
(Ë=
HIGH
 )

16 
mu8VÆ
 |
LEVEL_DETECT_HIGH
;

19 if–
	`GET_ROOM_TANK_OVERFLOW
(Ë=
HIGH
 )

21 
mu8VÆ
 |
LEVEL_DETECT_OVF
;

24  
mu8VÆ
;

25 
	}
}

27 
U8
 
	$HAL_GëLevñHŸT™k
()

29 
U8
 
mu8VÆ
 = 0;

31 if–
	`GET_ROOM_TANK_HIGH
(Ë=
HIGH
 )

33 
mu8VÆ
 |
LEVEL_DETECT_HIGH
;

36 if–
	`GET_ROOM_TANK_LOW
(Ë=
HIGH
 )

38 
mu8VÆ
 |
LEVEL_DETECT_LOW
;

41  
mu8VÆ
;

43 
	}
}

46 
U8
 
	$HAL_GëLevñCﬁdT™k
()

48 
U8
 
mu8VÆ
 = 0;

51 if–
	`GET_ROOM_TANK_LOW
(Ë=
HIGH


52 || 
	`GET_ROOM_TANK_HIGH
(Ë=
HIGH


53 || 
	`GET_ROOM_TANK_OVERFLOW
(Ë=
HIGH
 )

55 
mu8VÆ
 |
LEVEL_DETECT_LOW
;

56 
mu8VÆ
 |
LEVEL_DETECT_HIGH
;

59  
mu8VÆ
;

60 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_level.h

1 #i‚de‡
__HAL_LEVEL_H__


2 
	#__HAL_LEVEL_H__


	)

6 
	#LEVEL_DETECT_NONE
 0x00

7 
	#LEVEL_DETECT_LOW
 0x01

8 
	#LEVEL_DETECT_HIGH
 0x02

9 
	#LEVEL_DETECT_OVF
 0x04

10 

	)

12 
	#HAL_LEVEL_LOW
 ( 
LEVEL_DETECT_NONE
 | LEVEL_DETECT_NONE )

	)

13 
	#HAL_LEVEL_MID
 ( 
LEVEL_DETECT_LOW
 | 
LEVEL_DETECT_NONE
 )

	)

14 
	#HAL_LEVEL_ERR_LOW
 ( 
LEVEL_DETECT_NONE
 | 
LEVEL_DETECT_HIGH
 )

	)

15 
	#HAL_LEVEL_HIGH
 ( 
LEVEL_DETECT_LOW
 | 
LEVEL_DETECT_HIGH
 )

	)

17 
	#HAL_LEVEL_ERR_COMPLEX
 ( 
LEVEL_DETECT_OVF
 | 
HAL_LEVEL_LOW
 )

	)

18 
	#HAL_LEVEL_ERR_HIGH
 ( 
LEVEL_DETECT_OVF
 | 
HAL_LEVEL_MID
 )

	)

19 
	#HAL_LEVEL_ERR_OVF_LOW
 ( 
LEVEL_DETECT_OVF
 | 
HAL_LEVEL_ERR_LOW
 )

	)

20 
	#HAL_LEVEL_OVF
 ( 
LEVEL_DETECT_OVF
 | 
HAL_LEVEL_HIGH
 )

	)

23 
U8
 
HAL_GëLevñRoomT™k
();

26 
U8
 
HAL_GëLevñHŸT™k
();

29 
U8
 
HAL_GëLevñCﬁdT™k
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_relay.c

1 
	~"hw.h
"

2 
	~"hÆ_ªœy.h
"

6 
	$HAL_Tu∫OnRñay
–
Rñay_T
 
ªœy
 )

8 if–
HAL_RELAY_COMP
 =
ªœy
 )

10 
	`TURN_ON_COMP
();

12 if–
HAL_RELAY_HEATER
 =
ªœy
 )

14 
	`TURN_ON_HEATER
();

36 
	}
}

38 
	$HAL_Tu∫OffRñay
–
Rñay_T
 
ªœy
)

40 if–
HAL_RELAY_COMP
 =
ªœy
 )

42 
	`TURN_OFF_COMP
();

44 if–
HAL_RELAY_HEATER
 =
ªœy
 )

46 
	`TURN_OFF_HEATER
();

68 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_relay.h

1 #i‚de‡
__HAL_RELAY_H__


2 
	#__HAL_RELAY_H__


	)

6 
	mHAL_RELAY_COMP
,

7 
	mHAL_RELAY_HEATER
,

16 
	mMAX_HAL_RELAY_NUM


17 } 
	tRñay_T
;

20 
HAL_Tu∫OnRñay
–
Rñay_T
 
ªœy
);

21 
HAL_Tu∫OffRñay
–
Rñay_T
 
ªœy
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_serial.c

2 
	#CONFIG_UART_1
 1

	)

13 #i‡
CONFIG_UART_1


14 #¥agm®
öãºu±
 
INTST1
 
r_u¨t1_öãºu±_£nd


15 #¥agm®
öãºu±
 
INTSR1
 
r_u¨t1_öãºu±_ª˚ive


31 
	~"hw.h
"

32 
	~"hÆ_£rül.h
"

33 
	~<°rög.h
>

34 
	~"timî.h
"

42 #i‡
CONFIG_UART_1


43 
	#EOL_TXD
 
TXD1


	)

44 
	#EOL_RXD
 
RXD1


	)

58 
	#UART0_RX_TIME_STAMP
 5

	)

59 
	#UART1_RX_TIME_STAMP
 10

	)

60 
	#UART2_RX_TIME_STAMP
 10

	)

61 
	#UART3_RX_TIME_STAMP
 10

	)

64 
	s_comm_


66 
U8
 
	mªcv_buf
[ 
MAX_COMM_RX_BUF_SZ
 ];

67 
I16
 
	mªcv_Àn
;

68 
U8
 
	m£nd_buf
[ 
MAX_COMM_TX_BUF_SZ
 ];

69 
I16
 
	m£nd_Àn
;

70 
I16
 
	mtx_Àn
;

71 } 
	tcomm_t
;

73 
comm_t
 
	gcomm
[ 
MAX_COMM_ID
 ];

77 
	$HAL_InôCommId
–
U8
 
u¨t_id
 )

79 
	`mem£t
–&
comm
[ 
u¨t_id
 ], 0, –
comm_t
 ) );

80 
	}
}

82 
	$HAL_InôComm
( )

84 #i‡
CONFIG_UART_0


85 
	`HAL_InôCommId
–
COMM_ID_FRONT
 );

86 
	`R_UART0_Sèπ
();

89 #i‡
CONFIG_UART_1


90 
	`HAL_InôCommId
–
COMM_ID_EOL
 );

91 
	`R_UART1_Sèπ
();

94 #i‡
CONFIG_UART_2


95 
	`HAL_InôCommId
–
COMM_ID_EOL
 );

96 
	`R_UART2_Sèπ
();

99 #i‡
CONFIG_UART_3


100 
	`HAL_InôCommId
–
COMM_ID_LCD
 );

101 
	`R_UART3_Sèπ
();

104 
	}
}

107 
U8
 
	$HAL_IsFuŒRecvBuf„r
–
U8
 
u¨t_id
 )

109 if–
comm
[ 
u¨t_id
 ].
ªcv_Àn
 >
MAX_COMM_RX_BUF_SZ
 )

111  
TRUE
;

114  
FALSE
;

115 
	}
}

117 
U8
 
	$HAL_IsEm±yRecvBuf„r
–
U8
 
u¨t_id
 )

119 if–
comm
[ 
u¨t_id
 ].
ªcv_Àn
 > 0 )

121  
FALSE
;

124  
TRUE
;

126 
	}
}

128 
U8
 
	$HAL_IsFuŒSídBuf„r
–
U8
 
u¨t_id
 )

130 if–
comm
[ 
u¨t_id
 ].
£nd_Àn
 >
MAX_COMM_TX_BUF_SZ
 )

132  
TRUE
;

135  
FALSE
;

136 
	}
}

138 
	$HAL_InôRecvLígth
(
U8
 
u¨t_id
 )

140 
comm
[ 
u¨t_id
 ].
ªcv_Àn
 = 0;

141 
	}
}

143 
I16
 
	$HAL_GëRecvLígth
–
U8
 
u¨t_id
 )

145  
comm
[ 
u¨t_id
 ].
ªcv_Àn
;

146 
	}
}

148 
I16
 
	$HAL_GëSídLígth
–
U8
 
u¨t_id
 )

150  
comm
[ 
u¨t_id
].
£nd_Àn
;

151 
	}
}

154 
	$HAL_SëRecvBuf„r
(
U8
 
u¨t_id
, U8 
_byã
 )

156 
comm_t
 *
p_comm
;

158 
p_comm
 = &
comm
[ 
u¨t_id
 ];

159 
p_comm
->
ªcv_buf
[Ö_comm->
ªcv_Àn
 ] = 
_byã
;

160 
p_comm
->
ªcv_Àn
++;

162 
	}
}

164 
U8
 
	$HAL_GëRecvBuf„r
–
U8
 
u¨t_id
, 
U16
 
ödex
 )

166  
comm
[ 
u¨t_id
 ].
ªcv_buf
[ 
ödex
 ];

167 
	}
}

170 
	$HAL_SëSídBuf„r
–
U8
 
u¨t_id
, U8 
_byã
 )

172 
comm_t
 *
p_comm
;

174 if–
	`HAL_IsFuŒSídBuf„r
–
u¨t_id
 ) =
FALSE
 )

176 
p_comm
 = &
comm
[ 
u¨t_id
 ];

177 
p_comm
->
£nd_buf
[Ö_comm->
£nd_Àn
 ] = 
_byã
;

178 
p_comm
->
£nd_Àn
++;

180 
	}
}

182 
U8
 
	$HAL_GëSídBuf„r
–
U8
 
u¨t_id
, 
U16
 
ödex
 )

184  
comm
[ 
u¨t_id
 ].
£nd_buf
[ 
ödex
 ];

185 
	}
}

188 
	$HAL_SídByã
–
U8
 
u¨t_id
 )

190 
U8
 
ch
;

191 
comm_t
 *
p_comm
;

194 
p_comm
 = &
comm
[ 
u¨t_id
 ];

195 
ch
 = 
p_comm
->
£nd_buf
[Ö_comm->
tx_Àn
 ];

196 
p_comm
->
tx_Àn
++;

198 if–
u¨t_id
 =
COMM_ID_EOL
 )

200 
EOL_TXD
 = 
ch
;

204 if–
u¨t_id
 =
COMM_ID_FRONT
 )

206 #i‡
CONFIG_UART_0


207 
FRONT_TXD
 = 
ch
;

210 if–
u¨t_id
 =
COMM_ID_EOL
 )

212 #i‡
CONFIG_UART_1


213 
EOL_TXD
 = 
ch
;

216 if–
u¨t_id
 =
COMM_ID_EOL
 )

218 #i‡
CONFIG_UART_2


219 
EOL_TXD
 = 
ch
;

222 if–
u¨t_id
 =
COMM_ID_LCD
 )

224 #i‡
CONFIG_UART_3


225 
LCD_TXD
 = 
ch
;

229 
	}
}

231 
U8
 
	$IsCom∂ëeTx
–
U8
 
u¨t_id
 )

233 if–
comm
[
u¨t_id
].
tx_Àn
 < comm[ u¨t_id ].
£nd_Àn
 )

235  
FALSE
;

238  
TRUE
;

240 
	}
}

245 #i‡
CONFIG_UART_0


246 
__öãºu±
 
	$r_u¨t0_öãºu±_ª˚ive
()

248 vﬁ©ûê
U8
 
îr_ty≥
;

249 vﬁ©ûê
U8
 
rx_d©a
;

251 
	`SèπTimî
–
TIMER_ID_COMM_FRONT_RX
, 
UART0_RX_TIME_STAMP
 );

253 
îr_ty≥
 = (
uöt8_t
)(
SSR01
 & 0x0007U);

254 
SIR01
 = (
uöt16_t
)
îr_ty≥
;

256 
rx_d©a
 = 
FRONT_RXD
;

258 if–
îr_ty≥
 == 0 )

260 if–
	`HAL_IsFuŒRecvBuf„r
–
COMM_ID_FRONT
 ) =
FALSE
 )

262 
	`HAL_SëRecvBuf„r
–
COMM_ID_FRONT
, 
rx_d©a
 );

266 
	`HAL_InôCommId
–
COMM_ID_FRONT
 );

269 
	}
}

271 
__öãºu±
 
	$r_u¨t0_öãºu±_£nd
()

273 if–
	`IsCom∂ëeTx
–
COMM_ID_FRONT
 ) =
FALSE
 )

275 
	`HAL_SídByã
–
COMM_ID_FRONT
 );

279 
	`HAL_InôCommId
–
COMM_ID_FRONT
 );

281 
	}
}

285 #i‡
CONFIG_UART_1


286 
__öãºu±
 
	$r_u¨t1_öãºu±_ª˚ive
()

288 vﬁ©ûê
U8
 
rx_d©a
;

289 vﬁ©ûê
U8
 
îr_ty≥
;

291 
îr_ty≥
 = (
U8
)(
SSR03
 & 0x0007U);

292 
SIR03
 = (
U16
)
îr_ty≥
;

294 
rx_d©a
 = 
EOL_RXD
;

296 if–
îr_ty≥
 == 0 )

298 if–
	`HAL_IsFuŒRecvBuf„r
–
COMM_ID_EOL
 ) =
FALSE
 )

300 
	`HAL_SëRecvBuf„r
–
COMM_ID_EOL
, 
rx_d©a
 );

304 
	`HAL_InôCommId
–
COMM_ID_EOL
 );

308 
	`SèπTimî
–
TIMER_ID_COMM_EOL_RX
, 
UART1_RX_TIME_STAMP
 );

309 
	}
}

311 
__öãºu±
 
	$r_u¨t1_öãºu±_£nd
()

313 if–
	`IsCom∂ëeTx
–
COMM_ID_EOL
 ) =
FALSE
 )

315 
	`HAL_SídByã
–
COMM_ID_EOL
 );

319 
	`HAL_InôCommId
–
COMM_ID_EOL
 );

321 
	}
}

325 #i‡
CONFIG_UART_2


326 
U16
 
	gthe_rx_îr_cou¡
 = 0;

327 
__öãºu±
 
	$r_u¨t2_öãºu±_ª˚ive
()

329 vﬁ©ûê
U8
 
îr_ty≥
;

330 vﬁ©ûê
U8
 
rx_d©a
;

332 
îr_ty≥
 = (
uöt8_t
)(
SSR11
 & 0x0007U);

333 
SIR11
 = (
uöt16_t
)
îr_ty≥
;

335 
rx_d©a
 = 
EOL_RXD
;

337 if–
îr_ty≥
 == 0 )

339 if–
	`HAL_IsFuŒRecvBuf„r
–
COMM_ID_EOL
 ) =
FALSE
 )

341 
	`HAL_SëRecvBuf„r
–
COMM_ID_EOL
, 
rx_d©a
 );

345 
	`HAL_InôCommId
–
COMM_ID_EOL
 );

348 
	`SèπTimî
–
TIMER_ID_COMM_EOL_RX
, 
UART2_RX_TIME_STAMP
 );

352 
the_rx_îr_cou¡
++;

354 
	}
}

356 
__öãºu±
 
	$r_u¨t2_öãºu±_£nd
()

358 if–
	`IsCom∂ëeTx
–
COMM_ID_EOL
 ) =
FALSE
 )

360 
	`HAL_SídByã
–
COMM_ID_EOL
 );

364 
	`HAL_InôCommId
–
COMM_ID_EOL
 );

366 
	}
}

371 #i‡
CONFIG_UART_3


372 
U16
 
	gthe_i§_îr_cou¡
 = 0;

373 
__öãºu±
 
	$r_u¨t3_öãºu±_ª˚ive
()

375 vﬁ©ûê
U8
 
îr_ty≥
;

376 vﬁ©ûê
U8
 
rx_d©a
;

378 
îr_ty≥
 = (
uöt8_t
)(
SSR13
 & 0x0007U);

379 
SIR13
 = (
uöt16_t
)
îr_ty≥
;

381 
rx_d©a
 = 
LCD_RXD
;

383 if–
îr_ty≥
 == 0 )

385 if–
	`HAL_IsFuŒRecvBuf„r
–
COMM_ID_LCD
 ) =
FALSE
 )

387 
	`HAL_SëRecvBuf„r
–
COMM_ID_LCD
, 
rx_d©a
 );

391 
	`HAL_InôCommId
–
COMM_ID_LCD
 );

394 
	`SèπTimî
–
TIMER_ID_COMM_LCD_RX
, 
UART3_RX_TIME_STAMP
 );

398 
the_i§_îr_cou¡
++;

400 
	}
}

403 
__öãºu±
 
	$r_u¨t3_öãºu±_£nd
()

405 if–
	`IsCom∂ëeTx
–
COMM_ID_LCD
 ) =
FALSE
 )

407 
	`HAL_SídByã
–
COMM_ID_LCD
 );

411 
	`HAL_InôCommId
–
COMM_ID_LCD
 );

413 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_serial.h

1 #i‚de‡
__HAL_SERIAL_H__


2 
	#__HAL_SERIAL_H__


	)

4 
	~"¥j_ty≥.h
"

9 
	#COMM_ID_EOL
 0

	)

11 
	#MAX_COMM_ID
 1

	)

13 
	#MAX_COMM_RX_BUF_SZ
 256

	)

14 
	#MAX_COMM_TX_BUF_SZ
 512

	)

16 
HAL_InôCommId
–
U8
 
u¨t_id
 );

17 
HAL_InôComm
( );

19 
U8
 
HAL_IsFuŒRecvBuf„r
–U8 
u¨t_id
 );

20 
U8
 
HAL_IsEm±yRecvBuf„r
–U8 
u¨t_id
 );

21 
U8
 
HAL_IsFuŒSídBuf„r
–U8 
u¨t_id
 );

23 
HAL_InôRecvLígth
(
U8
 
u¨t_id
 );

24 
I16
 
HAL_GëRecvLígth
–
U8
 
u¨t_id
 );

25 
I16
 
HAL_GëSídLígth
–
U8
 
u¨t_id
 );

27 
HAL_SëRecvBuf„r
(
U8
 
u¨t_id
, U8 
_byã
 );

28 
U8
 
HAL_GëRecvBuf„r
–U8 
u¨t_id
, 
U16
 
ödex
 );

30 
HAL_SëSídBuf„r
–
U8
 
u¨t_id
, U8 
_byã
 );

31 
U8
 
HAL_GëSídBuf„r
–U8 
u¨t_id
, 
U16
 
ödex
 );

33 
HAL_SídByã
–
U8
 
u¨t_id
 );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_valve.c

1 
	~"hw.h
"

2 
	~"hÆ_vÆve.h
"

5 
	$HAL_O≥nVÆve
(
VÆve_T
 
vÆve
 )

7 if–
HAL_VALVE_NOS
 =
vÆve
 )

9 
	`OPEN_VALVE_NOS
();

11 if–
HAL_VALVE_FEED
 =
vÆve
 )

13 
	`OPEN_VALVE_FEED
();

15 i‡–
HAL_VALVE_FLUSHING
 =
vÆve
 )

17 
	`OPEN_VALVE_FLUSHING
();

19 
	}
}

23 
	$HAL_Clo£VÆve
(
VÆve_T
 
vÆve
)

25 if–
HAL_VALVE_NOS
 =
vÆve
 )

27 
	`CLOSE_VALVE_NOS
();

29 if–
HAL_VALVE_FEED
 =
vÆve
 )

31 
	`CLOSE_VALVE_FEED
();

33 i‡–
HAL_VALVE_FLUSHING
 =
vÆve
 )

35 
	`CLOSE_VALVE_FLUSHING
();

37 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_valve.h

1 #i‚de‡
__HAL_VALVE_H__


2 
	#__HAL_VALVE_H__


	)

4 
	~"¥j_ty≥.h
"

8 
	mHAL_VALVE_NOS
,

9 
	mHAL_VALVE_FEED
,

10 
	mHAL_VALVE_FLUSHING
,

12 
	mMAX_HAL_VALVE_NUM


13 } 
	tVÆve_T
;

15 
HAL_O≥nVÆve
–
VÆve_T
 
vÆve
);

16 
HAL_Clo£VÆve
–
VÆve_T
 
vÆve
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hw.h

1 #i‚de‡
__HW__H__


2 
	#__HW__H__


	)

4 
	~"mcu.h
"

5 
	~"r_cg_cgc.h
"

6 
	~"r_cg_p‹t.h
"

7 
	~"r_cg_wdt.h
"

8 
	~"r_cg_timî.h
"

9 
	~"r_cg_adc.h
"

10 
	~"r_cg_£rül.h
"

11 
	~"r_cg_ma¸odrivî.h
"

15 
	#RESET_WDT
(Ë
	`R_WDT_Re°¨t
()

	)

18 
	#P_KEY_1
 
P7
.2

19 
	#P_KEY_2
 
P7
.3

20 

	)

22 
	#SCAN_2
 
P7
.0

	)

23 
	#SCAN_1
 
P7
.1

	)

25 
	#INIT_LED_SCAN
() \

27 
SCAN_1
 = 1; \

28 
SCAN_2
 = 1; \

29 }0)

	)

31 
	#SELECT_2
 
P1
.7

	)

32 
	#SELECT_1
 
P5
.1

	)

34 
	#INIT_LED_SELECT
() \

36 
SELECT_1
 = 0; \

37 
SELECT_2
 = 0; \

38 }0)

	)

43 
	#P_COMP_ONOFF
 
P1
.2

	)

44 
	#TURN_ON_COMP
(Ëdo{ 
P_COMP_ONOFF
 = 1; }0)

	)

45 
	#TURN_OFF_COMP
(Ëdo{ 
P_COMP_ONOFF
 = 0; }0)

	)

46 
	#GET_STATUS_COMP
(Ë–
P_COMP_ONOFF
 )

	)

49 
	#P_HEATER
 
P1
.3

	)

50 
	#TURN_ON_HEATER
(Ëdo{ 
P_HEATER
 = 1; }0)

	)

51 
	#TURN_OFF_HEATER
(Ëdo{ 
P_HEATER
 = 0; }0)

	)

52 
	#GET_STATUS_HEATER
(Ë–
P_HEATER
 )

	)

56 
	#P_VALVE_NOS
 
P14
.6

	)

57 
	#OPEN_VALVE_NOS
(Ëdo{ 
P_VALVE_NOS
 = 0; }0)

	)

58 
	#CLOSE_VALVE_NOS
(Ëdo{ 
P_VALVE_NOS
 = 1; }0)

	)

59 
	#GET_STATUS_VALVE_NOS
(Ë–
P_VALVE_NOS
 )

	)

62 
	#P_VALVE_FEED
 
P14
.7

	)

63 
	#OPEN_VALVE_FEED
(Ëdo{ 
P_VALVE_FEED
 = 1; }0)

	)

64 
	#CLOSE_VALVE_FEED
(Ëdo{ 
P_VALVE_FEED
 = 0; }0)

	)

65 
	#GET_STATUS_VALVE_FEED
(Ë–
P_VALVE_FEED
 )

	)

68 
	#P_VALVE_AIR
 
P1
.1

	)

69 
	#OPEN_VALVE_AIR
(Ëdo{ 
P_VALVE_AIR
 = 1; }0)

	)

70 
	#CLOSE_VALVE_AIR
(Ëdo{ 
P_VALVE_AIR
 = 0; }0)

	)

71 
	#GET_STATUS_VALVE_AIR
(Ë–
P_VALVE_AIR
 )

	)

75 
	#P_VALVE_UNUSED
 
P1
.0

	)

76 
	#OPEN_VALVE_UNUSED
(Ëdo{ 
P_VALVE_UNUSED
 = 1; }0)

	)

77 
	#CLOSE_VALVE_UNUSED
(Ëdo{ 
P_VALVE_UNUSED
 = 0; }0)

	)

78 
	#GET_STATUS_VALVE_UNUSED
(Ë–
P_VALVE_UNUSED
 )

	)

91 
	#P_LEVEL_HOT_TANK_DIRECTION_1
 
P1
.5

	)

92 
	#TURN_ON_LEVEL_HOT_TANK_DIRECTION_1
(Ëdo{ 
P_LEVEL_HOT_TANK_DIRECTION_1
 = 1; }0)

	)

93 
	#TURN_OFF_LEVEL_HOT_TANK_DIRECTION_1
(Ëdo{ 
P_LEVEL_HOT_TANK_DIRECTION_1
 = 0; }0)

	)

94 
	#GET_STATUS_LEVEL_HOT_TANK_DIRECTION_1
(Ë–
P_LEVEL_HOT_TANK_DIRECTION_1
 )

	)

96 
	#P_LEVEL_HOT_TANK_DIRECTION_2
 
P1
.4

	)

97 
	#TURN_ON_LEVEL_HOT_TANK_DIRECTION_2
(Ëdo{ 
P_LEVEL_HOT_TANK_DIRECTION_2
 = 1; }0)

	)

98 
	#TURN_OFF_LEVEL_HOT_TANK_DIRECTION_2
(Ëdo{ 
P_LEVEL_HOT_TANK_DIRECTION_2
 = 0; }0)

	)

99 
	#GET_STATUS_LEVEL_HOT_TANK_DIRECTION_2
(Ë–
P_LEVEL_HOT_TANK_DIRECTION_2
 )

	)

102 
	#P_ROOM_TANK_LOW
 
P7
.4

	)

103 
	#GET_ROOM_TANK_LOW
(Ë–
P_ROOM_TANK_LOW
 )

	)

104 
	#GET_REVERSE_ROOM_TANK_LOW
(Ë–!
P_ROOM_TANK_LOW
 )

	)

107 
	#P_ROOM_TANK_HIGH
 
P7
.5

	)

108 
	#GET_ROOM_TANK_HIGH
(Ë–
P_ROOM_TANK_HIGH
 )

	)

109 
	#GET_REVERSE_ROOM_TANK_HIGH
(Ë–!
P_ROOM_TANK_HIGH
 )

	)

113 
	#P_COLD_TANK_HIGH
 
P3
.1

	)

114 
	#GET_COLD_TANK_HIGH
(Ë–
P_COLD_TANK_HIGH
 )

	)

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\mcu.h

1 #i‚de‡
__MCU_H__


2 
	#__MCU_H__


	)

4 
	~"r_cg_ma¸odrivî.h
"

6 
	~"¥j_ty≥.h
"

8 
	~"c⁄fig.h
"

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\comp.c

1 
	~"comp.h
"

2 
	~"ªœy.h
"

3 
	~"Temp.h
"

5 
	~<°rög.h
>

8 
	#CONFIG_PROTECT_ON_TIME
 1

9 

	)

11 
	#PROTECT_OFF_TIME
 300UL

12 

	)

13 
	#PROTECT_ON_COLD_TEMP
 5.0f

14 
	#PROTECT_FIRST_ON_TIME
 7800UL

15 
	#PROTECT_SECOND_ON_TIME
 9000UL

16 

	)

18 
	#MAX_TIME
 60000UL

19 

	)

21 
Com¥ess‹_T
 
	gComp
;

24 
	$InôComp
()

26 
Comp
.
Mode
 = 
COMP_MODE_NONE
;

27 
Comp
.
Cﬁd_OnOff
 = 
OFF
;

28 
Comp
.
I˚_OnOff
 = 
OFF
;

29 
Comp
.
F‹˚dOnOff
 = 
OFF
;

31 
Comp
.
PrŸe˘OffTime
 = 
PROTECT_OFF_TIME
;

33 
Comp
.
OnTime
 = 0;

34 
Comp
.
OffTime
 = 0;

35 
	}
}

37 
	$GëCompD©a
–
Com¥ess‹_T
 *
pD©a
 )

39 
	`mem˝y
–
pD©a
, &
Comp
, –
Com¥ess‹_T
 ));

40 
	}
}

42 
	$SëCompMode
(
U8
 
mu8Mode
)

44 
Comp
.
Mode
 = 
mu8Mode
;

45 
	}
}

47 
U8
 
	$GëCompMode
(
U8
 
mu8Mode
)

49  
Comp
.
Mode
;

50 
	}
}

52 
	$SëCompPrŸe˘OffTime
(
U16
 
mu16VÆ
)

54 
Comp
.
PrŸe˘OffTime
 = 
mu16VÆ
;

55 
	}
}

57 
U16
 
	$GëCompPrŸe˘OffTime
()

59  
Comp
.
PrŸe˘OffTime
;

60 
	}
}

62 
U8
 
	$IsOvîCompPrŸe˘OnTime
()

64 #i‡
CONFIG_PROTECT_ON_TIME


65 
TEMP_T
 
mCﬁdTemp
;

67 
mCﬁdTemp
 = 
	`GëTemp
–
TEMP_ID_COLD_WATER
 );

69 if–
Comp
.
OnTime
 > 
PROTECT_FIRST_ON_TIME


70 && 
mCﬁdTemp
 < 
PROTECT_ON_COLD_TEMP
 )

72  
TRUE
;

76  
FALSE
;

77 
	}
}

79 
U8
 
	$IsOvîCompPrŸe˘Sec⁄dOnTime
()

81 #i‡
CONFIG_PROTECT_ON_TIME


82 if–
Comp
.
OnTime
 > 
PROTECT_SECOND_ON_TIME
 )

84  
TRUE
;

88  
FALSE
;

89 
	}
}

91 
	$Tu∫OnComp
(
U8
 
mu8Ty≥
)

93 if–
mu8Ty≥
 =
COMP_TYPE_COLD
 )

95 
Comp
.
Cﬁd_OnOff
 = 
ON
;

99 
Comp
.
I˚_OnOff
 = 
ON
;

101 
	}
}

103 
	$Tu∫OffComp
(
U8
 
mu8Ty≥
)

105 if–
mu8Ty≥
 =
COMP_TYPE_COLD
 )

107 
Comp
.
Cﬁd_OnOff
 = 
OFF
;

111 
Comp
.
I˚_OnOff
 = 
OFF
;

113 
	}
}

115 
U8
 
	$GëCompOnOffTy≥
(
U8
 
mu8Ty≥
)

117 if–
mu8Ty≥
 =
COMP_TYPE_COLD
 )

119  
Comp
.
Cﬁd_OnOff
;

122  
Comp
.
I˚_OnOff
;

123 
	}
}

125 
	$Tu∫OnF‹˚dComp
()

127 
Comp
.
F‹˚dOnOff
 = 
ON
;

128 
	}
}

130 
	$Tu∫OffF‹˚dComp
()

132 
Comp
.
F‹˚dOnOff
 = 
OFF
;

133 
	}
}

136 
U8
 
	$GëCompOnOff
()

138 if–
	`IsTu∫OnRñay
–
RELAY_COMP
 ) =
TRUE
 )

140  
ON
;

143  
OFF
;

144 
	}
}

147 
U8
 
	$IsExpúedCompPrŸe˘Time
()

149 if–
	`IsTu∫OnRñay
–
RELAY_COMP
 ) =
FALSE


150 && 
Comp
.
PrŸe˘OffTime
 != 0 )

152  
FALSE
;

155  
TRUE
;

156 
	}
}

158 
	$Upd©eCompTimî
()

162 if–
	`IsTu∫OnRñay
–
RELAY_COMP
 ) =
FALSE
 )

164 if–
Comp
.
PrŸe˘OffTime
 != 0 )

166 
Comp
.
PrŸe˘OffTime
--;

171 
Comp
.
PrŸe˘OffTime
 = 
PROTECT_OFF_TIME
;

173 
	}
}

175 
	$C⁄åﬁComp
()

177 
U8
 
mu8OnOff
 = 
OFF
;

181 if–
Comp
.
Cﬁd_OnOff
 =
ON
 )

183 
mu8OnOff
 = 
ON
;

186 if–
Comp
.
I˚_OnOff
 =
ON
 )

188 
mu8OnOff
 = 
ON
;

193 if–
	`IsExpúedCompPrŸe˘Time
(Ë=
FALSE
 )

195 
mu8OnOff
 = 
OFF
;

199 if–
Comp
.
Mode
 =
COMP_MODE_FORCED
 )

201 
mu8OnOff
 = 
Comp
.
F‹˚dOnOff
;

206 if–
mu8OnOff
 =
ON
 )

209 
	`Tu∫OnRñay
–
RELAY_COMP
 );

212 
Comp
.
OffTime
 = 0;

213 if–
Comp
.
OnTime
 < 
MAX_TIME
 )

215 
Comp
.
OnTime
++;

219 
Comp
.
PrŸe˘OffTime
 = 
PROTECT_OFF_TIME
;

225 if–
	`IsTu∫OnRñay
–
RELAY_COMP
 ) =
TRUE
 )

227 
Comp
.
PrŸe˘OffTime
 = 
PROTECT_OFF_TIME
;

231 
	`Tu∫OffRñay
–
RELAY_COMP
 );

234 
Comp
.
OnTime
 = 0;

235 if–
Comp
.
OffTime
 < 
MAX_TIME
 )

237 
Comp
.
OffTime
++;

240 
	}
}

242 
	$Pro˚ssComp
()

244 
	`C⁄åﬁComp
();

245 
	`Upd©eCompTimî
();

246 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\comp.h

1 #i‚de‡
__COMP_H__


2 
	#__COMP_H__


	)

4 
	~"¥j_ty≥.h
"

6 
	s_com¥ess‹_


9 
U8
 
	mMode
;

10 
U8
 
	mCﬁd_OnOff
;

11 
U8
 
	mI˚_OnOff
;

12 
U8
 
	mF‹˚dOnOff
;

14 
U16
 
	mPrŸe˘OffTime
;

16 
U32
 
	mOnTime
;

17 
U32
 
	mOffTime
;

18 } 
	tCom¥ess‹_T
;

20 
InôComp
();

22 
GëCompD©a
–
Com¥ess‹_T
 *
pD©a
 );

24 
	#COMP_MODE_NONE
 0

	)

25 
	#COMP_MODE_FORCED
 1

	)

26 
SëCompMode
(
U8
 
mu8Mode
);

27 
U8
 
GëCompMode
(U8 
mu8Mode
);

29 
SëCompPrŸe˘OffTime
(
U16
 
mu16VÆ
);

30 
U16
 
GëCompPrŸe˘OffTime
();

31 
U8
 
IsOvîCompPrŸe˘OnTime
();

32 
U8
 
IsOvîCompPrŸe˘Sec⁄dOnTime
();

35 
	#COMP_TYPE_COLD
 0

	)

36 
	#COMP_TYPE_ICE
 1

	)

37 
Tu∫OnComp
(
U8
 
mu8Ty≥
);

38 
Tu∫OffComp
(
U8
 
mu8Ty≥
);

39 
U8
 
GëCompOnOffTy≥
(U8 
mu8Ty≥
);

41 
Tu∫OnF‹˚dComp
();

42 
Tu∫OffF‹˚dComp
();

46 
U8
 
GëCompOnOff
();

48 
U8
 
IsExpúedCompPrŸe˘Time
();

49 
Pro˚ssComp
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\feed_pump.c

1 
	~"hw.h
"

2 
	~"„ed_pump.h
"

3 
	~"pump.h
"

4 
	~"vÆve.h
"

5 
	~"auto_Êushög.h
"

6 
	~"¥o˚ss_di•œy.h
"

12 
	mSTEP_OPEN_VALVE
,

13 
	mSTEP_OPEN_VALVE_WAIT
,

14 
	mSTEP_ON_PUMP


20 
	mSTEP_OFF_PUMP
,

21 
	mSTEP_OFF_PUMP_WAIT
,

22 
	mSTEP_CLOSE_VALVE


25 
	#PUMP_DIS_CON
 1

26 
	#PUMP_CON
 0

27 
	#DEFAULT_SAMPLE_COUNT
 100U

28 

	)

29 
	#PUMP_ON_WAIT_TIME
 100U

30 
	#PUMP_OFF_WAIT_TIME
 100U

31 

	)

33 
FìdPump_T
 
	gFìdPump
;

36 
	$InôFìdPump
()

38 
FìdPump
.
C⁄n
 = 
OFF
;

39 
FìdPump
.
OnOff
 = 
OFF
;

40 
FìdPump
.
VÆve
 = 
VALVE_NOS
;

42 
FìdPump
.
OnSãp
 = 0;

43 
FìdPump
.
OffSãp
 = 0;

45 
	`InôPump
();

46 
	}
}

48 
	$GëFìdPumpD©a
(
FìdPump_T
 *
pD©a
)

50 
	`mem˝y
–
pD©a
, &
FìdPump
, –
FìdPump_T
 ));

51 
	}
}

53 
	$Clo£VÆvePump
(
U16
 
mu16VÆve
)

55 
FìdPump
.
VÆve
 &~
mu16VÆve
;

56 
	}
}

58 
	$O≥nVÆvePump
(
U16
 
mu16VÆve
)

60 
FìdPump
.
VÆve
 |
mu16VÆve
;

61 
	}
}

63 
U8
 
	$IsO≥nVÆvePump
(
U16
 
mu16VÆve
 )

65 if–(
FìdPump
.
VÆve
 & 
mu16VÆve
 ) == mu16Valve )

67  
TRUE
;

70  
FALSE
;

71 
	}
}

74 
	$CheckC⁄√˘edPump
()

76 
U16
 
mu16Sam∂eCou¡
 = 
DEFAULT_SAMPLE_COUNT
;

77 
U8
 
mu8PªvVÆ
 = 
PUMP_DIS_CON
;

78 
U8
 
mu8CurVÆ
;

82 
mu8CurVÆ
 = 
PUMP_CON
;

83 if–
mu8PªvVÆ
 !
mu8CurVÆ
 )

85 
mu8PªvVÆ
 = 
mu8CurVÆ
;

86 
mu16Sam∂eCou¡
 = 
DEFAULT_SAMPLE_COUNT
;

91 if–
mu16Sam∂eCou¡
 != 0 )

93 
mu16Sam∂eCou¡
--;

97 if–
mu8CurVÆ
 =
PUMP_CON
 )

99 
FìdPump
.
C⁄n
 = 
ON
;

103 
FìdPump
.
C⁄n
 = 
OFF
;

106 
	}
}

109 
	$CheckPumpOnOff
()

111 if–
FìdPump
.
C⁄n
 =
OFF
 )

113 
FìdPump
.
OnOff
 = 
OFF
;

118 if–
	`IsO≥nVÆvePump
–
VALVE_NOS
 ) =
FALSE


119 || 
	`IsO≥nVÆvePump
–
VALVE_FEED
 ) =
FALSE
 )

121 
FìdPump
.
OnOff
 = 
OFF
;

125 
FìdPump
.
OnOff
 = 
ON
;

126 
	}
}

128 
	$Re£tFìd
()

130 
FìdPump
.
OnSãp
 = 0;

131 
FìdPump
.
OffSãp
 = 0;

132 
	}
}

134 
	$C⁄åﬁVÆve
()

136 if–
	`IsO≥nVÆvePump
–
VALVE_NOS
 ) =
TRUE
 )

138 
	`O≥nVÆve
–
VALVE_NOS
 );

142 
	`Clo£VÆve
–
VALVE_NOS
 );

145 if–
	`IsO≥nVÆvePump
–
VALVE_FEED
 ) =
TRUE
 )

147 
	`O≥nVÆve
–
VALVE_FEED
 );

151 
	`Clo£VÆve
–
VALVE_FEED
 );

153 
	}
}

155 
	$Tu∫OnFìd
()

157 
mu16WaôTime
 = 0;

159  
FìdPump
.
OnSãp
 )

161 
STEP_OPEN_VALVE
:

162 
	`C⁄åﬁVÆve
();

164 
mu16WaôTime
 = 
PUMP_ON_WAIT_TIME
;

165 
FìdPump
.
OnSãp
++;

168 
STEP_OPEN_VALVE_WAIT
:

169 if–
mu16WaôTime
 != 0 )

171 
mu16WaôTime
--;

175 
FìdPump
.
OnSãp
++;

179 
STEP_ON_PUMP
:

180 
	`Tu∫OnPump
();

183 
	}
}

185 
	$Tu∫OffFìd
()

187 
mu16WaôTime
 = 0;

190  
FìdPump
.
OffSãp
 )

192 
STEP_OFF_PUMP
:

193 
	`Tu∫OffPump
();

194 
	`Re£tPumpC⁄åﬁ
();

196 
mu16WaôTime
 = 
PUMP_OFF_WAIT_TIME
;

197 
FìdPump
.
OffSãp
++;

200 
STEP_OFF_PUMP_WAIT
:

201 if–
mu16WaôTime
 != 0 )

203 
mu16WaôTime
--;

207 
FìdPump
.
OffSãp
++;

211 
STEP_CLOSE_VALVE
:

212 
	`C⁄åﬁVÆve
();

218 
	}
}

221 
	$C⁄åﬁFìdWôhPump
()

223 
U8
 
mu8PªvVÆ
 = 
OFF
;

224 
U8
 
mu8CurVÆ
;

227 
mu8CurVÆ
 = 
FìdPump
.
OnOff
;

228 if–
mu8PªvVÆ
 !
mu8CurVÆ
 )

230 
mu8PªvVÆ
 = 
mu8CurVÆ
;

231 
	`Re£tFìd
();

236 if–
mu8CurVÆ
 =
ON
 )

238 
	`Tu∫OnFìd
();

243 
	`Tu∫OffFìd
();

245 
	}
}

247 
	$C⁄åﬁFìd
()

249 
	`Re£tFìd
();

251 
	`Tu∫OffPump
();

252 
	`Re£tPumpC⁄åﬁ
();

254 
	`C⁄åﬁVÆve
();

255 
	}
}

257 
	$C⁄åﬁFìdPump
()

259 if–
	`IsExpúedBoŸTime
(Ë=
FALSE
 )

261 
	`CheckC⁄√˘edPump
();

266 
	`CheckC⁄√˘edPump
();

267 
	`CheckPumpOnOff
();

269 if–
FìdPump
.
C⁄n
 =
ON
 )

272 
	`C⁄åﬁFìdWôhPump
();

277 
	`C⁄åﬁFìd
();

280 
	`C⁄åﬁPump
();

281 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\feed_pump.h

1 #i‚de‡
__FEED_PUMP_H__


2 
	#__FEED_PUMP_H__


	)

4 
	~"¥j_ty≥.h
"

6 
	s_„ed_pump_


8 
U8
 
	mC⁄n
;

9 
U8
 
	mOnOff
;

11 
U16
 
	mVÆve
;

12 
U8
 
	mOnSãp
;

13 
U8
 
	mOffSãp
;

15 } 
	tFìdPump_T
;

17 
InôFìdPump
();

19 
GëFìdPumpD©a
(
FìdPump_T
 *
pD©a
);

21 
Clo£VÆvePump
(
U16
 
mu16VÆve
);

23 
O≥nVÆvePump
(
U16
 
mu16VÆve
);

25 
U8
 
IsO≥nVÆvePump
(
U16
 
mu16VÆve
 );

27 
C⁄åﬁFìdPump
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\heater.c

1 
	~"hóãr.h
"

2 
	~"ªœy.h
"

4 
	#MAX_TIME
 60000UL

5 

	)

6 
	s_hóãr_w©î_


9 
U8
 
	mMode
;

10 
U8
 
	mF‹˚dOnOff
;

12 
U32
 
	mOnTime
;

13 
U32
 
	mOffTime
;

14 } 
	tHóãr_T
;

16 
Hóãr_T
 
	gHóãr
;

19 
	$InôHóãr
()

21 
Hóãr
.
Mode
 = 
HEATER_MODE_NONE
;

23 
Hóãr
.
F‹˚dOnOff
 = 
OFF
;

25 
Hóãr
.
OnTime
 = 0;

26 
Hóãr
.
OffTime
 = 0;

27 
	}
}

29 
	$SëHóãrMode
(
U8
 
mu8Mode
)

31 
Hóãr
.
Mode
 = 
mu8Mode
;

32 
	}
}

34 
U8
 
	$GëHóãrMode
(
U8
 
mu8Mode
)

36  
Hóãr
.
Mode
;

37 
	}
}

39 
	$SëHóãrF‹˚dOnOff
(
U8
 
mu8OnOff
)

41 
Hóãr
.
F‹˚dOnOff
 = 
mu8OnOff
;

42 
	}
}

44 
U8
 
	$GëHóãrOnOff
()

46 if–
	`IsTu∫OnRñay
–
RELAY_HEATER
 ) =
TRUE
 )

48  
ON
;

51  
FALSE
;

52 
	}
}

55 
U32
 
	$GëHóãrOnTime
()

57  
Hóãr
.
OnTime
;

58 
	}
}

60 
U32
 
	$GëHóãrOffTime
()

62  
Hóãr
.
OffTime
;

63 
	}
}

66 
	$C⁄åﬁHóãr
(
U8
 
mu8OnOff
)

68 if–
Hóãr
.
Mode
 =
HEATER_MODE_FORCED
 )

70 
mu8OnOff
 = 
Hóãr
.
F‹˚dOnOff
;

73 if–
mu8OnOff
 =
TRUE
 )

75 
	`Tu∫OnRñay
–
RELAY_HEATER
 );

77 if–
Hóãr
.
OnTime
 < 
MAX_TIME
 )

79 
Hóãr
.
OnTime
++;

81 
Hóãr
.
OffTime
 = 0;

85 
	`Tu∫OffRñay
–
RELAY_HEATER
 );

87 
Hóãr
.
OnTime
 = 0;

88 if–
Hóãr
.
OffTime
 < 
MAX_TIME
 )

90 
Hóãr
.
OffTime
++;

93 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\heater.h

1 #i‚de‡
__HEATER_H__


2 
	#__HEATER_H__


	)

4 
	~"¥j_ty≥.h
"

6 
InôHóãr
();

8 
	#HEATER_MODE_NONE
 0

	)

9 
	#HEATER_MODE_FORCED
 1

	)

10 
SëHóãrMode
(
U8
 
mu8Mode
);

11 
U8
 
GëHóãrMode
(U8 
mu8Mode
);

13 
SëHóãrF‹˚dOnOff
(
U8
 
mu8OnOff
);

14 
U8
 
GëHóãrOnOff
();

16 
U32
 
GëHóãrOnTime
();

17 
U32
 
GëHóãrOffTime
();

19 
C⁄åﬁHóãr
(
U8
 
mu8OnOff
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\process_make.c

1 
	~"¥o˚ss_make.h
"

2 
	~"ãmp.h
"

4 
	~"comp.h
"

5 
	~"cﬁd_w©î.h
"

7 
	~"hóãr.h
"

8 
	~"hŸ_w©î.h
"

10 
	$InôPro˚ssMake
()

12 
	`InôHóãr
();

14 
	`InôComp
();

15 
	}
}

18 
	$Pro˚ssMakeHŸW©î
()

20 
U8
 
mu8OnOff
 = 
OFF
;

23 if–
	`GëHŸW©îMake
(Ë=
TRUE
 )

25 
mu8OnOff
 = 
ON
;

27 
	`C⁄åﬁHóãr
–
mu8OnOff
 );

28 
	}
}

31 
	$MakeCﬁdW©îMode
()

33 
U8
 
mu8PªvMake
 = 
FALSE
;

34 
U8
 
mu8Make
;

35 
U8
 
mu8Mode
;

38 
mu8Make
 = 
	`GëCﬁdW©îMake
();

39 
mu8Mode
 = 
	`GëCﬁdW©îMakeMode
();

43 if–
mu8PªvMake
 !
mu8Make
 )

46 if–
mu8Make
 =
TRUE
 )

48 if–
mu8Mode
 =
COLD_MODE_NONE
 )

50 
	`SëCﬁdW©îMakeMode
–
COLD_MODE_INIT
 | 
COLD_MODE_COOLING
 );

56 if–
mu8Mode
 !
COLD_MODE_NONE
 )

58 
	`SëCﬁdW©îMakeMode
–
COLD_MODE_DONE
 );

62 
mu8PªvMake
 = 
mu8Make
;

64 if–
mu8Make
 =
TRUE
 )

67 if–
mu8Mode
 =
COLD_MODE_NONE
 )

69 
	`SëCﬁdW©îMakeMode
–
COLD_MODE_INIT
 | 
COLD_MODE_COOLING
 );

72 
	}
}

75 
	$Pro˚ssMakeCﬁdW©î
()

82 if–
	`IsSëCﬁdW©îMakeMode
–
COLD_MODE_INIT
 ) =
TRUE
 )

85 if–
	`IsExpúedCompPrŸe˘Time
(Ë=
TRUE
 )

87 
	`CÀ¨CﬁdW©îMakeMode
–
COLD_MODE_INIT
 );

90 if–
	`IsSëCﬁdW©îMakeMode
–
COLD_MODE_DONE
 ) =
TRUE
 )

94 
	`Tu∫OffComp
(
COMP_TYPE_COLD
);

96 
	`CÀ¨CﬁdW©îMakeMode
–
COLD_MODE_COOLING
 );

97 
	`CÀ¨CﬁdW©îMakeMode
–
COLD_MODE_DONE
 );

99 if–
	`IsSëCﬁdW©îMakeMode
–
COLD_MODE_COOLING
 ) =
TRUE
 )

102 
	`Tu∫OnComp
(
COMP_TYPE_COLD
);

106 
	`Tu∫OffComp
(
COMP_TYPE_COLD
);

108 
	}
}

110 
	$Pro˚ssMake
()

113 
	`MakeCﬁdW©îMode
();

116 
	`Pro˚ssMakeCﬁdW©î
();

120 
	`Pro˚ssComp
();

123 
	`Pro˚ssMakeHŸW©î
();

124 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\process_make.h

1 #i‚de‡
__PROCESS_MAKE_H__


2 
	#__PROCESS_MAKE_H__


	)

4 
	~"¥j_ty≥.h
"

6 
InôPro˚ssMake
();

8 
Pro˚ssMake
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\pump.c

1 
	~"hw.h
"

2 
	~"pump.h
"

3 
	~"room_w©î.h
"

4 
	~"time_sh‹t.h
"

5 
	~"eﬁ.h
"

8 
	#TIME_20MIN
 12000UL

9 
	#TIME_40MIN
 24000UL

10 
	#TIME_60MIN
 36000UL

11 
	#TIME_120MIN
 72000UL

12 

	)

13 
Pump_T
 
	gPump
;

16 
	s_c⁄åﬁ_


18 
U8
 
	mCmd
;

19 
U32
 
	mOnT¨gëTime
;

20 } 
	tC⁄åﬁ_T
;

23 
	#CMD_LIST
 4

	)

24 c⁄° 
C⁄åﬁ_T
 
	gC⁄åﬁLi°
[ 
CMD_LIST
 ] =

26 { 
ON
, 
TIME_40MIN
 },

27 { 
OFF
, 
TIME_20MIN
 },

29 { 
ON
, 
TIME_40MIN
 },

30 { 
OFF
, 
TIME_120MIN
 },

34 c⁄° 
C⁄åﬁ_T
 
	gTimeSh‹tC⁄åﬁLi°
[ 
CMD_LIST
 ] =

36 { 
ON
, 
TIME_40MIN
 },

37 { 
ON
, 
TIME_20MIN
 },

39 { 
ON
, 
TIME_40MIN
 },

40 { 
ON
, 
TIME_120MIN
 },

44 
	$InôPump
()

46 
Pump
.
OnOff
 = 
OFF
;

47 
Pump
.
F‹˚dOn
 = 
OFF
;

49 
Pump
.
OnSãp
 = 0;

50 
Pump
.
OnPumpCmd
 = 
OFF
;

51 
Pump
.
OnT¨gëTime
 = 0;

52 
Pump
.
OnCuºítTime
 = 0;

53 
	}
}

55 
	$GëPumpD©a
(
Pump_T
 *
pD©a
)

57 
	`mem˝y
–
pD©a
, &
Pump
, –
Pump_T
 ));

58 
	}
}

61 
	$SëPumpOnCuºítTime
(
U32
 
mu32Time
)

63 
Pump
.
OnCuºítTime
 = 
mu32Time
;

64 
	}
}

66 
	$SëPumpF‹˚dOn
(
U8
 
mu8OnOff
)

68 
Pump
.
F‹˚dOn
 = 
mu8OnOff
;

69 
	}
}

71 
U8
 
	$GëPumpOnOff
 ( )

73  
Pump
.
OnOff
;

74 
	}
}

76 
	$Tu∫OnPump
()

78 
Pump
.
OnOff
 = 
ON
;

79 
	}
}

81 
	$Tu∫OffPump
()

83 
Pump
.
OnOff
 = 
OFF
;

84 
	}
}

86 
U8
 
	$GëPumpOnCmd
 ( )

88  
Pump
.
OnPumpCmd
;

89 
	}
}

91 
	$Re£tPumpC⁄åﬁ
()

93 
Pump
.
OnSãp
 = 0;

94 
Pump
.
OnT¨gëTime
 = 0;

95 
Pump
.
OnCuºítTime
 = 0;

97 
Pump
.
OnPumpCmd
 = 0;

98 
	}
}

102 
	$CheckRoomLevñ
()

104 
U8
 
mu8PªvLevñ
 = 
LEVEL_LOW
;

105 
U8
 
mu8CurLevñ
 = 
LEVEL_LOW
;

108 
mu8CurLevñ
 = 
	`GëRoomW©îLevñ
();

109 if–
mu8CurLevñ
 =
LEVEL_LOW


110 || 
mu8CurLevñ
 =
LEVEL_MID


111 || 
mu8CurLevñ
 =
LEVEL_HIGH
 )

113 if–
mu8CurLevñ
 !
mu8PªvLevñ
 )

115 if–
mu8PªvLevñ
 < 
mu8CurLevñ
 )

117 
	`Re£tPumpC⁄åﬁ
();

120 
mu8PªvLevñ
 = 
mu8CurLevñ
;

123 
	}
}

125 
	$Upd©eFìdPumpTimî
()

127 if–
Pump
.
OnCuºítTime
 != 0 )

129 
Pump
.
OnCuºítTime
--;

131 
	}
}

133 
	$C⁄åﬁPump
()

135 
U8
 
mu8TimeSh‹tSètus
;

136 
mu8TimeSh‹tSètus
 = 
	`GëTimeSh‹tSètus
();

138 if–
Pump
.
OnOff
 =
OFF
 )

140 
	`TURN_OFF_PUMP
();

144 if–
Pump
.
F‹˚dOn
 =
ON
 )

146 
	`TURN_ON_PUMP
();

150 
	`CheckRoomLevñ
();

152 if–
Pump
.
OnCuºítTime
 == 0 )

154 i‡–
mu8TimeSh‹tSètus
 =
FALSE
 )

156 
Pump
.
OnT¨gëTime
 = 
C⁄åﬁLi°
[ Pump.
OnSãp
 ].OnTargetTime;

157 
Pump
.
OnCuºítTime
 = 
C⁄åﬁLi°
[ Pump.
OnSãp
 ].
OnT¨gëTime
;

158 
Pump
.
OnPumpCmd
 = 
C⁄åﬁLi°
[ Pump.
OnSãp
 ].
Cmd
;

162 
Pump
.
OnT¨gëTime
 = 
TimeSh‹tC⁄åﬁLi°
[ Pump.
OnSãp
 ].OnTargetTime;

163 
Pump
.
OnCuºítTime
 = 
TimeSh‹tC⁄åﬁLi°
[ Pump.
OnSãp
 ].
OnT¨gëTime
;

164 
Pump
.
OnPumpCmd
 = 
TimeSh‹tC⁄åﬁLi°
[ Pump.
OnSãp
 ].
Cmd
;

167 
Pump
.
OnSãp
++;

168 if–
Pump
.
OnSãp
 >
CMD_LIST
 )

170 
Pump
.
OnSãp
 = 
CMD_LIST
 - 2;

175 if–
Pump
.
OnPumpCmd
 =
ON
 )

177 
	`TURN_ON_PUMP
();

181 
	`TURN_OFF_PUMP
();

185 
	}
}

187 
	$C⁄åﬁPumpEﬁ
()

189 if–
Pump
.
OnOff
 =
OFF
 )

191 
	`TURN_OFF_PUMP
();

195 
	`TURN_ON_PUMP
();

197 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\pump.h

1 #i‚de‡
__PUMP_H__


2 
	#__PUMP_H__


	)

4 
	~"¥j_ty≥.h
"

6 
	s_boo°_pump_


8 
U8
 
	mOnOff
;

9 
U8
 
	mF‹˚dOn
;

11 
U8
 
	mOnSãp
;

12 
U8
 
	mOnPumpCmd
;

13 
U32
 
	mOnT¨gëTime
;

14 
U32
 
	mOnCuºítTime
;

16 } 
	tPump_T
;

19 
InôPump
();

21 
GëPumpD©a
(
Pump_T
 *
pD©a
);

23 
SëPumpOnCuºítTime
(
U32
 
mu32Time
);

25 
SëPumpF‹˚dOn
(
U8
 
mu8OnOff
);

27 
U8
 
GëPumpOnOff
 ( );

29 
Tu∫OnPump
();

31 
Tu∫OffPump
();

33 
U8
 
GëPumpOnCmd
 ( );

35 
Re£tPumpC⁄åﬁ
();

37 
Upd©eFìdPumpTimî
();

39 
C⁄åﬁPump
();

41 
C⁄åﬁPumpEﬁ
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\relay.c

1 
	~"hÆ_ªœy.h
"

2 
	~"ªœy.h
"

5 
	#MK_EX_TYPE
 ( 
RELAY_COMP
 | 
RELAY_HEATER
 )

	)

6 
	#MK_CON_TYPE
 ( ~
MK_EX_TYPE
 )

	)

18 
	s_io_ªœy_


20 
U16
 
	mCmd
;

21 
U16
 
	mCur
;

24 
U16
 
	mCmdEx
;

25 
U16
 
	mCurEx
;

28 
U16
 
	mCmdC⁄
;

29 
U16
 
	mCurC⁄
;

31 
U8
 
	mTEST_Cou¡
;

32 } 
	tIO_Rñay_T
;

34 
IO_Rñay_T
 
	gªœy
;

37 
	$InôRñay
()

39 
ªœy
.
Cmd
 = 0;

40 
ªœy
.
Cur
 = 0;

42 
ªœy
.
CmdEx
 = 0;

43 
ªœy
.
CurEx
 = 0;

45 
ªœy
.
CmdC⁄
 = 0;

46 
ªœy
.
CurC⁄
 = 0;

47 
ªœy
.
TEST_Cou¡
 = 0;

48 
	}
}

51 
	$Tu∫OnRñay
(
U16
 
mu16Rñay
)

53 if–(
mu16Rñay
 & 
MK_EX_TYPE
 ) != 0 )

55 
ªœy
.
CmdEx
 |(
mu16Rñay
 & 
MK_EX_TYPE
);

59 
ªœy
.
CmdC⁄
 |(
mu16Rñay
 & 
MK_CON_TYPE
);

61 
	}
}

63 
	$Tu∫OffRñay
(
U16
 
mu16Rñay
)

65 
ªœy
.
Cmd
 &~
mu16Rñay
;

67 if–(
mu16Rñay
 & 
MK_EX_TYPE
 ) != 0 )

69 
ªœy
.
CmdEx
 &~(
mu16Rñay
 & 
MK_EX_TYPE
);

73 
ªœy
.
CmdC⁄
 &~(
mu16Rñay
 & 
MK_CON_TYPE
);

75 
	}
}

77 
	$Tu∫OffRñayAŒ
()

79 
ªœy
.
Cmd
 = 0;

80 
ªœy
.
CmdEx
 = 0;

81 
ªœy
.
CmdC⁄
 = 0;

82 
	}
}

84 
U8
 
	$IsTu∫OnRñay
(
U16
 
mu16Rñay
)

86 
U16
 
mu16Cmd
;

88 
mu16Cmd
 = 
ªœy
.
CmdEx
 |Ññay.
CmdC⁄
;

89 if–(
mu16Cmd
 & 
mu16Rñay
) == mu16Relay )

91  
TRUE
;

94  
FALSE
;

95 
	}
}

97 
U16
 
	$GëRñaySètus
()

99 
U16
 
mu16Cmd
;

101 
mu16Cmd
 = 
ªœy
.
CurEx
 |Ññay.
CurC⁄
;

102  
mu16Cmd
;

103 
	}
}

105 
U16
 
	$OnOffRñay
(
U8
 
mu8Ex
, 
U16
 
mu16Cur
, U16 
mu16Cmd
)

107 
U8
 
i
;

108 
U16
 
mu16VÆ
;

109 
U16
 
mu16Diff
;

113 
mu16Diff
 = 
mu16Cur
 ^ 
mu16Cmd
;

114 if–
mu16Diff
 == 0 )

117  
mu16Cur
;

121  
i
 = 0; i < 16 ; i++ )

124 
mu16VÆ
 = 1 << 
i
;

125 if–
mu16Diff
 & 
mu16VÆ
 )

128 if––
mu16Cmd
 & 
mu16VÆ
 ) == 0 )

130 
	`HAL_Tu∫OffRñay
–
i
 );

131 
mu16Cur
 &~
mu16VÆ
;

137 
mu16Diff
 = 
mu16Cur
 ^ 
mu16Cmd
;

138 if–
mu16Diff
 == 0 )

141  
mu16Cur
;

144  
i
 = 0 ; i < 16 ; i++ )

147 
mu16VÆ
 = 1 << 
i
;

148 if–
mu16Diff
 & 
mu16VÆ
 )

151 if––
mu16Cmd
 & 
mu16VÆ
) != 0 )

153 
	`HAL_Tu∫OnRñay
–
i
 );

154 
mu16Cur
 |
mu16VÆ
;

157 if–
mu8Ex
 =
TRUE
 )

159  
mu16Cur
;

165  
mu16Cur
;

166 
	}
}

168 
	$C⁄åﬁRñayEx˛usive
()

170 
ªœy
.
CurEx
 = 
	`OnOffRñay
–
TRUE
,Ññay.CurEx,Ññay.
CmdEx
 ) ;

171 
	}
}

173 
	$C⁄åﬁRñayC⁄cuºít
()

175 
ªœy
.
CurC⁄
 = 
	`OnOffRñay
–
FALSE
,Ññay.CurC⁄,Ññay.
CmdC⁄
 ) ;

176 
	}
}

178 
	$TEST_C⁄åﬁRñay
()

180 
U16
 
cmd
;

182 
cmd
 = 1 << 
ªœy
.
TEST_Cou¡
;

183 
	`Tu∫OffRñay
( 0xFFFF );

184 
	`Tu∫OnRñay
–
cmd
 );

185 if–
ªœy
.
TEST_Cou¡
++ >
MAX_RELAY_NUM
 )

187 
ªœy
.
TEST_Cou¡
 = 0;

190 
	`C⁄åﬁRñayEx˛usive
();

191 
	`C⁄åﬁRñayC⁄cuºít
();

192 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\relay.h

1 #i‚de‡
__RELAY_H__


2 
	#__RELAY_H__


	)

4 
	~"¥j_ty≥.h
"

6 
InôRñay
();

8 
	#RELAY_COMP
 0x0001

	)

9 
	#RELAY_HEATER
 0x0002

	)

10 
	#MAX_RELAY_NUM
 2

	)

12 
Tu∫OnRñay
(
U16
 
mu16Rñay
);

13 
Tu∫OffRñay
(
U16
 
mu16Rñay
);

14 
Tu∫OffRñayAŒ
();

16 
U8
 
IsTu∫OnRñay
(
U16
 
mu16Rñay
);

18 
U16
 
GëRñaySètus
();

20 
C⁄åﬁRñayEx˛usive
();

21 
C⁄åﬁRñayC⁄cuºít
();

23 
TEST_C⁄åﬁRñay
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\valve.c

1 
	~"hÆ_vÆve.h
"

2 
	~"vÆve.h
"

4 
	#TEST_VALVE_ONOFF
 0

	)

6 
	s_io_vÆve_


8 
U16
 
	mCmd
;

9 
U16
 
	mCur
;

10 
U16
 
	mBoŸTime
;

12 
U8
 
	mTEST_Cou¡
;

13 } 
	tIO_VÆve_T
;

15 
IO_VÆve_T
 
	gvÆve
;

18 
	$InôVÆve
()

21 
vÆve
.
Cmd
 = 
VALVE_NOS
;

22 
vÆve
.
Cur
 = 
VALVE_NOS
;

23 
vÆve
.
BoŸTime
 = 500;

25 
vÆve
.
TEST_Cou¡
 = 0;

26 
	}
}

28 
	$O≥nVÆve
–
U16
 
mu16VÆve
)

30 
vÆve
.
Cmd
 |
mu16VÆve
;

31 
	}
}

33 
	$Clo£VÆve
–
U16
 
mu16VÆve
)

35 
vÆve
.
Cmd
 &~
mu16VÆve
;

36 
	}
}

38 
U16
 
	$GëVÆveSètus
()

40  
vÆve
.
Cur
;

41 
	}
}

43 #i‡
TEST_VALVE_ONOFF


44 
U16
 
	gthe_vÆve_cmd
 = 0x0000;

46 
U16
 
	$GëVÆveCmd
()

49 #i‡
TEST_VALVE_ONOFF


50  
the_vÆve_cmd
;

52  
vÆve
.
Cmd
;

54 
	}
}

56 
U8
 
	$IsExpúedBoŸTime
()

58 if–
vÆve
.
BoŸTime
 != 0 )

60  
FALSE
;

63  
TRUE
;

64 
	}
}

66 
U8
 
	$IsO≥nVÆve
(
U16
 
mu16VÆve
 )

68 if–(
vÆve
.
Cur
 & 
mu16VÆve
 ) == mu16Valve )

70  
TRUE
;

73  
FALSE
;

74 
	}
}

76 
	$C⁄åﬁVÆve
()

78 
U8
 
i
;

79 
U16
 
mu16VÆ
;

80 
U16
 
mu16Diff
;

81 
U16
 
mu16Cmd
;

84 if–
vÆve
.
BoŸTime
 != 0 )

86 
vÆve
.
BoŸTime
--;

90 
mu16Cmd
 = 
	`GëVÆveCmd
();

93 
mu16Diff
 = 
vÆve
.
Cur
 ^ 
mu16Cmd
;

94 if–
mu16Diff
 == 0 )

100  
i
 = 0; i < 16 ; i++ )

102 
mu16VÆ
 = 1 << 
i
;

103 if–
mu16Diff
 & 
mu16VÆ
 )

105 if––
mu16Cmd
 & 
mu16VÆ
 ) == 0 )

107 
	`HAL_Clo£VÆve
–
i
 );

108 
vÆve
.
Cur
 &~
mu16VÆ
;

114 
mu16Diff
 = 
vÆve
.
Cur
 ^ 
mu16Cmd
;

115 if–
mu16Diff
 == 0 )

119  
i
 = 0 ; i < 16 ; i++ )

121 
mu16VÆ
 = 1 << 
i
;

122 if–
mu16Diff
 & 
mu16VÆ
 )

124 if––
mu16Cmd
 & 
mu16VÆ
) != 0 )

126 
	`HAL_O≥nVÆve
–
i
 );

127 
vÆve
.
Cur
 |
mu16VÆ
;

131 
	}
}

133 
	$TEST_C⁄åﬁVÆve
()

135 
U16
 
cmd
;

137 
cmd
 = 1U << 
vÆve
.
TEST_Cou¡
;

138 
	`Clo£VÆve
( 0xFFFF );

139 
	`O≥nVÆve
–
cmd
 );

140 if–
vÆve
.
TEST_Cou¡
++ >
MAX_VALVE_NUM
 )

142 
vÆve
.
TEST_Cou¡
 =0;

145 
	`C⁄åﬁVÆve
();

146 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\valve.h

1 #i‚de‡
__VALVE_H__


2 
	#__VALVE_H__


	)

4 
	~"¥j_ty≥.h
"

6 
	#VALVE_NOS
 0x0001

	)

7 
	#VALVE_FEED
 0x0002

	)

8 
	#VALVE_FLUSHING
 0x0004

	)

10 
	#MAX_VALVE_NUM
 3

	)

12 
	#VALVE_ALL
 ( \

13 
VALVE_NOS
 \

14 | 
VALVE_FEED
 \

15 | 
VALVE_FLUSHING
 \

16 )

	)

18 
InôVÆve
();

20 
O≥nVÆve
(
U16
 
mu16VÆve
);

22 
Clo£VÆve
(
U16
 
mu16VÆve
);

24 
U16
 
GëVÆveSètus
();

26 
U8
 
IsExpúedBoŸTime
();

28 
U8
 
IsO≥nVÆve
(
U16
 
mu16VÆve
 );

30 
C⁄åﬁVÆve
();

32 
TEST_C⁄åﬁVÆve
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key.c

1 
	~"hw.h
"

2 
	~"key.h
"

4 
	~<°rög.h
>

10 
	mKEY_STATUS_NONE
,

11 
	mKEY_STATUS_PUSHED
,

12 
	mKEY_STATUS_POP
,

13 
	mKEY_STATUS_TIME_OUT


14 }
	tKeySètus_T
;

18 
	#EVENT_TIME_OUT_5S
 500

19 
	#EVENT_TIME_OUT_3S
 300

20 
	#EVENT_TIME_OUT_2S
 200

21 
	#EVENT_TIME_OUT_1S
 100

22 
	#EVENT_TIME_OUT_SHORT
 10

23 
	#MAX_EVENT_TIME_OUT
 
EVENT_TIME_OUT_5S


	)

25 
	s_key_


27 
KeySètus_T
 
	mSètus
;

29 
U16
 
	mVÆ
;

30 
U16
 
	mVÆP›
;

31 
U16
 
	mPushedTime
;

32 
U8
 
	mEvítFœg
;

33 } 
	tKey_T
;

35 
Key_T
 
	gKey
;

39 
	$InôKey
()

41 
	`mem£t
–&
Key
, 0, ( Key ) );

42 
	}
}

45 
U16
 
	$GëKeyVÆ
( )

47  
Key
.
VÆ
;

48 
	}
}

50 
U16
 
	$GëKeyP›VÆ
()

52  
Key
.
VÆP›
;

53 
	}
}

55 
	$SëKeyEvítFœg
(
U8
 
mu8Evít
 )

57 
Key
.
EvítFœg
 |
mu8Evít
;

58 
	}
}

60 
	$CÀ¨KeyEvítFœg
(
U8
 
mu8Evít
 )

62 
Key
.
EvítFœg
 &~
mu8Evít
;

63 
	}
}

65 
U8
 
	$IsSëKeyEvítFœg
–
U8
 
mu8Evít
 )

67 if–(
Key
.
EvítFœg
 & 
mu8Evít
) == mu8Event )

69  
TRUE
;

72  
FALSE
;

73 
	}
}

89 
	s_KeyEvít_


91 
U16
 
	mu16EvítTime
;

92 
U8
 
	mu8Evít
;

93 } 
	tKeyEvít_T
;

95 
KeyEvít_T
 
	gKeyEvítLi°
[] =

97 { 
EVENT_TIME_OUT_5S
, 
KEY_EVENT_PUSHED_LONG_5S
 },

98 { 
EVENT_TIME_OUT_3S
, 
KEY_EVENT_PUSHED_LONG_3S
 },

99 { 
EVENT_TIME_OUT_2S
, 
KEY_EVENT_PUSHED_LONG_2S
 },

100 { 
EVENT_TIME_OUT_1S
, 
KEY_EVENT_PUSHED_LONG_1S
 },

101 { 
EVENT_TIME_OUT_SHORT
, 
KEY_EVENT_PUSHED_SHORT
 },

104 
	#SZ_KEY_EVENT_LIST
 ((
KeyEvítLi°
)/(
KeyEvít_T
))

	)

106 
	$FödSëKeyEvít
(
U16
 
mu16PushedTime
)

108 
U8
 
mu8Index
;

110  
mu8Index
 = 0; mu8Index < 
SZ_KEY_EVENT_LIST
 ; mu8Index++ )

112 if–
KeyEvítLi°
[ 
mu8Index
 ].
u16EvítTime
 =
mu16PushedTime
 )

114 
	`SëKeyEvítFœg
–
KeyEvítLi°
[ 
mu8Index
 ].
u8Evít
 );

118 
	}
}

120 
	$Pro˚ssSˇnKey
()

122 
U16
 
mu16PªvKeyVÆ
;

123 
U16
 
mu16KeyVÆ
;

127 
mu16KeyVÆ
 = 
	`HAL_GëKeyVÆ
();

128 if–
mu16PªvKeyVÆ
 !
mu16KeyVÆ
 )

130 if–
mu16KeyVÆ
 =
HAL_KEY_NONE
 )

132 
Key
.
VÆP›
 = 
mu16PªvKeyVÆ
;

135 
mu16PªvKeyVÆ
 = 
mu16KeyVÆ
;

136 
Key
.
VÆ
 = 
mu16KeyVÆ
;

138 if–
mu16KeyVÆ
 !
HAL_KEY_NONE
 )

140 
Key
.
Sètus
 = 
KEY_STATUS_PUSHED
;

141 
Key
.
PushedTime
 = 0;

142 
	`CÀ¨KeyEvítFœg
–
KEY_EVENT_ALL
 );

147 if–
Key
.
PushedTime
 > 
EVENT_TIME_OUT_SHORT
 )

149 
Key
.
Sètus
 = 
KEY_STATUS_POP
;

150 
	`SëKeyEvítFœg
–
KEY_EVENT_POP
 );

154 
Key
.
Sètus
 = 
KEY_STATUS_NONE
;

159 if–
Key
.
Sètus
 =
KEY_STATUS_PUSHED
 )

161 
Key
.
PushedTime
++;

162 
	`FödSëKeyEvít
–
Key
.
PushedTime
 );

164 if–
Key
.
PushedTime
 > 
MAX_EVENT_TIME_OUT
 )

166 
Key
.
Sètus
 = 
KEY_STATUS_TIME_OUT
;

169 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key.h

1 #i‚de‡
__KEY_H__


2 
	#__KEY_H__


	)

4 
	~"hÆ_key.h
"

6 
InôKey
();

9 
	#K_NONE
 
HAL_KEY_NONE


	)

10 
	#K_HOT
 
HAL_KEY_2


	)

11 
	#K_COLD
 
HAL_KEY_1


	)

12 
	#K_ALL
 
HAL_KEY_ALL


	)

15 
U16
 
GëKeyVÆ
( );

16 
U16
 
GëKeyP›VÆ
( );

19 
	#KEY_EVENT_PUSHED_SHORT
 0x01

	)

20 
	#KEY_EVENT_PUSHED_LONG_5S
 0x02

	)

21 
	#KEY_EVENT_PUSHED_LONG_3S
 0x04

	)

22 
	#KEY_EVENT_PUSHED_LONG_2S
 0x08

	)

23 
	#KEY_EVENT_PUSHED_LONG_1S
 0x10

	)

24 
	#KEY_EVENT_POP
 0x20

	)

25 
	#KEY_EVENT_ALL
 0x3F

	)

26 
SëKeyEvítFœg
(
U8
 
mu8Evít
 );

27 
CÀ¨KeyEvítFœg
(
U8
 
mu8Evít
 );

28 
U8
 
IsSëKeyEvítFœg
–U8 
mu8Evít
 );

30 
Pro˚ssSˇnKey
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key_common_handler.h

1 #i‚de‡
__KEY_COMMON_HANDLER_H__


2 
	#__KEY_COMMON_HANDLER_H__


	)

4 
	~"¥j_ty≥.h
"

8 
	$U8
 (*
	tKeyVÆidFun_T
)(
	tU16
 
	tmu16Key
);

11 
	#KEY_ACTION_SHORT
 0

12 
	#KEY_ACTION_2_SEC
 1

13 
	#KEY_ACTION_3_SEC
 2

14 
	#KEY_ACTION_5_SEC
 3

15 
	#KEY_ACTION_POP
 4

16 
	#KEY_ACTION_1_SEC
 5

17 
	#KEY_ACTION_NUM
 6

	)

18 
	$U8
(*
	tKeyFun_T
)();

19 
	s_key_evít_


21 
U16
 
Key
;

22 
KeyFun_T
 
a˘i⁄Evít
[
KEY_ACTION_NUM
];

23 } 
	tKeyEvítLi°_T
;

26 
	$U8
 (*
	tKeyEvítSize_T
)();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key_handler.c

1 
	~"key_h™dÀr.h
"

2 
	~"key.h
"

3 
	~"key_comm⁄_h™dÀr.h
"

4 
	~"hŸ_w©î.h
"

5 
	~"cﬁd_w©î.h
"

6 
	~"room_w©î.h
"

7 
	~"Temp.h
"

8 
	~"sound.h
"

9 
	~"ì¥om.h
"

10 
	~"îr‹.h
"

11 
	~"¥o˚ss_di•œy.h
"

12 
	~"eﬁ.h
"

13 
	~"f˘.h
"

14 
	~"time_sh‹t.h
"

15 
	~"timî.h
"

16 
	~"•ecül_mode.h
"

18 #i‡
CONFIG_TEST


19 
	~"comp.h
"

23 
U8
 
CÀ¨O√ShŸ
();

25 
U8
 
OnHŸMake
();

26 
U8
 
OffHŸMake
();

27 
U8
 
OnOffHŸMake
();

30 
U8
 
OnCﬁdMake
();

31 
U8
 
OffCﬁdMake
();

32 
U8
 
OnOffCﬁdMake
();

35 
U8
 
CÀ¨Memíto
();

38 
U8
 
OnVîsi⁄
();

39 
U8
 
OnOffMemíto
();

42 
U8
 
SñS≥cül
();

47 
U8
 
OnEø£Eïrom
();

52 
U8
 
OnFr⁄tSèπ
();

53 
U8
 
OnF˘Sèπ
();

57 
KeyEvítLi°_T
 
	gKeyEvítLi°
[] =

61 { 
K_HOT
, 
NULL
, NULL, 
OnHŸMake
, 
OffHŸMake
, 
CÀ¨O√ShŸ
, NULL },

62 { 
K_COLD
, 
NULL
, NULL, 
OnCﬁdMake
, 
OffCﬁdMake
, 
CÀ¨O√ShŸ
, NULL },

65 { 
K_SPECIAL
, 
NULL
, NULL, NULL, NULL, NULL, 
SñS≥cül
 }

74 
KeyEvítLi°_T
 
	gKeyEvítTimeSh‹tLi°
[] =

78 { 
K_HOT
, 
OnOffHŸMake
, 
NULL
, NULL, NULL, NULL, },

79 { 
K_COLD
, 
OnOffCﬁdMake
, 
NULL
, NULL, NULL, NULL, },

82 
U8
 
	$IsVÆidKeyC⁄dôi⁄
(
U16
 
mu16Key
)

85 if–
	`GëA…idueC⁄fig
(Ë=
TRUE
 )

87 if–
mu16Key
 !
K_HOT
 )

89  
FALSE
;

95 if–
	`GëMemítoDi•
(Ë=
TRUE
 )

97 if–
mu16Key
 !
K_MEMENTO


98 && 
mu16Key
 !
K_ROOM
 )

100  
FALSE
;

105  
TRUE
;

106 
	}
}

108 * 
	$GëKeyEvítLi°
()

110 if–
	`GëTimeSh‹tSètus
(Ë=
TRUE
 )

112  
KeyEvítTimeSh‹tLi°
;

115  
KeyEvítLi°
;

116 
	}
}

118 
U8
 
	$GëKeyEvítLi°Size
()

120 if–
	`GëTimeSh‹tSètus
(Ë=
TRUE
 )

122  ( (
KeyEvítTimeSh‹tLi°
Ë/ (
KeyEvítLi°_T
) );

125  ( (
KeyEvítLi°
Ë/ (
KeyEvítLi°_T
) );

126 
	}
}

128 
U8
 
	ggu8O√ShŸOnOff
;

129 
U8
 
	$CÀ¨O√ShŸ
 ()

131 
gu8O√ShŸOnOff
 = 
FALSE
;

133  
SOUND_NONE
;

134 
	}
}

137 
U8
 
	$OnHŸMake
()

140 if–
	`GëA…idueC⁄fig
(Ë=
TRUE
 )

142  
SOUND_NONE
;

145 if–
	`GëHŸW©îC⁄figMake
(Ë=
TRUE
 )

147  
SOUND_NONE
;

150 
	`SëHŸW©îC⁄figMake
–
TRUE
 );

151 
gu8O√ShŸOnOff
 = 
TRUE
;

152  
SOUND_CONFIG_SETUP
;

153 
	}
}

156 
U8
 
	$OffHŸMake
()

159 if–
	`GëA…idueC⁄fig
(Ë=
TRUE
 )

161  
SOUND_NONE
;

164 if–
	`GëHŸW©îC⁄figMake
(Ë=
FALSE
 )

166  
SOUND_NONE
;

169 i‡–
gu8O√ShŸOnOff
 =
TRUE
 )

171 
gu8O√ShŸOnOff
 = 
FALSE
;

172  
SOUND_NONE
;

175 
	`SëHŸW©îC⁄figMake
–
FALSE
 );

176  
SOUND_CONFIG_CANCEL
;

177 
	}
}

179 
U8
 
	$OnOffHŸMake
()

181 if–
	`GëHŸW©îC⁄figMake
(Ë=
FALSE
 )

183 
	`SëHŸW©îC⁄figMake
–
TRUE
 );

187 
	`SëHŸW©îC⁄figMake
–
FALSE
 );

190  
SOUND_NONE
;

191 
	}
}

195 
U8
 
	$OnCﬁdMake
()

197 if–
	`GëCﬁdW©îC⁄figMake
(Ë=
TRUE
 )

199  
SOUND_NONE
;

203 
	`SëCﬁdW©îC⁄figMake
–
TRUE
 );

204 
gu8O√ShŸOnOff
 = 
TRUE
;

205 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 
DEFAULT_TEMP_READ_TIME
 );

207  
SOUND_CONFIG_SETUP
;

208 
	}
}

210 
U8
 
	$OffCﬁdMake
()

212 if–
	`GëCﬁdW©îC⁄figMake
(Ë=
FALSE
 )

214  
SOUND_NONE
;

217 i‡–
gu8O√ShŸOnOff
 =
TRUE
 )

219 
gu8O√ShŸOnOff
 = 
FALSE
;

220  
SOUND_NONE
;

223 
	`SëCﬁdW©îC⁄figMake
–
FALSE
 );

224  
SOUND_CONFIG_CANCEL
;

225 
	}
}

227 
U8
 
	$OnOffCﬁdMake
()

229 if–
	`GëCﬁdW©îC⁄figMake
(Ë=
FALSE
 )

231 
	`SëCﬁdW©îC⁄figMake
–
TRUE
 );

232 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 
DEFAULT_TEMP_READ_TIME
 );

236 
	`SëCﬁdW©îC⁄figMake
–
FALSE
 );

239  
SOUND_NONE
;

240 
	}
}

244 
U8
 
	$CÀ¨Memíto
()

247 if–
	`GëMemítoDi•
(Ë=
TRUE
 )

249 
	`CÀ¨MemítoEº‹
();

251  
SOUND_SELECT
;

254  
SOUND_NONE
;

255 
	}
}

262 
U8
 
	$OnVîsi⁄
()

264 
	`SëVîsi⁄Di•
( 30 );

266  
SOUND_SELECT
;

267 
	}
}

270 
U8
 
	$OnOffMemíto
()

272 if–
	`GëMemítoDi•
(Ë=
FALSE
 )

274 
	`SëMemítoDi•
–
TRUE
 );

278 
	`SëMemítoDi•
–
FALSE
 );

281  
SOUND_SELECT
;

282 
	}
}

284 
U8
 
	$SñS≥cül
()

286 
U8
 
mu8Rë
;

287 
S≥cülModeId_T
 
mid
;

289 
mu8Rë
 = 
	`IsExpúedSïcülModeLimôTimî
();

290 i‡–
mu8Rë
 =
TRUE
 )

292  
SOUND_NONE
;

295 
	`SëS≥cülMode
 ( 
SPECIAL_WAIT
 );

296  
SOUND_CONFIG_SETUP
;

297 
	}
}

303 
U8
 
	$OnEø£Eïrom
()

305 if–
	`IsExpúedC⁄figTime
(Ë=
FALSE
 )

307 
	`Eø£Eïrom
();

308  
SOUND_SELECT
;

311  
SOUND_NONE
;

312 
	}
}

317 
U8
 
	$OnEﬁSèπ
()

321 if–
	`IsExpúedEﬁLimôTimî
(Ë=
TRUE
 )

323  
SOUND_NONE
;

327 if–
	`GëEﬁSètus
(Ë=
TRUE
 )

329  
SOUND_NONE
;

333 
	`SèπEﬁ
–
EOL_TYPE_LOAD
 );

334 
	`SèπDi•œyInô
();

335 
	`SëVîsi⁄Di•
( 50 );

337  
SOUND_SETUP
;

338 
	}
}

341 
U8
 
	$OnFr⁄tSèπ
()

345 if–
	`IsExpúedEﬁLimôTimî
(Ë=
TRUE
 )

347  
SOUND_NONE
;

351 if–
	`GëEﬁSètus
(Ë=
TRUE
 )

353  
SOUND_NONE
;

357 
	`SèπEﬁ
–
EOL_TYPE_FRONT
 );

358 
	`SèπDi•œyInô
();

359 
	`SëVîsi⁄Di•
( 50 );

361  
SOUND_SETUP
;

362 
	}
}

369 
U8
 
	$OnF˘Sèπ
()

373 if–
	`IsExpúedF˘LimôTimî
(Ë=
TRUE
 )

375  
SOUND_NONE
;

380 
	`SèπF˘
();

381  
SOUND_SELECT
;

382 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key_handler.h

1 #i‚de‡
__KEY_HANDLER_H__


2 
	#__KEY_HANDLER_H__


	)

4 
	~"¥j_ty≥.h
"

9 
	#K_SPECIAL
 ( 
K_HOT
 | 
K_COLD
 )

	)

17 
U8
 
IsVÆidKeyC⁄dôi⁄
(
U16
 
mu16Key
);

18 * 
GëKeyEvítLi°
();

20 
U8
 
GëKeyEvítLi°Size
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\process_key.c

1 
	~"hw.h
"

2 
	~"¥j_ty≥.h
"

3 
	~"¥o˚ss_key.h
"

4 
	~"key.h
"

5 
	~"sound.h
"

6 
	~"•ecül_mode.h
"

7 
	~"¥o˚ss_di•œy.h
"

8 
	~"key_comm⁄_h™dÀr.h
"

9 
	~"key_h™dÀr.h
"

10 
	~"key_eﬁ_h™dÀr.h
"

11 
	~"key_f˘_h™dÀr.h
"

12 
	~"key_•ecül_h™dÀr.h
"

26 
U8
 
	$KeyEvítH™dÀr
(
KeyVÆidFun_T
 
pVÆidFunc
, 
KeyEvítLi°_T
 *
pLi°
, 
U8
 
mu8Size
 )

28 
U8
 
i
;

29 
U16
 
mu16KeyVÆ
;

30 
U16
 
mu16KeyP›VÆ
;

31 
U8
 
mu8Sound
;

33 
U16
 
mu16PªvKeyVÆ
 = 
K_NONE
;

34 
U8
 
mu8EºKeySkù
 = 
FALSE
;

39 
mu16KeyVÆ
 = 
	`GëKeyVÆ
();

40 
mu16KeyP›VÆ
 = 
	`GëKeyP›VÆ
();

50 if–
mu16KeyVÆ
 !
mu16PªvKeyVÆ
 )

52 
mu16PªvKeyVÆ
 = 
mu16KeyVÆ
;

53 
mu8EºKeySkù
 = 
FALSE
;

56 if–
mu8EºKeySkù
 =
TRUE
 )

58  
TRUE
;

61 if–
pLi°
 =
NULL
 || 
mu8Size
 == 0 )

63  
TRUE
;

67 if–
mu16KeyVÆ
 =
K_NONE


68 && 
	`IsSëKeyEvítFœg
–
KEY_EVENT_POP
 ) =
TRUE
 )

70 
	`CÀ¨KeyEvítFœg
–
KEY_EVENT_POP
 );

71  
i
 = 0; i < 
mu8Size
 ; i++ )

73 if–(
pLi°
+
i
)->
Key
 =
mu16KeyP›VÆ
 )

75 if–(
pLi°
+
i
)->
a˘i⁄Evít
[
KEY_ACTION_POP
] !
NULL
 )

77 
mu8Sound
 = (
pLi°
+
i
)->
a˘i⁄Evít
[
KEY_ACTION_POP
]();

78 
	`Sound
–
mu8Sound
 );

79  
TRUE
;

86  
i
 = 0; i < 
mu8Size
 ; i++ )

88 if–(
pLi°
+
i
)->
Key
 =
mu16KeyVÆ
 )

90 if–
	`IsSëKeyEvítFœg
–
KEY_EVENT_PUSHED_SHORT
 ) =
TRUE
 )

92 
	`CÀ¨KeyEvítFœg
–
KEY_EVENT_PUSHED_SHORT
 );

96 if–
	`Re£tDøöW©î
(Ë=
TRUE
 )

98 
	`Sound
–
SOUND_CANCEL
 );

102 
	`Re£tMíuSëtögTimî
();

104 if–
	`SëSãrD⁄e
–
FALSE
 ) =
TRUE
 )

106 
	`Sound
–
SOUND_SELECT
 );

111 if–
mu16KeyVÆ
 !
K_NONE


112 && 
pVÆidFunc
 !
NULL
 )

114 if–
	`pVÆidFunc
–
mu16KeyVÆ
 ) =
FALSE
 )

116 
	`Sound
–
SOUND_ERROR
 );

117 
mu8EºKeySkù
 = 
TRUE
;

118  
TRUE
;

122 if–(
pLi°
+
i
)->
a˘i⁄Evít
[
KEY_ACTION_SHORT
] !
NULL
 )

124 
mu8Sound
 = (
pLi°
+
i
)->
a˘i⁄Evít
[
KEY_ACTION_SHORT
]();

125 
	`Sound
–
mu8Sound
 );

126  
TRUE
;

130 if–
	`IsSëKeyEvítFœg
–
KEY_EVENT_PUSHED_LONG_5S
 ) =
TRUE
 )

132 
	`CÀ¨KeyEvítFœg
–
KEY_EVENT_PUSHED_LONG_5S
 );

134 if–(
pLi°
+
i
)->
a˘i⁄Evít
[
KEY_ACTION_5_SEC
] !
NULL
 )

136 
mu8Sound
 = (
pLi°
+
i
)->
a˘i⁄Evít
[
KEY_ACTION_5_SEC
]();

137 
	`Sound
–
mu8Sound
 );

138  
TRUE
;

142 if–
	`IsSëKeyEvítFœg
–
KEY_EVENT_PUSHED_LONG_3S
 ) =
TRUE
 )

144 
	`CÀ¨KeyEvítFœg
–
KEY_EVENT_PUSHED_LONG_3S
 );

146 if–(
pLi°
+
i
)->
a˘i⁄Evít
[ 
KEY_ACTION_3_SEC
 ] !
NULL
 )

148 
mu8Sound
 = (
pLi°
+
i
)->
a˘i⁄Evít
[ 
KEY_ACTION_3_SEC
 ]();

149 
	`Sound
–
mu8Sound
 );

150  
TRUE
;

154 if–
	`IsSëKeyEvítFœg
–
KEY_EVENT_PUSHED_LONG_2S
 ) =
TRUE
 )

156 
	`CÀ¨KeyEvítFœg
–
KEY_EVENT_PUSHED_LONG_2S
 );

158 if–(
pLi°
+
i
)->
a˘i⁄Evít
[ 
KEY_ACTION_2_SEC
 ] !
NULL
 )

160 
mu8Sound
 = (
pLi°
+
i
)->
a˘i⁄Evít
[ 
KEY_ACTION_2_SEC
 ]();

161 
	`Sound
–
mu8Sound
 );

162  
TRUE
;

166 if–
	`IsSëKeyEvítFœg
–
KEY_EVENT_PUSHED_LONG_1S
 ) =
TRUE
 )

168 
	`CÀ¨KeyEvítFœg
–
KEY_EVENT_PUSHED_LONG_1S
 );

170 if–(
pLi°
+
i
)->
a˘i⁄Evít
[ 
KEY_ACTION_1_SEC
 ] !
NULL
 )

172 
mu8Sound
 = (
pLi°
+
i
)->
a˘i⁄Evít
[ 
KEY_ACTION_1_SEC
 ]();

173 
	`Sound
–
mu8Sound
 );

174  
TRUE
;

181  
FALSE
;

182 
	}
}

184 
	$Pro˚ssKeyEvítH™dÀr
()

186 
U8
 
mu8Rë
 = 
FALSE
;

187 
U16
 
mu16Dñay
 = 0;

188 
KeyVÆidFun_T
 
pKeyVÆidFun
 = 
NULL
;

189 
KeyEvítLi°_T
 *
pKeyEvítLi°
 = 
NULL
;

190 
U8
 
mu8KeyEvítSize
 = 0;

195 if–
	`GëDi•œyInô
(Ë=
FALSE
 )

206 if–
mu16Dñay
 != 0 )

208 
mu16Dñay
--;

213 if–
	`GëEﬁSètus
(Ë=
TRUE
 )

216 
pKeyVÆidFun
 = 
IsVÆidEﬁKeyC⁄dôi⁄
;

217 
pKeyEvítLi°
 = (
KeyEvítLi°_T
 *)
	`GëEﬁKeyEvítLi°
();

218 
mu8KeyEvítSize
 = 
	`GëEﬁKeyEvítLi°Size
();

220 if–
	`GëF˘Sètus
(Ë=
TRUE
 )

223 
pKeyVÆidFun
 = 
IsVÆidF˘KeyC⁄dôi⁄
;

224 
pKeyEvítLi°
 = (
KeyEvítLi°_T
 *)
	`GëF˘KeyEvítLi°
();

225 
mu8KeyEvítSize
 = 
	`GëF˘KeyEvítLi°Size
();

227 i‡–
	`GëS≥cülMode
(Ë!
SPECIAL_NONE
 )

229 
pKeyVÆidFun
 = 
IsVÆidS≥cülKeyC⁄dôi⁄
;

230 
pKeyEvítLi°
 = (
KeyEvítLi°_T
 *)
	`GëS≥cülKeyEvítLi°
();

231 
mu8KeyEvítSize
 = 
	`GëS≥cülKeyEvítLi°Size
();

236 
pKeyVÆidFun
 = 
IsVÆidKeyC⁄dôi⁄
;

237 
pKeyEvítLi°
 = (
KeyEvítLi°_T
 *)
	`GëKeyEvítLi°
();

238 
mu8KeyEvítSize
 = 
	`GëKeyEvítLi°Size
();

242 
mu8Rë
 = 
	`KeyEvítH™dÀr
–
pKeyVÆidFun
, 
pKeyEvítLi°
, 
mu8KeyEvítSize
 );

243 if–
mu8Rë
 =
TRUE
 )

247 
mu16Dñay
 = 30;

249 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\process_key.h

1 #i‚de‡
__PROCESS_KEY_H__


2 
	#__PROCESS_KEY_H__


	)

4 
	~"¥j_ty≥.h
"

6 
U32
 
GëS≥cülModeTime
 ( );

8 
Pro˚ssKeyEvítH™dÀr
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\main.c

1 
	~"mcu.h
"

3 
	~"hw.h
"

4 
	~"timî.h
"

5 
	~"utû.h
"

6 
	~"ì¥om.h
"

9 
	~"∑r£r.h
"

11 
	~"¥o˚ss_sys_evít.h
"

14 
	$InôSèπTimîs
( )

16 
	`InôTimî
();

18 
	`SèπTimî
–
TIMER_ID_1MS
, 1);

19 
	`SèπTimî
–
TIMER_ID_10MS
, 10);

20 
	`SèπTimî
–
TIMER_ID_100MS
, 100);

21 
	`SèπTimî
–
TIMER_ID_1SEC
, 
	`SEC
(1));

24 
	`SèπTimî
–
TIMER_ID_40SEC
, 
	`SEC
(600));

26 #i‡!
CONFIG_JIG_RBK_FRONT


27 
	`SèπTimî
–
TIMER_ID_DEBUG
, 100);

29 
	}
}

33 
	$maö
( )

36 
	`Dñay_MS
( 500 );

38 
	`R_WDT_Re°¨t
();

40 
	`InôSy°em
();

41 
	`InôSèπTimîs
();

42 
	`EI
();

45 
	`R_WDT_Re°¨t
();

46 
	`InôEïrom
();

50 
	`R_WDT_Re°¨t
();

52 
	`Pro˚ssEvítH™dÀr
();

55 
	`RecvPackëH™dÀr
();

56 
	`SídPackëH™dÀr
();

58 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\prj_type.h

1 #i‚de‡
__PRJ_TYPE_H__


2 
	#__PRJ_TYPE_H__


	)

4 
	~"c⁄fig.h
"

5 
	~<°dio.h
>

6 
	~<°rög.h
>

9 
	tU8
;

10 sig√d 
	tI8
;

11 
	tU16
;

12 sig√d 
	tI16
;

13 
	tU32
;

14 sig√d 
	tI32
;

15 
	tF32
;

16 
	tBOOL_T
;

17 
	tTIME_T
;

19 
	tTEMP_T
;

22 
	#__DEBUG__
 1

	)

24 #i‡
__DEBUG__


25 
	#LOCAL


	)

27 
	#LOCAL
 

	)

30 #ifde‡
NULL


31 #unde‡
NULL


34 
	#NULL
 ((*)0)

	)

36 #ifde‡
TRUE


37 #unde‡
TRUE


40 
	#TRUE
 1

	)

42 #ifde‡
FALSE


43 #unde‡
FALSE


46 
	#FALSE
 0

	)

49 #ifde‡
ON


50 #unde‡
ON


53 
	#ON
 1

	)

55 #ifde‡
OFF


56 #unde‡
OFF


59 
	#OFF
 0

	)

61 
	#HIGH
 1

	)

62 
	#LOW
 0

	)

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\process_sys_event.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

4 
	~"¥j_ty≥.h
"

5 
	~"timî.h
"

6 
	~"¥o˚ss_sys_evít.h
"

8 
	~"¥o˚ss_di•œy.h
"

9 
	~"ªœy.h
"

10 
	~"vÆve.h
"

11 
	~"pump.h
"

12 
	~"„ed_pump.h
"

13 
	~"ãmp.h
"

14 
	~"key.h
"

15 
	~"¥o˚ss_key.h
"

17 
	~"hÆ_£rül.h
"

18 
	~"hÆ_adc.h
"

19 
	~"hÆ_Àd.h
"

20 
	~"Di•œy.h
"

21 
	~"¥o˚ss_make.h
"

23 
	~"room_w©î.h
"

24 
	~"cﬁd_w©î.h
"

25 
	~"hŸ_w©î.h
"

26 
	~"ì¥om.h
"

28 
	~"îr‹.h
"

29 
	~"¥o˚ss_îr‹.h
"

31 
	~"eﬁ.h
"

32 
	~"¥o˚ss_eﬁ.h
"

33 
	~"f˘.h
"

34 
	~"¥o˚ss_f˘.h
"

35 
	~"time_sh‹t.h
"

37 
	~"•ecül_mode.h
"

38 
	~"auto_Êushög.h
"

40 
	~"∑r£r.h
"

43 (*
	tA˘i⁄_T
)();

44 
	s_sys_evít_


46 
U8
 
timîId
;

47 
A˘i⁄_T
 
pFun
;

48 
A˘i⁄_T
 
pFun_FCT
;

49 
A˘i⁄_T
 
pFun_EOL
;

50 } 
	tSysEvít_T
;

53 
	`INTT_Ba£Time_H™dÀr
 ( );

54 
	`Evt_1ms_H™dÀr
( );

55 
	`Evt_10ms_H™dÀr
( );

56 
	`Evt_100ms_H™dÀr
( );

57 
	`Evt_1£c_H™dÀr
( );

58 
	`Evt_40£c_H™dÀr
( );

59 
	`Evt_1mö_H™dÀr
( );

60 
	`Evt_Debug_H™dÀr
( );

63 
	`Evt_EOL_1ms_H™dÀr
();

64 
	`Evt_EOL_10ms_H™dÀr
();

65 
	`Evt_EOL_100ms_H™dÀr
();

66 
	`Evt_EOL_1£c_H™dÀr
( );

69 
	`Evt_FCT_1ms_H™dÀr
( );

70 
	`Evt_FCT_10ms_H™dÀr
( );

71 
	`Evt_FCT_100ms_H™dÀr
();

72 
	`Evt_FCT_1£c_H™dÀr
( );

74 c⁄° 
SysEvít_T
 
SysEvítLi°
[] =

77 { 
TIMER_ID_1MS
, 
Evt_1ms_H™dÀr
, 
Evt_FCT_1ms_H™dÀr
, 
Evt_EOL_1ms_H™dÀr
 },

78 { 
TIMER_ID_10MS
, 
Evt_10ms_H™dÀr
, 
Evt_FCT_10ms_H™dÀr
, 
Evt_EOL_10ms_H™dÀr
 },

79 { 
TIMER_ID_100MS
, 
Evt_100ms_H™dÀr
, 
Evt_FCT_100ms_H™dÀr
, 
Evt_EOL_100ms_H™dÀr
 },

80 { 
TIMER_ID_1SEC
, 
Evt_1£c_H™dÀr
, 
Evt_FCT_1£c_H™dÀr
, 
Evt_EOL_1£c_H™dÀr
 },

81 { 
TIMER_ID_40SEC
, 
Evt_40£c_H™dÀr
, 
NULL
, NULL },

84 #i‡
CONFIG_MMI


85 { 
TIMER_ID_DEBUG
, 
Evt_Debug_H™dÀr
, Evt_Debug_Handler, Evt_Debug_Handler },

87 
	}
};

88 
	#SZ_LIST
 ( –
SysEvítLi°
 ) / –
SysEvít_T
 ) )

	)

90 
	$Pro˚ssEvítH™dÀr
( )

92 
U8
 
i
;

93 
A˘i⁄_T
 
fun
;

95  
i
 = 0; i < 
SZ_LIST
 ; i++ )

97 if–
	`IsExpúedTimî
–
SysEvítLi°
[ 
i
 ].
timîId
 ) =
TIMER_EXPIRE
 )

100 
	`DißbÀTimî
–
SysEvítLi°
[ 
i
 ].
timîId
 );

103 if–
	`GëEﬁSètus
(Ë=
TRUE
 )

106 
fun
 = 
SysEvítLi°
[ 
i
 ].
pFun_EOL
;

108 if–
	`GëF˘Sètus
(Ë=
TRUE
 )

111 
fun
 = 
SysEvítLi°
[ 
i
 ].
pFun_FCT
;

116 
fun
 = 
SysEvítLi°
[ 
i
 ].
pFun
;

120 if–
fun
 !
NULL
 )

122 
	`fun
();

126 
	}
}

128 
	$INTT_Ba£Time_H™dÀr
 ( )

130 
U8
 
mu8KeyM©rixCou¡
;

132 
	`Evt_1m£c_LED_H™dÀr
();

134 
	}
}

136 
	$Evt_1ms_H™dÀr
( )

138 
	`SèπTimî
–
TIMER_ID_1MS
, 1);

140 
	`HAL_Pro˚ssAdc
();

141 
	}
}

144 
	$Evt_10ms_H™dÀr
( )

146 
	`SèπTimî
–
TIMER_ID_10MS
, 10);

150 
	`Pro˚ssSˇnKey
();

151 
	`Pro˚ssKeyEvítH™dÀr
();

153 
	`C⁄åﬁFìdPump
();

154 
	`C⁄åﬁVÆve
();

156 
	`C⁄åﬁRñayC⁄cuºít
();

158 
	`Evt_10m£c_Auto_Flushög_H™dÀr
();

159 
	}
}

162 
	$Evt_100ms_H™dÀr
()

164 
	`SèπTimî
–
TIMER_ID_100MS
, 100);

166 
	`Pro˚ssTemp
();

168 
	`Pro˚ssT™kLevñ
();

170 
	`C⁄åﬁRoomW©îLevñ
();

171 
	`C⁄åﬁCﬁdW©îLevñ
();

172 
	`C⁄åﬁHŸW©îLevñ
();

174 
	`Pro˚ssEº‹
();

175 
	`Pro˚ssDi•œy
();

177 
	`Upd©eEﬁTimî
();

178 
	`Upd©eFìdPumpTimî
();

179 
	}
}

182 
	$Evt_1£c_H™dÀr
( )

184 
	`SèπTimî
–
TIMER_ID_1SEC
, 
	`SEC
(1) );

186 #i‡
CONFIG_TEST_COLD_SENSOR


187 if–
	`GëCﬁdW©îC⁄figMake
(Ë=
TRUE
 )

189 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 
DEFAULT_TEMP_READ_TIME
 );

194 
	`MakeCﬁdW©î
();

197 
	`MakeHŸW©î
();

198 
	`Pro˚ssUnu£dSavög
();

201 
	`Pro˚ssMake
();

203 
	`C⁄åﬁRñayEx˛usive
();

207 
	`Pro˚ssEïrom
();

209 
	`Upd©eF˘Timî
();

212 
	`Pro˚ssS≥cülMode
();

215 
	`Upd©eTimeSh‹tTimî
();

216 
	`Pro˚ssTimeSh‹t
();

217 
	}
}

219 
	$Evt_40£c_H™dÀr
( )

221 
	`SèπTimî
–
TIMER_ID_40SEC
, 
	`SEC
(40) );

224 if–
	`GëCﬁdW©îC⁄figMake
(Ë=
TRUE
 )

226 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 
DEFAULT_TEMP_READ_TIME
 );

228 
	}
}

230 
	$Evt_1mö_H™dÀr
( )

232 
	`SèπTimî
–
TIMER_ID_1MIN
, 
	`SEC
(60) );

233 
	}
}

235 
	$Evt_Debug_H™dÀr
( )

237 
	`SèπTimî
–
TIMER_ID_COMM_DEBUG_TX
, 0 );

238 
	`SèπTimî
–
TIMER_ID_DEBUG
, 150 );

240 
	}
}

242 
	$InôSy°em
()

245 
	`InôRñay
();

246 
	`InôVÆve
();

247 
	`InôKey
();

248 
	`HAL_InôComm
();

249 
	`HAL_InôAdc
();

250 
	`HAL_InôLed
();

252 
	`InôDi•œy
();

253 
	`InôFìdPump
();

256 
	`InôRoomW©î
();

257 
	`InôCﬁdW©î
();

258 
	`InôHŸW©î
();

261 
	`InôEº‹Li°
();

263 
	`InôPro˚ssMake
();

265 
	`InôEﬁ
();

266 
	`InôF˘
();

267 
	`InôTimeSh‹t
();

270 
	`InôS≥iˇlMode
();

273 
	`InôAutoFlushög
();

276 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 
DEFAULT_INIT_TEMP_READ_TIME
 );

279 
	`Regi°îTimîISR
–
INTT_Ba£Time_H™dÀr
 );

280 
	}
}

282 
	$Evt_FCT_1ms_H™dÀr
( )

284 
	`SèπTimî
–
TIMER_ID_1MS
, 1);

286 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 
DEFAULT_INIT_TEMP_READ_TIME
 );

288 
	`HAL_Pro˚ssAdc
();

289 
	}
}

291 
	$Evt_EOL_1ms_H™dÀr
()

293 
	`SèπTimî
–
TIMER_ID_1MS
, 1);

295 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 
DEFAULT_INIT_TEMP_READ_TIME
 );

297 
	`HAL_Pro˚ssAdc
();

298 
	}
}

300 
	$Evt_EOL_10ms_H™dÀr
()

302 
U8
 
mu8EﬁMode
;

304 
	`SèπTimî
–
TIMER_ID_10MS
, 10);

307 
	`Pro˚ssSˇnKey
();

308 
	`Pro˚ssKeyEvítH™dÀr
();

310 
	`C⁄åﬁPumpEﬁ
();

311 
	`C⁄åﬁVÆve
();

313 
	`C⁄åﬁRñayC⁄cuºít
();

315 
	`Evt_10m£c_Auto_Flushög_H™dÀr
();

316 
	}
}

318 
	$Evt_EOL_100ms_H™dÀr
()

320 
	`SèπTimî
–
TIMER_ID_100MS
, 100);

322 
	`Pro˚ssT™kLevñ
();

324 
	`Pro˚ssDi•œy
();

327 
	`Upd©eEﬁTimî
();

328 
	`Pro˚ssEﬁ
();

330 
	`Upd©eFìdPumpTimî
();

332 
	`C⁄åﬁRñayEx˛usive
();

333 
	}
}

336 
	$Evt_EOL_1£c_H™dÀr
( )

338 
	`SèπTimî
–
TIMER_ID_1SEC
, 
	`SEC
(1) );

342 
	}
}

346 
	$Evt_FCT_10ms_H™dÀr
( )

348 
	`SèπTimî
–
TIMER_ID_10MS
, 10);

351 
	`Pro˚ssSˇnKey
();

352 
	`Pro˚ssKeyEvítH™dÀr
();

354 
	`Pro˚ssF˘LﬂdTe°
();

356 
	`C⁄åﬁVÆve
();

357 
	}
}

360 
	$Evt_FCT_100ms_H™dÀr
()

362 
	`SèπTimî
–
TIMER_ID_100MS
, 100);

363 
	}
}

365 
	$Evt_FCT_1£c_H™dÀr
( )

367 
	`SèπTimî
–
TIMER_ID_1SEC
, 
	`SEC
(1) );

369 
	`Upd©eF˘Timî
();

370 
	`C⁄åﬁRñayEx˛usive
();

371 
	`C⁄åﬁRñayC⁄cuºít
();

373 
	`Pro˚ssF˘
();

374 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\process_sys_event.h

1 #i‚de‡
__PROCESS_SYS_EVENT_H__


2 
	#__PROCESS_SYS_EVENT_H__


	)

4 
InôSy°em
();

6 
Pro˚ssEvítH™dÀr
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\level.c

1 
	~"Àvñ.h
"

3 
	#DETECT_TIME
 30

	)

6 
	$U8
(*
	tA˘i⁄_T
)();

7 
	s_Àvñ_li°_


9 
U8
 
PªLevñ
;

10 
U8
 
CurLevñ
;

11 
U8
 
SëDëe˘Time
;

12 
U8
 
Dëe˘Time
;

13 
U8
 
EºCou¡
[ 
ERR_TYPE_NUM
 ];

14 
A˘i⁄_T
 
GëLevñ
;

15 } 
	tLevñLi°_T
;

17 
LevñLi°_T
 
LevñLi°
[ 
MAX_LEVEL_ID
 ] =

19 { 0, 0, 
DETECT_TIME
, DETECT_TIME, { 0, 0, 0, 0 }, 
HAL_GëLevñRoomT™k
 },

20 { 0, 0, 
DETECT_TIME
, DETECT_TIME, { 0, 0, 0, 0 }, 
HAL_GëLevñCﬁdT™k
 },

21 { 0, 0, 
DETECT_TIME
, DETECT_TIME, { 0, 0, 0, 0 }, 
HAL_GëLevñHŸT™k
 }

22 
	}
};

26 
	$InôT™kC⁄fDëe˘Time
()

28 
	`SëT™kC⁄fDëe˘Time
–
LEVEL_ID_ROOM
 , 
DETECT_TIME
 );

29 
	`SëT™kC⁄fDëe˘Time
–
LEVEL_ID_COLD
, 
DETECT_TIME
 );

30 
	`SëT™kC⁄fDëe˘Time
–
LEVEL_ID_HOT
, 
DETECT_TIME
 );

31 
	}
}

34 
	$SëT™kC⁄fDëe˘Time
(
U8
 
mu8Id
, U8 
mu16Dëe˘Time
)

36 
LevñLi°
[ 
mu8Id
 ].
SëDëe˘Time
 = 
mu16Dëe˘Time
;

37 
	}
}

40 
U8
 
	$GëT™kLevñ
(
U8
 
mu8Id
)

42  
LevñLi°
[ 
mu8Id
 ].
CurLevñ
;

43 
	}
}

46 
U8
 
	$IsDëe˘T™kLevñ
(
U8
 
mu8Id
, U8 
mu8Levñ
)

48 if–(
LevñLi°
[ 
mu8Id
 ].
CurLevñ
 & 
mu8Levñ
) == mu8Level )

50  
TRUE
;

53  
FALSE
;

54 
	}
}

56 
U8
 
	$IsT™kLevñFuŒ
(
U8
 
mu8Id
)

58 
U8
 
mu8Rë
 = 
FALSE
;

59 
U8
 
mu8Levñ
;

62 
mu8Levñ
 = 
	`GëT™kLevñ
–
mu8Id
 );

63  
mu8Levñ
 )

66 
LEVEL_HIGH
:

67 
LEVEL_ERR_LOW
:

68 
LEVEL_ERR_HIGH
:

69 
LEVEL_ERR_COMPLEX
:

70 
LEVEL_ERR_OVF_LOW
:

71 
LEVEL_OVF
:

72 
mu8Rë
 = 
TRUE
;

75 
LEVEL_LOW
:

76 
LEVEL_MID
:

78 
mu8Rë
 = 
FALSE
;

82  
mu8Rë
;

83 
	}
}

86 
U8
 
	$IsEº‹T™kLevñ
(
U8
 
mu8Levñ
)

88 if–
mu8Levñ
 =
LEVEL_OVF


89 || 
mu8Levñ
 =
LEVEL_ERR_OVF_LOW


90 || 
mu8Levñ
 =
LEVEL_ERR_HIGH


91 || 
mu8Levñ
 =
LEVEL_ERR_COMPLEX


92 || 
mu8Levñ
 =
LEVEL_ERR_LOW
 )

94  
TRUE
;

97  
FALSE
;

98 
	}
}

101 
U8
 
	$GëT™kLevñEº‹Cou¡
(
U8
 
mu8Id
, U8 
mu8EºTy≥
)

103  
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
mu8EºTy≥
 ];

104 
	}
}

106 
	$SëT™kLevñEº‹Cou¡
(
U8
 
mu8Id
, U8 
mu8EºTy≥
, U8 
mu8Cou¡
)

108 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
mu8EºTy≥
 ] = 
mu8Cou¡
;

109 
	}
}

113 
	$Cou¡Eº‹Ty≥
(
U8
 
mu8Id
, U8 
mu8Levñ
 )

115  
mu8Levñ
 )

117 
LEVEL_ERR_LOW
:

118 
LEVEL_ERR_OVF_LOW
:

119 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_LOW
 ]++;

120 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_HIGH
 ] = 0;

123 
LEVEL_ERR_COMPLEX
:

124 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_COMPLEX
 ]++;

125 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_HIGH
 ] = 0;

128 
LEVEL_ERR_HIGH
:

129 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_HIGH
 ]++;

130 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_LOW
 ] = 0;

133 
LEVEL_OVF
:

134 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_OVF
 ]++;

136 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_LOW
 ] = 0;

137 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_COMPLEX
 ] = 0;

138 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_HIGH
 ] = 0;

141 
LEVEL_HIGH
:

142 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_LOW
 ] = 0;

143 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_COMPLEX
 ] = 0;

144 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_HIGH
 ] = 0;

147 
LEVEL_MID
:

148 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_LOW
 ] = 0;

151 
LEVEL_LOW
:

152 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_LOW
 ] = 0;

153 
LevñLi°
[ 
mu8Id
 ].
EºCou¡
[ 
ERR_TYPE_OVF
 ] = 0;

159 
	}
}

161 
	$Pro˚ssT™kLevñ
()

163 
U8
 
i
;

164 
U8
 
mu8Levñ
;

166  
i
 = 0; i < 
MAX_LEVEL_ID
 ; i++ )

169 
mu8Levñ
 = 
LevñLi°
[ 
i
 ].
	`GëLevñ
();

170 if–
LevñLi°
[ 
i
 ].
PªLevñ
 !
mu8Levñ
 )

173 
LevñLi°
[ 
i
 ].
PªLevñ
 = 
mu8Levñ
;

174 
LevñLi°
[ 
i
 ].
Dëe˘Time
 = LevñLi°[i].
SëDëe˘Time
;

178 if–
LevñLi°
[ 
i
 ].
Dëe˘Time
 != 0 )

180 
LevñLi°
[ 
i
 ].
Dëe˘Time
--;

184 if–
LevñLi°
[ 
i
 ].
CurLevñ
 !
mu8Levñ
 )

187 
	`Cou¡Eº‹Ty≥
–
i
, 
mu8Levñ
 );

191 
LevñLi°
[ 
i
 ].
CurLevñ
 = 
mu8Levñ
;

193 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\level.h

1 #i‚de‡
__LEVEL_H__


2 
	#__LEVEL_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"hÆ_Àvñ.h
"

9 
	#LEVEL_LOW
 
HAL_LEVEL_LOW


	)

10 
	#LEVEL_MID
 
HAL_LEVEL_MID


	)

11 
	#LEVEL_ERR_LOW
 
HAL_LEVEL_ERR_LOW


	)

12 
	#LEVEL_HIGH
 
HAL_LEVEL_HIGH


	)

13 
	#LEVEL_ERR_COMPLEX
 
HAL_LEVEL_ERR_COMPLEX


	)

14 
	#LEVEL_ERR_HIGH
 
HAL_LEVEL_ERR_HIGH


	)

15 
	#LEVEL_ERR_OVF_LOW
 
HAL_LEVEL_ERR_OVF_LOW


	)

16 
	#LEVEL_OVF
 
HAL_LEVEL_OVF


	)

19 
	#ERR_TYPE_LOW
 0

	)

20 
	#ERR_TYPE_COMPLEX
 1

	)

21 
	#ERR_TYPE_HIGH
 2

	)

22 
	#ERR_TYPE_OVF
 3

	)

23 
	#ERR_TYPE_NUM
 4

	)

26 
InôT™kC⁄fDëe˘Time
();

29 
SëT™kC⁄fDëe˘Time
(
U8
 
mu8Id
, U8 
mu16Dëe˘Time
);

31 
U8
 
GëT™kLevñEº‹Cou¡
(U8 
mu8Id
, U8 
mu8EºTy≥
);

32 
SëT™kLevñEº‹Cou¡
(
U8
 
mu8Id
, U8 
mu8EºTy≥
, U8 
mu8Cou¡
);

35 
	#LEVEL_ID_ROOM
 0

	)

36 
	#LEVEL_ID_COLD
 1

	)

37 
	#LEVEL_ID_HOT
 2

	)

38 
	#MAX_LEVEL_ID
 3

	)

39 
U8
 
GëT™kLevñ
(U8 
mu8Id
);

45 
U8
 
IsDëe˘T™kLevñ
(U8 
mu8Id
, U8 
mu8Levñ
);

51 
U8
 
IsT™kLevñFuŒ
(U8 
mu8Id
);

57 
U8
 
IsEº‹T™kLevñ
(U8 
mu8Levñ
);

60 
Pro˚ssT™kLevñ
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\level_electrode.c

6 
	~"hw.h
"

7 
	~"Àvñ_ñe˘rode.h
"

9 
	~"≠i_adc.h
"

11 
	$E«lbeLevñEÀc
()

13 
	`TURN_OFF_LEVEL_HOT_TANK_DIRECTION_1
();

14 
	`TURN_OFF_LEVEL_HOT_TANK_DIRECTION_2
();

15 
	}
}

17 
	$DißbÀLevñEÀc
()

19 
	`TURN_ON_LEVEL_HOT_TANK_DIRECTION_1
();

20 
	`TURN_ON_LEVEL_HOT_TANK_DIRECTION_2
();

21 
	}
}

23 
U8
 
	$IsTu∫OnLevñEÀc
()

25 if––
	`GET_STATUS_LEVEL_HOT_TANK_DIRECTION_1
(Ë=
LOW
 )

26 && ( 
	`GET_STATUS_LEVEL_HOT_TANK_DIRECTION_1
(Ë=
LOW
 ) )

28  
TRUE
;

31  
FALSE
;

32 
	}
}

36 
	$SèπMesuªAdc
–
U8
 
xUid
 )

38 
	`Tu∫OnSísögAdc
(
xUid
);

39 
	}
}

41 
	$St›MesuªAdc
–
U8
 
xUid
 )

43 
	`Tu∫OffSísögAdc
(
xUid
);

44 
	}
}

47 
	#POWER_SWAP_CYCLE
 (100U)

48 
	#LEVEL_DETECT_TIME
 (10U)

49 

	)

50 (*
	tPFA˘i⁄_T
)();

51 (*
	tPFGë_T
)();

52 
	s_Àvñ_ñec_pwr_


54 
U8
 
mEadcId
;

55 
U16
 
mUpowîOnSw≠C¡
;

56 
U16
 
mUpowîOffSw≠C¡
;

57 
U16
 
mUpowîSw≠Cy˛e
;

58 } 
	tSLevñEÀcPwr_T
;

60 
SLevñEÀcPwr_T
 
gStAºLevñEÀcPwrLi°
[] =

62 { 
ADC_ID_LEVEL_HOT_TANK_FB
, 0, 0, 
POWER_SWAP_CYCLE
 },

64 
	}
};

66 
	#SZ_LEVEL_ELEC_PWR_LIST
 ((
gStAºLevñEÀcPwrLi°
)/(
SLevñEÀcPwr_T
))

	)

68 
	$SˇnLevñEÀc
()

70 
U8
 
uIndex
 = 0U;

71 
SLevñEÀcPwr_T
 *
gStPåLevñEÀcPwrLi°
;

73  
uIndex
=0; uIndex<
SZ_LEVEL_ELEC_PWR_LIST
; uIndex++ )

75 
gStPåLevñEÀcPwrLi°
 = &
gStAºLevñEÀcPwrLi°
[
uIndex
];

77 if–
gStPåLevñEÀcPwrLi°
->
mUpowîOffSw≠C¡
 != 0 )

79 
gStPåLevñEÀcPwrLi°
->
mUpowîOffSw≠C¡
--;

83 if–
gStPåLevñEÀcPwrLi°
->
mUpowîOnSw≠C¡
 != 0 )

85 
gStPåLevñEÀcPwrLi°
->
mUpowîOnSw≠C¡
--;

87 if–
	`IsOnOffSísögAdc
(
gStPåLevñEÀcPwrLi°
->
mEadcId
Ë=
OFF
 )

89 
	`SèπMesuªAdc
(
gStPåLevñEÀcPwrLi°
->
mEadcId
);

94 
gStPåLevñEÀcPwrLi°
->
mUpowîOnSw≠C¡
 = gStPåLevñEÀcPwrLi°->
mUpowîSw≠Cy˛e
;

95 
gStPåLevñEÀcPwrLi°
->
mUpowîOffSw≠C¡
 = gStPåLevñEÀcPwrLi°->
mUpowîSw≠Cy˛e
;

97 if–
	`IsOnOffSísögAdc
(
gStPåLevñEÀcPwrLi°
->
mEadcId
Ë=
ON
 )

99 
	`St›MesuªAdc
(
gStPåLevñEÀcPwrLi°
->
mEadcId
);

103 
	}
}

106 
	#THRESHOLD_HISTERESIS
 (20U)

107 
	#THRESHOLD_HOT_TANK
 (700U)

108 
	s_Àvñ_ñe˘rode_


	)

110 
EAdcId_T
 
	mmEadcId
;

111 
ELevñSètus
 
	mmEPªSètus
;

112 
ELevñSètus
 
	mmE°©us
;

113 
U16
 
	mmUadcD©a
;

114 
U16
 
	mmUDëe˘TimeC¡
;

115 
U16
 
	mmUSëDëe˘Time
;

116 
U16
 
	mmUthªshﬁd
;

117 } 
	tSLevñEÀ˘rode_T
;

119 
SLevñEÀ˘rode_T
 
	ggStAºLevñEÀcLi°
[] =

123 { 
ADC_ID_LEVEL_HOT_TANK_FB
, 0, 0, 0, 
LEVEL_DETECT_TIME
, LEVEL_DETECT_TIME, 
THRESHOLD_HOT_TANK
 },

127 
	#SZ_LEVEL_ELEC_LIST
 ((
gStAºLevñEÀcLi°
)/(
SLevñEÀ˘rode_T
))

	)

129 
	$SëLevñEÀcSètus
–
ELevñEÀcId
 
xUid
, 
ELevñSètus
 
xE°©us
 )

131 
gStAºLevñEÀcLi°
[
xUid
].
mE°©us
 = 
xE°©us
;

132 
	}
}

134 
ELevñSètus
 
	$GëLevñEÀcSètus
–
ELevñEÀcId
 
xUid
 )

136  
gStAºLevñEÀcLi°
[
xUid
].
mE°©us
;

137 
	}
}

139 
ELevñSètus
 
	$Gë_Adc2Sètus
–
ELevñEÀcId
 
xUid
, 
U16
 
xUthªshﬁd
 )

142 if–
gStAºLevñEÀcLi°
[
xUid
].
mUadcD©a
 >
xUthªshﬁd
 )

144 if–
gStAºLevñEÀcLi°
[
xUid
].
mUadcD©a
 >–gStAºLevñEÀcLi°[xUid].
mUthªshﬁd
 + 
THRESHOLD_HISTERESIS
 ) )

146  
LEVEL_STATUS_UNDETECT
;

151 if–
gStAºLevñEÀcLi°
[
xUid
].
mUadcD©a
 < ( gStAºLevñEÀcLi°[xUid].
mUthªshﬁd
 - 
THRESHOLD_HISTERESIS
 ) )

153  
LEVEL_STATUS_DETECT
;

157  
LEVEL_STATUS_NONE
;

158 
	}
}

160 
	$C⁄åﬁLevñEÀc
()

162 
U8
 
uIndex
 = 0U;

163 
ELevñSètus
 
eSètus
 = 
LEVEL_STATUS_NONE
;

164 
SLevñEÀ˘rode_T
 *
gStPåLevñEÀcLi°
;

166  
uIndex
 =0; uIndex<
SZ_LEVEL_ELEC_LIST
; uIndex++ )

168 
gStPåLevñEÀcLi°
 = &
gStAºLevñEÀcLi°
[
uIndex
];

170 
gStPåLevñEÀcLi°
->
mUadcD©a
 = 
	`GëAdcD©a
(gStPåLevñEÀcLi°->
mEadcId
);

171 
eSètus
 = 
	`Gë_Adc2Sètus
–
uIndex
, 
gStPåLevñEÀcLi°
->
mUthªshﬁd
);

173 if–
gStPåLevñEÀcLi°
->
mEPªSètus
 !
eSètus
)

175 
gStPåLevñEÀcLi°
->
mEPªSètus
 = 
eSètus
;

176 
gStPåLevñEÀcLi°
->
mUDëe˘TimeC¡
 = gStPåLevñEÀcLi°->
mUSëDëe˘Time
;

179 if–
gStPåLevñEÀcLi°
->
mUDëe˘TimeC¡
 != 0 )

181 
gStPåLevñEÀcLi°
->
mUDëe˘TimeC¡
--;

186 
	`SëLevñEÀcSètus
(
uIndex
, 
eSètus
);

190 
	}
}

192 
	$Pro˚ssLevñEÀc
()

194 
	`C⁄åﬁLevñEÀc
();

195 
	}
}

197 
	$Pro˚ssSˇnLevñEÀc
()

199 
	`SˇnLevñEÀc
();

200 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\level_electrode.h

6 #i‚de‡
__LEVEL_ELECTRODE_H__


7 
	#__LEVEL_ELECTRODE_H__


	)

9 
	~"¥j_ty≥.h
"

12 
	e_Àvñ_ñec_id_


14 
	mLEVEL_ELEC_ID_HOT_TANK
 = 0,

15 
	mLEVEL_ELEC_ID_MAX
,

16 } 
	tELevñEÀcId
;

18 
	e_Àvñ_°©us_


20 
	mLEVEL_STATUS_NONE
 = 0,

21 
	mLEVEL_STATUS_UNDETECT
,

22 
	mLEVEL_STATUS_DETECT
,

23 } 
	tELevñSètus
;

25 
E«lbeLevñEÀc
();

26 
DißbÀLevñEÀc
();

27 
U8
 
IsTu∫OnLevñEÀc
();

29 
SëLevñEÀcSètus
–
ELevñEÀcId
 
xUid
, 
ELevñSètus
 
xE°©us
 );

30 
ELevñSètus
 
GëLevñEÀcSètus
–
ELevñEÀcId
 
xUid
 );

32 
Pro˚ssLevñEÀc
();

33 
Pro˚ssSˇnLevñEÀc
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\temp.c

1 
	~"≠i_adc.h
"

2 
	~"ãmp.h
"

3 
	~"ãmp_èbÀ.h
"

5 
	$TEMP_T
(*
	tA˘i⁄_T
)(
	tU16
 
	tmu16Adc
);

6 
	s_ãmp_li°_


8 
U8
 
Id
;

9 
A˘i⁄_T
 
C⁄vAdc2Temp
;

11 
U8
 
OvîrideFœg
;

12 
TEMP_T
 
OvîrideTemp
;

14 
U32
 
TimeOut
;

15 } 
	tTempLi°_T
;

17 
TempLi°_T
 
TempLi°
[] =

19 { 
ADC_ID_TEMP_COLD_WATER_FB
, 
C⁄vAdc2Temp_CﬁdW©î
, 
FALSE
, 24.0f, 0 },

20 { 
ADC_ID_TEMP_HOT_WATER_FB
, 
C⁄vAdc2Temp_HŸW©î
, 
FALSE
, 24.0f, 0 }

21 
	}
};

22 
	#SZ_LIST
 ( –
TempLi°
 ) / –
TempLi°_T
 ))

	)

24 
U8
 
	$C⁄vAdc2Temp
–
U8
 
mu8Id
, 
U16
 
mu16AdcRaw
, 
TEMP_T
 *
pTemp
 )

26 if–
pTemp
 =
NULL
 )

28  
FALSE
;

31 if–
TempLi°
[ 
mu8Id
 ].
C⁄vAdc2Temp
 !
NULL
 )

33 *
pTemp
 = 
TempLi°
[ 
mu8Id
 ].
	`C⁄vAdc2Temp
–
mu16AdcRaw
 );

35  
TRUE
;

38  
FALSE
;

39 
	}
}

41 
TEMP_T
 
	$GëTemp
(
U8
 
mu8Id
 )

43 
U16
 
mu16Adc
 = 0U;

44 
TEMP_T
 
mTemp
 = 0.0f;

48 if–
mu8Id
 >
TEMP_ID_MAX
 )

54 
mu16Adc
 = 
	`GëAdcD©a
–
TempLi°
[ 
mu8Id
 ].
Id
 );

57 
	`C⁄vAdc2Temp
–
mu8Id
, 
mu16Adc
, &
mTemp
 );

60 if–
TempLi°
[ 
mu8Id
 ].
OvîrideFœg
 =
TRUE
 )

62  
TempLi°
[ 
mu8Id
 ].
OvîrideTemp
;

65  
mTemp
;

66 
	}
}

68 
U16
 
	$GëTempSís‹Time
(
U8
 
mu8Id
)

70  (
U16
)–
TempLi°
[ 
mu8Id
 ].
TimeOut
 / 10UL );

71 
	}
}

74 
	$Tu∫OnTempSís‹
(
U8
 
mu8Id
, 
U16
 
mu16TimeOut
)

76 
U32
 
mu32Time
;

79 
mu32Time
 = (
U32
)
mu16TimeOut
 * 10UL;

80 if–
mu32Time
 > 
TempLi°
[ 
mu8Id
 ].
TimeOut
 )

82 
	`Tu∫OnSísögAdc
–
TempLi°
[ 
mu8Id
 ].
Id
 );

83 
TempLi°
[ 
mu8Id
 ].
TimeOut
 = 
mu32Time
;

85 
	}
}

87 
	$Tu∫OffTempSís‹
(
U8
 
mu8Id
)

89 
	`Tu∫OffSísögAdc
–
TempLi°
[ 
mu8Id
 ].
Id
 );

90 
TempLi°
[ 
mu8Id
 ].
TimeOut
 = 0;

91 
	}
}

95 
	$SëOvîrideTemp
(
U8
 
mu8Id
, U8 
mOvîride
, 
TEMP_T
 
mTemp
 )

97 
TempLi°
[ 
mu8Id
 ].
OvîrideFœg
 = 
mOvîride
;

98 
TempLi°
[ 
mu8Id
 ].
OvîrideTemp
 = 
mTemp
;

100 
	}
}

102 
TEMP_T
 
	$GëOvîrideTemp
(
U8
 
mu8Id
, U8 
mOvîride
 )

104  
TempLi°
[ 
mu8Id
 ].
OvîrideTemp
 = 
mOvîride
;

105 
	}
}

107 
TEMP_T
 
	ggTempCﬁd
 = 24.0f;

108 
TEMP_T
 
	ggTempHŸ
 = 24.0f;

109 
	$Pro˚ssTemp
()

111 
U8
 
i
;

113  
i
 = 0; i < 
SZ_LIST
; i++ )

115 if–
TempLi°
[ 
i
 ].
TimeOut
 != 0UL )

117 
TempLi°
[ 
i
 ].
TimeOut
--;

118 if–
TempLi°
[ 
i
 ].
TimeOut
 == 0UL )

120 
	`Tu∫OffTempSís‹
–
i
 );

126 
gTempCﬁd
 = 
	`GëTemp
–
TEMP_ID_COLD_WATER
 );

127 
gTempHŸ
 = 
	`GëTemp
–
TEMP_ID_HOT_WATER
 );

128 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\temp.h

1 #i‚de‡
__TEMP_H__


2 
	#__TEMP_H__


	)

4 
	~"¥j_ty≥.h
"

6 
	#TEMP_ID_COLD_WATER
 0

	)

7 
	#TEMP_ID_HOT_WATER
 1

	)

8 
	#TEMP_ID_MAX
 2

	)

11 
	#DEFAULT_INIT_TEMP_READ_TIME
 600U

12 
	#DEFAULT_TEMP_READ_TIME
 10U

13 

	)

14 
TEMP_T
 
GëTemp
(
U8
 
id
);

18 
U16
 
GëTempSís‹Time
(
U8
 
mu8Id
);

22 
Tu∫OnTempSís‹
(
U8
 
mu8Id
, 
U16
 
mu16TimeOut
);

23 
Tu∫OffTempSís‹
(
U8
 
mu8Id
);

26 
SëOvîrideTemp
(
U8
 
mu8Id
, U8 
mOvîride
, 
TEMP_T
 
mTemp
 );

27 
TEMP_T
 
GëOvîrideTemp
(
U8
 
mu8Id
, U8 
mOvîride
 );

29 
Pro˚ssTemp
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\temp_table.c

1 
	~"ãmp_èbÀ.h
"

16 #i‡
CONFIG_TEMP_TABLE_HOT


17 
	#MIN_ADC_HOT_WATER
 25

	)

18 
	#MAX_ADC_HOT_WATER
 855

	)

20 c⁄° 
	gãmp_hŸ_w©î_èbÀ
[] =

108 
TEMP_T
 
	$C⁄vAdc2Temp_HŸW©î
(
U16
 
mu16Adc
)

110 
U16
 
mu16Index
;

112 if–
mu16Adc
 < 
MIN_ADC_HOT_WATER
 )

117 if–
mu16Adc
 > 
MAX_ADC_HOT_WATER
 )

122 
mu16Index
 = 
mu16Adc
 - 
MIN_ADC_HOT_WATER
;

123  
ãmp_hŸ_w©î_èbÀ
[ 
mu16Index
 ];

124 
	}
}

125 #ñi‡
CONFIG_TEMP_TABLE_HOT_15K


127 
	#MIN_ADC_HOT_WATER
 6

	)

128 
	#MAX_ADC_HOT_WATER
 540

	)

129 c⁄° 
	gãmp_hŸ_w©î_èbÀ
[] =

187 
TEMP_T
 
	$C⁄vAdc2Temp_HŸW©î
(
U16
 
mu16Adc
)

189 
U16
 
mu16Index
;

191 if–
mu16Adc
 < 
MIN_ADC_HOT_WATER
 )

196 if–
mu16Adc
 > 
MAX_ADC_HOT_WATER
 )

201 
mu16Index
 = 
mu16Adc
 - 
MIN_ADC_HOT_WATER
;

202  
ãmp_hŸ_w©î_èbÀ
[ 
mu16Index
 ];

203 
	}
}

223 #i‡
CONFIG_TEMP_TABLE_AMBIENT


225 
	#MIN_ADC_AMBIENT_TEMP
 14

	)

226 
	#MAX_ADC_AMBIENT_TEMP
 958

	)

228 c⁄° 
	gãmp_ambõ¡_èbÀ
[] =

327 
TEMP_T
 
	$C⁄vAdc2Temp_Ambõ¡
(
U16
 
mu16Adc
)

329 
U16
 
mu16Index
;

331 if–
mu16Adc
 < 
MIN_ADC_AMBIENT_TEMP
 )

336 if–
mu16Adc
 > 
MAX_ADC_AMBIENT_TEMP
 )

341 
mu16Index
 = 
mu16Adc
 - 
MIN_ADC_AMBIENT_TEMP
;

342  
ãmp_ambõ¡_èbÀ
[ 
mu16Index
 ];

343 
	}
}

360 #i‡
CONFIG_TEMP_TABLE_EVA


362 
	#MIN_ADC_EVA_TEMP
 24

	)

363 
	#MAX_ADC_EVA_TEMP
 985

	)

364 c⁄° 
	gãmp_eva_èbÀ
[] =

465 
TEMP_T
 
	$C⁄vAdc2Temp_Eva
(
U16
 
mu16Adc
)

467 
U16
 
mu16Index
;

469 if–
mu16Adc
 < 
MIN_ADC_EVA_TEMP
 )

474 if–
mu16Adc
 > 
MAX_ADC_EVA_TEMP
 )

479 
mu16Index
 = 
mu16Adc
 - 
MIN_ADC_EVA_TEMP
;

480  
ãmp_eva_èbÀ
[ 
mu16Index
 ];

481 
	}
}

498 #i‡
CONFIG_TEMP_TABLE_COLD


500 
	#MIN_ADC_COLD_WATER
 32

	)

501 
	#MAX_ADC_COLD_WATER
 984

	)

503 c⁄° 
	gãmp_cﬁd_w©î_èbÀ
[] =

603 
TEMP_T
 
	$C⁄vAdc2Temp_CﬁdW©î
(
U16
 
mu16Adc
)

605 
U16
 
mu16Index
;

607 if–
mu16Adc
 < 
MIN_ADC_COLD_WATER
 )

612 if–
mu16Adc
 > 
MAX_ADC_COLD_WATER
 )

617 
mu16Index
 = 
mu16Adc
 - 
MIN_ADC_COLD_WATER
;

618  
ãmp_cﬁd_w©î_èbÀ
[ 
mu16Index
 ];

619 
	}
}

623 #i‡
CONFIG_TEMP_TABLE_ROOM


624 
TEMP_T
 
	$C⁄vAdc2Temp_RoomW©î
(
U16
 
mu16Adc
)

626  
	`C⁄vAdc2Temp_CﬁdW©î
–
mu16Adc
 );

627 
	}
}

642 #i‡
CONFIG_TEMP_TABLE_TDS


643 
	#MIN_ADC_TDS
 256

	)

644 
	#MAX_ADC_TDS
 930

	)

646 c⁄° 
	gãmp_tds_èbÀ
[] =

718 
TEMP_T
 
	$C⁄vAdc2Temp_TDSIn
(
U16
 
mu16Adc
)

720 
U16
 
mu16Index
;

722 if–
mu16Adc
 < 
MIN_ADC_TDS
 )

727 if–
mu16Adc
 > 
MAX_ADC_TDS
 )

732 
mu16Index
 = 
mu16Adc
 - 
MIN_ADC_TDS
;

733  
ãmp_tds_èbÀ
[ 
mu16Index
 ];

734 
	}
}

736 
TEMP_T
 
	$C⁄vAdc2Temp_TDSOut
(
U16
 
mu16Adc
)

738  
	`C⁄vAdc2Temp_TDSIn
–
mu16Adc
 );

739 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\temp_table.h

1 #i‚de‡
__TEMP_TABLE_H__


2 
	#__TEMP_TABLE_H__


	)

4 
	~"¥j_ty≥.h
"

6 
	#CONFIG_TEMP_TABLE_HOT
 1

7 
	#CONFIG_TEMP_TABLE_HOT_15K
 0

8 
	#CONFIG_TEMP_TABLE_AMBIENT
 0

	)

9 
	#CONFIG_TEMP_TABLE_EVA
 0

	)

10 
	#CONFIG_TEMP_TABLE_COLD
 1

	)

11 
	#CONFIG_TEMP_TABLE_ROOM
 0

	)

12 
	#CONFIG_TEMP_TABLE_TDS
 0

	)

14 #i‡(
CONFIG_TEMP_TABLE_HOT
Ë|| (
CONFIG_TEMP_TABLE_HOT_15K
)

15 
TEMP_T
 
C⁄vAdc2Temp_HŸW©î
(
U16
 
mu16Adc
);

18 #i‡
CONFIG_TEMP_TABLE_AMBIENT


19 
TEMP_T
 
C⁄vAdc2Temp_Ambõ¡
(
U16
 
mu16Adc
);

22 #i‡
CONFIG_TEMP_TABLE_EVA


23 
TEMP_T
 
C⁄vAdc2Temp_Eva
(
U16
 
mu16Adc
);

26 #i‡
CONFIG_TEMP_TABLE_COLD


27 
TEMP_T
 
C⁄vAdc2Temp_CﬁdW©î
(
U16
 
mu16Adc
);

30 #i‡
CONFIG_TEMP_TABLE_ROOM


31 
TEMP_T
 
C⁄vAdc2Temp_RoomW©î
(
U16
 
mu16Adc
);

35 #i‡
CONFIG_TEMP_TABLE_TDS


36 
TEMP_T
 
C⁄vAdc2Temp_TDSIn
(
U16
 
mu16Adc
);

37 
TEMP_T
 
C⁄vAdc2Temp_TDSOut
(
U16
 
mu16Adc
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sound\buzzer.c

1 
	~"hw.h
"

2 
	~"buzzî.h
"

7 
	#P_BUZZER_ON
 
P_BUZZER_ONOFF


	)

8 
	#BUZ_SET_NOTE
–
x
 ) do{ 
TDR11
 = (x); }0)

	)

9 
	#BUZZER_TIMER_START
(Ëdo{ 
	`R_TAU1_Ch™√l1_Sèπ
(); }0)

	)

10 
	#BUZZER_TIMER_STOP
() \

12 
	`R_TAU1_Ch™√l1_St›
(); \

13 
TO1
 |
_0002_TAU_CH1_OUTPUT_VALUE_1
; \

14 }0)

	)

17 
U8
 
	ggu8Muã
 = 0;

18 
U8
 
	ggu8Buzzî_Ordî
 = 0;

19 
U8
 
	ggu8Buzzî_Mode
 = 0;

20 
U16
 
	ggu16Buzzî_Time
 = 0;

22 
	$Buz_Sèπ
()

24 
	`BUZZER_TIMER_START
();

25 
	}
}

27 
	$Buz_St›
()

29 
	`BUZZER_TIMER_STOP
();

30 
	}
}

35 
	$InôBuzzî
()

37 
gu8Muã
 = 0;

38 
gu8Buzzî_Ordî
 = 0;

39 
gu8Buzzî_Mode
 = 0;

40 
gu16Buzzî_Time
 = 0;

42 
	`Buz_St›
();

43 
	`BUZ_SET_NOTE
( 0 );

44 
	}
}

46 
U8
 
	$GëBuzMuã
()

48  
gu8Muã
;

49 
	}
}

51 
	$SëBuzMuã
(
U8
 
mu8Muã
 )

53 
gu8Muã
 = 
mu8Muã
;

54 
	}
}

56 
	$BuzToggÀMuã
()

58 
gu8Muã
 = !gu8Mute;

59 
	}
}

62 
	$SëBuzTime
(
U16
 
mu16Time
 )

64 
gu16Buzzî_Time
 = 
mu16Time
 * 10;

65 
	}
}

70 
	$BuzSãp
(
U8
 
mu8Sãp
)

72 
gu16Buzzî_Time
 = 0;

73 
gu8Buzzî_Ordî
 = 1;

74 
gu8Buzzî_Mode
 = 
mu8Sãp
;

75 
	}
}

77 
U8
 
	$IsD⁄ePœyBuz
()

79 if–
gu8Buzzî_Ordî
 != 0 )

81  
FALSE
;

84  
TRUE
;

85 
	}
}

91 
	$BuzTimeCou¡î
()

93 i‡(
gu16Buzzî_Time
 != 0)

95 
gu16Buzzî_Time
--;

97 
	}
}

102 
	$BuzC⁄åﬁ
()

104 i‡(!
gu8Muã
)

106 
gu8Buzzî_Mode
)

108 
BUZZER_OFF
:

109 
P_BUZZER_ON
 = 
OFF
;

110 
gu16Buzzî_Time
 = 0;

111 
	`Buz_St›
();

112 
	`BUZ_SET_NOTE
( 0 );

115 
BUZZER_POWER_ON
:

117 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

119 
	`BUZ_SET_NOTE
–
Si5
 );

120 
	`Buz_Sèπ
();

121 
P_BUZZER_ON
 = 
ON
;

122 
gu8Buzzî_Ordî
++;

123 
	`SëBuzTime
( 4 );

125 if((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

127 
P_BUZZER_ON
 = 
OFF
;

128 
gu8Buzzî_Ordî
++;

129 
	`SëBuzTime
( 19 );

131 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

133 
	`BUZ_SET_NOTE
–
Re6
 );

134 
	`Buz_Sèπ
();

135 
P_BUZZER_ON
 = 
ON
;

136 
gu8Buzzî_Ordî
++;

137 
	`SëBuzTime
( 4 );

139 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

141 
P_BUZZER_ON
 = 
OFF
;

142 
gu8Buzzî_Ordî
++;

143 
	`SëBuzTime
( 19 );

145 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

147 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

148 
	`Buz_Sèπ
();

149 
P_BUZZER_ON
 = 
ON
;

150 
gu8Buzzî_Ordî
++;

151 
	`SëBuzTime
( 4 );

153 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

155 
P_BUZZER_ON
 = 
OFF
;

156 
gu8Buzzî_Ordî
++;

157 
	`SëBuzTime
( 19 );

159 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

161 
	`BUZ_SET_NOTE
–
Pas6
 );

162 
	`Buz_Sèπ
();

163 
P_BUZZER_ON
 = 
ON
;

164 
gu8Buzzî_Ordî
++;

165 
	`SëBuzTime
( 5 );

167 i‡((
gu8Buzzî_Ordî
 =8Ë&& (
gu16Buzzî_Time
 == 0))

169 
P_BUZZER_ON
 = 
OFF
;

170 
gu8Buzzî_Ordî
++;

171 
	`SëBuzTime
( 65 );

173 i‡((
gu8Buzzî_Ordî
 =9Ë&& (
gu16Buzzî_Time
 == 0))

175 
	`BUZ_SET_NOTE
–
Re7
 );

176 
	`Buz_Sèπ
();

177 
P_BUZZER_ON
 = 
ON
;

178 
gu8Buzzî_Ordî
++;

179 
	`SëBuzTime
( 2 );

181 i‡((
gu8Buzzî_Ordî
 =10Ë&& (
gu16Buzzî_Time
 == 0))

183 
P_BUZZER_ON
 = 
OFF
;

184 
gu8Buzzî_Ordî
++;

185 
	`SëBuzTime
( 112 );

187 i‡((
gu8Buzzî_Ordî
 =11Ë&& (
gu16Buzzî_Time
 == 0))

189 
gu8Buzzî_Ordî
 = 0;

190 
	`SëBuzTime
( 0 );

191 
gu8Buzzî_Mode
 = 0;

192 
	`Buz_St›
();

193 
	`BUZ_SET_NOTE
( 0 );

197 
BUZZER_EFFLUENT
:

199 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

201 
	`BUZ_SET_NOTE
–
Re6
 );

202 
	`Buz_Sèπ
();

203 
P_BUZZER_ON
 = 
ON
;

204 
gu8Buzzî_Ordî
++;

205 
	`SëBuzTime
( 3 );

207 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

209 
P_BUZZER_ON
 = 
OFF
;

210 
gu8Buzzî_Ordî
++;

211 
	`SëBuzTime
( 21 );

213 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

215 
	`BUZ_SET_NOTE
–
Re7
 );

216 
	`Buz_Sèπ
();

217 
P_BUZZER_ON
 = 
ON
;

218 
gu8Buzzî_Ordî
++;

219 
	`SëBuzTime
( 3 );

221 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

223 
P_BUZZER_ON
 = 
OFF
;

224 
gu8Buzzî_Ordî
++;

225 
	`SëBuzTime
( 21 );

227 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

229 
gu8Buzzî_Ordî
 = 0;

230 
	`SëBuzTime
( 0 );

231 
gu8Buzzî_Mode
 = 0;

232 
	`Buz_St›
();

233 
	`BUZ_SET_NOTE
( 0 );

237 
BUZZER_EFFLUENT_END
:

239 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

241 
	`BUZ_SET_NOTE
–
La5
 );

242 
	`Buz_Sèπ
();

243 
P_BUZZER_ON
 = 
ON
;

244 
gu8Buzzî_Ordî
++;

245 
	`SëBuzTime
( 3 );

247 if((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

249 
P_BUZZER_ON
 = 
OFF
;

250 
gu8Buzzî_Ordî
++;

251 
	`SëBuzTime
( 21 );

253 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

255 
	`BUZ_SET_NOTE
–
Pas6
 );

256 
	`Buz_Sèπ
();

257 
P_BUZZER_ON
 = 
ON
;

258 
gu8Buzzî_Ordî
++;

259 
	`SëBuzTime
( 3 );

261 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

263 
P_BUZZER_ON
 = 
OFF
;

264 
gu8Buzzî_Ordî
++;

265 
	`SëBuzTime
( 21 );

267 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

269 
	`BUZ_SET_NOTE
–
Re6
 );

270 
	`Buz_Sèπ
();

271 
P_BUZZER_ON
 = 
ON
;

272 
gu8Buzzî_Ordî
++;

273 
	`SëBuzTime
( 3 );

275 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

277 
P_BUZZER_ON
 = 
OFF
;

278 
gu8Buzzî_Ordî
++;

279 
	`SëBuzTime
( 30 );

281 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

283 
gu8Buzzî_Ordî
 = 0;

284 
	`SëBuzTime
( 0 );

285 
gu8Buzzî_Mode
 = 0;

286 
	`Buz_St›
();

287 
	`BUZ_SET_NOTE
( 0 );

291 
BUZZER_COOL_SETUP
:

293 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

295 
	`BUZ_SET_NOTE
–
Pas6
 );

296 
	`Buz_Sèπ
();

297 
P_BUZZER_ON
 = 
ON
;

298 
gu8Buzzî_Ordî
++;

299 
	`SëBuzTime
( 5 );

301 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

303 
P_BUZZER_ON
 = 
OFF
;

304 
gu8Buzzî_Ordî
++;

305 
	`SëBuzTime
( 19 );

307 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

309 
	`BUZ_SET_NOTE
–
Re7
 );

310 
	`Buz_Sèπ
();

311 
P_BUZZER_ON
 = 
ON
;

312 
gu8Buzzî_Ordî
++;

313 
	`SëBuzTime
( 10 );

315 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

317 
P_BUZZER_ON
 = 
OFF
;

318 
gu8Buzzî_Ordî
++;

319 
	`SëBuzTime
( 38 );

321 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

323 
gu8Buzzî_Ordî
 = 0;

324 
	`SëBuzTime
( 0 );

325 
gu8Buzzî_Mode
 = 0;

326 
	`Buz_St›
();

327 
	`BUZ_SET_NOTE
( 0 );

331 
BUZZER_COOL_CANCEL
:

333 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

335 
	`BUZ_SET_NOTE
–
Sﬁs5
 );

336 
	`Buz_Sèπ
();

337 
P_BUZZER_ON
 = 
ON
;

338 
gu8Buzzî_Ordî
++;

339 
	`SëBuzTime
( 3 );

341 if((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

343 
P_BUZZER_ON
 = 
OFF
;

344 
gu8Buzzî_Ordî
++;

345 
	`SëBuzTime
( 21 );

347 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

349 
	`BUZ_SET_NOTE
–
Si5
 );

350 
	`Buz_Sèπ
();

351 
P_BUZZER_ON
 = 
ON
;

352 
gu8Buzzî_Ordî
++;

353 
	`SëBuzTime
( 3 );

355 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

357 
P_BUZZER_ON
 = 
OFF
;

358 
gu8Buzzî_Ordî
++;

359 
	`SëBuzTime
( 21 );

361 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

363 
	`BUZ_SET_NOTE
–
Mi5
 );

364 
	`Buz_Sèπ
();

365 
P_BUZZER_ON
 = 
ON
;

366 
gu8Buzzî_Ordî
++;

367 
	`SëBuzTime
( 10 );

369 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

371 
P_BUZZER_ON
 = 
OFF
;

372 
gu8Buzzî_Ordî
++;

373 
	`SëBuzTime
( 38 );

375 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

377 
gu8Buzzî_Ordî
 = 0;

378 
	`SëBuzTime
( 0 );

379 
gu8Buzzî_Mode
 = 0;

380 
	`Buz_St›
();

381 
	`BUZ_SET_NOTE
( 0 );

385 
BUZZER_SELECT
:

387 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

389 
	`BUZ_SET_NOTE
–
La6
 );

390 
	`Buz_Sèπ
();

391 
P_BUZZER_ON
 = 
ON
;

392 
gu8Buzzî_Ordî
++;

393 
	`SëBuzTime
( 8 );

395 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

397 
P_BUZZER_ON
 = 
OFF
;

398 
gu8Buzzî_Ordî
++;

399 
	`SëBuzTime
( 28 );

401 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

403 
gu8Buzzî_Ordî
 = 0;

404 
	`SëBuzTime
( 0 );

405 
gu8Buzzî_Mode
 = 0;

406 
	`Buz_St›
();

407 
	`BUZ_SET_NOTE
( 0 );

411 
BUZZER_ERROR
:

413 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

415 
	`BUZ_SET_NOTE
–
Re6
 );

416 
	`Buz_Sèπ
();

417 
P_BUZZER_ON
 = 
ON
;

418 
gu8Buzzî_Ordî
++;

419 
	`SëBuzTime
( 2 );

421 if((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

423 
P_BUZZER_ON
 = 
OFF
;

424 
gu8Buzzî_Ordî
++;

425 
	`SëBuzTime
( 10 );

427 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

429 
	`BUZ_SET_NOTE
–
Re7
 );

430 
	`Buz_Sèπ
();

431 
P_BUZZER_ON
 = 
ON
;

432 
gu8Buzzî_Ordî
++;

433 
	`SëBuzTime
( 8 );

435 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

437 
P_BUZZER_ON
 = 
OFF
;

438 
gu8Buzzî_Ordî
++;

439 
	`SëBuzTime
( 28 );

441 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

443 
	`BUZ_SET_NOTE
–
Re6
 );

444 
	`Buz_Sèπ
();

445 
P_BUZZER_ON
 = 
ON
;

446 
gu8Buzzî_Ordî
++;

447 
	`SëBuzTime
( 2 );

449 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

451 
P_BUZZER_ON
 = 
OFF
;

452 
gu8Buzzî_Ordî
++;

453 
	`SëBuzTime
( 10 );

455 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

457 
	`BUZ_SET_NOTE
–
Re7
 );

458 
	`Buz_Sèπ
();

459 
P_BUZZER_ON
 = 
ON
;

460 
gu8Buzzî_Ordî
++;

461 
	`SëBuzTime
( 8 );

463 i‡((
gu8Buzzî_Ordî
 =8Ë&& (
gu16Buzzî_Time
 == 0))

465 
P_BUZZER_ON
 = 
OFF
;

466 
gu8Buzzî_Ordî
++;

467 
	`SëBuzTime
( 28 );

469 i‡((
gu8Buzzî_Ordî
 =9Ë&& (
gu16Buzzî_Time
 == 0))

471 
gu8Buzzî_Ordî
 = 0;

472 
	`SëBuzTime
( 0 );

473 
gu8Buzzî_Mode
 = 0;

474 
	`Buz_St›
();

475 
	`BUZ_SET_NOTE
( 0 );

479 
BUZZER_SETUP
:

480 
BUZZER_MUTE
:

482 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

484 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

485 
	`Buz_Sèπ
();

486 
P_BUZZER_ON
 = 
ON
;

487 
gu8Buzzî_Ordî
++;

488 
	`SëBuzTime
( 5 );

490 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

492 
P_BUZZER_ON
 = 
OFF
;

493 
gu8Buzzî_Ordî
++;

494 
	`SëBuzTime
( 19 );

496 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

498 
	`BUZ_SET_NOTE
–
Re7
 );

499 
	`Buz_Sèπ
();

500 
P_BUZZER_ON
 = 
ON
;

501 
gu8Buzzî_Ordî
++;

502 
	`SëBuzTime
( 10 );

504 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

506 
P_BUZZER_ON
 = 
OFF
;

507 
gu8Buzzî_Ordî
++;

508 
	`SëBuzTime
( 38 );

510 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

512 
gu8Buzzî_Ordî
 = 0;

513 
	`SëBuzTime
( 0 );

514 
gu8Buzzî_Mode
 = 0;

515 
	`Buz_St›
();

516 
	`BUZ_SET_NOTE
( 0 );

520 
BUZZER_CANCEL
:

522 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

524 
	`BUZ_SET_NOTE
–
Re7
 );

525 
	`Buz_Sèπ
();

526 
P_BUZZER_ON
 = 
ON
;

527 
gu8Buzzî_Ordî
++;

528 
	`SëBuzTime
( 5 );

530 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

532 
P_BUZZER_ON
 = 
OFF
;

533 
gu8Buzzî_Ordî
++;

534 
	`SëBuzTime
( 19 );

536 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

538 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

539 
	`Buz_Sèπ
();

540 
P_BUZZER_ON
 = 
ON
;

541 
gu8Buzzî_Ordî
++;

542 
	`SëBuzTime
( 10 );

544 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

546 
P_BUZZER_ON
 = 
OFF
;

547 
gu8Buzzî_Ordî
++;

548 
	`SëBuzTime
( 38 );

550 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

552 
gu8Buzzî_Ordî
 = 0;

553 
	`SëBuzTime
( 0 );

554 
gu8Buzzî_Mode
 = 0;

555 
	`Buz_St›
();

556 
	`BUZ_SET_NOTE
( 0 );

560 
BUZZER_EFFLUENT_CONTINUE
:

562 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

564 
	`BUZ_SET_NOTE
–
Re6
 );

565 
	`Buz_Sèπ
();

566 
P_BUZZER_ON
 = 
ON
;

567 
gu8Buzzî_Ordî
++;

568 
	`SëBuzTime
( 8 );

570 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

572 
P_BUZZER_ON
 = 
OFF
;

573 
gu8Buzzî_Ordî
++;

574 
	`SëBuzTime
( 20 );

576 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

578 
	`BUZ_SET_NOTE
–
Re7
 );

579 
	`Buz_Sèπ
();

580 
P_BUZZER_ON
 = 
ON
;

581 
gu8Buzzî_Ordî
++;

582 
	`SëBuzTime
( 8 );

584 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

586 
P_BUZZER_ON
 = 
OFF
;

587 
gu8Buzzî_Ordî
++;

588 
	`SëBuzTime
( 20 );

590 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

592 
	`BUZ_SET_NOTE
–
Dos7
 );

593 
	`Buz_Sèπ
();

594 
P_BUZZER_ON
 = 
ON
;

595 
gu8Buzzî_Ordî
++;

596 
	`SëBuzTime
( 8 );

598 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

600 
P_BUZZER_ON
 = 
OFF
;

601 
gu8Buzzî_Ordî
++;

602 
	`SëBuzTime
( 20 );

604 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

606 
	`BUZ_SET_NOTE
–
La6
 );

607 
	`Buz_Sèπ
();

608 
P_BUZZER_ON
 = 
ON
;

609 
gu8Buzzî_Ordî
++;

610 
	`SëBuzTime
( 8 );

612 i‡((
gu8Buzzî_Ordî
 =8Ë&& (
gu16Buzzî_Time
 == 0))

614 
P_BUZZER_ON
 = 
OFF
;

615 
gu8Buzzî_Ordî
++;

616 
	`SëBuzTime
( 20 );

618 i‡((
gu8Buzzî_Ordî
 =9Ë&& (
gu16Buzzî_Time
 == 0))

620 
	`BUZ_SET_NOTE
–
Mi6
 );

621 
	`Buz_Sèπ
();

622 
P_BUZZER_ON
 = 
ON
;

623 
gu8Buzzî_Ordî
++;

624 
	`SëBuzTime
( 8 );

626 i‡((
gu8Buzzî_Ordî
 =10Ë&& (
gu16Buzzî_Time
 == 0))

628 
P_BUZZER_ON
 = 
OFF
;

629 
gu8Buzzî_Ordî
++;

630 
	`SëBuzTime
( 20 );

632 i‡((
gu8Buzzî_Ordî
 =11Ë&& (
gu16Buzzî_Time
 == 0))

634 
	`BUZ_SET_NOTE
–
La5
 );

635 
	`Buz_Sèπ
();

636 
P_BUZZER_ON
 = 
ON
;

637 
gu8Buzzî_Ordî
++;

638 
	`SëBuzTime
( 8 );

640 i‡((
gu8Buzzî_Ordî
 =12Ë&& (
gu16Buzzî_Time
 == 0))

642 
P_BUZZER_ON
 = 
OFF
;

643 
gu8Buzzî_Ordî
++;

644 
	`SëBuzTime
( 20 );

646 i‡((
gu8Buzzî_Ordî
 =13Ë&& (
gu16Buzzî_Time
 == 0))

648 
	`BUZ_SET_NOTE
–
Re6
 );

649 
	`Buz_Sèπ
();

650 
P_BUZZER_ON
 = 
ON
;

651 
gu8Buzzî_Ordî
++;

652 
	`SëBuzTime
( 8 );

654 i‡((
gu8Buzzî_Ordî
 =14Ë&& (
gu16Buzzî_Time
 == 0))

656 
P_BUZZER_ON
 = 
OFF
;

657 
gu8Buzzî_Ordî
++;

658 
	`SëBuzTime
( 20 );

660 i‡((
gu8Buzzî_Ordî
 =15Ë&& (
gu16Buzzî_Time
 == 0))

662 
	`BUZ_SET_NOTE
–
La6
 );

663 
	`Buz_Sèπ
();

664 
P_BUZZER_ON
 = 
ON
;

665 
gu8Buzzî_Ordî
++;

666 
	`SëBuzTime
( 8 );

668 i‡((
gu8Buzzî_Ordî
 =16Ë&& (
gu16Buzzî_Time
 == 0))

670 
P_BUZZER_ON
 = 
OFF
;

671 
gu8Buzzî_Ordî
++;

672 
	`SëBuzTime
( 20 );

674 i‡((
gu8Buzzî_Ordî
 =17Ë&& (
gu16Buzzî_Time
 == 0))

676 
gu8Buzzî_Ordî
 = 0;

677 
	`SëBuzTime
( 0 );

678 
gu8Buzzî_Mode
 = 0;

679 
	`Buz_St›
();

680 
	`BUZ_SET_NOTE
( 0 );

684 
BUZZER_STERILIZE_START
:

686 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

688 
	`BUZ_SET_NOTE
–
Mi6
 );

689 
	`Buz_Sèπ
();

690 
P_BUZZER_ON
 = 
ON
;

691 
gu8Buzzî_Ordî
++;

692 
	`SëBuzTime
( 3 );

694 if((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

696 
P_BUZZER_ON
 = 
OFF
;

697 
gu8Buzzî_Ordî
++;

698 
	`SëBuzTime
( 21 );

700 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

702 
	`BUZ_SET_NOTE
–
Dos6
 );

703 
	`Buz_Sèπ
();

704 
P_BUZZER_ON
 = 
ON
;

705 
gu8Buzzî_Ordî
++;

706 
	`SëBuzTime
( 3 );

708 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

710 
P_BUZZER_ON
 = 
OFF
;

711 
gu8Buzzî_Ordî
++;

712 
	`SëBuzTime
( 21 );

714 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

716 
	`BUZ_SET_NOTE
–
La6
 );

717 
	`Buz_Sèπ
();

718 
P_BUZZER_ON
 = 
ON
;

719 
gu8Buzzî_Ordî
++;

720 
	`SëBuzTime
( 10 );

722 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

724 
P_BUZZER_ON
 = 
OFF
;

725 
gu8Buzzî_Ordî
++;

726 
	`SëBuzTime
( 38 );

728 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

730 
gu8Buzzî_Ordî
 = 0;

731 
	`SëBuzTime
( 0 );

732 
gu8Buzzî_Mode
 = 0;

733 
	`Buz_St›
();

734 
	`BUZ_SET_NOTE
( 0 );

738 
BUZZER_STERILIZE_END
:

740 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

742 
	`BUZ_SET_NOTE
–
La6
 );

743 
	`Buz_Sèπ
();

744 
P_BUZZER_ON
 = 
ON
;

745 
gu8Buzzî_Ordî
++;

746 
	`SëBuzTime
( 8 );

748 if((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

750 
P_BUZZER_ON
 = 
OFF
;

751 
gu8Buzzî_Ordî
++;

752 
	`SëBuzTime
( 28 );

754 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

756 
	`BUZ_SET_NOTE
–
Dos6
 );

757 
	`Buz_Sèπ
();

758 
P_BUZZER_ON
 = 
ON
;

759 
gu8Buzzî_Ordî
++;

760 
	`SëBuzTime
( 8 );

762 if((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

764 
P_BUZZER_ON
 = 
OFF
;

765 
gu8Buzzî_Ordî
++;

766 
	`SëBuzTime
( 28 );

768 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

770 
	`BUZ_SET_NOTE
–
Dos6
 );

771 
	`Buz_Sèπ
();

772 
P_BUZZER_ON
 = 
ON
;

773 
gu8Buzzî_Ordî
++;

774 
	`SëBuzTime
( 3 );

776 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

778 
P_BUZZER_ON
 = 
OFF
;

779 
gu8Buzzî_Ordî
++;

780 
	`SëBuzTime
( 21 );

782 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

784 
	`BUZ_SET_NOTE
–
Pas6
 );

785 
	`Buz_Sèπ
();

786 
P_BUZZER_ON
 = 
ON
;

787 
gu8Buzzî_Ordî
++;

788 
	`SëBuzTime
( 10 );

790 i‡((
gu8Buzzî_Ordî
 =8Ë&& (
gu16Buzzî_Time
 == 0))

792 
P_BUZZER_ON
 = 
OFF
;

793 
gu8Buzzî_Ordî
++;

794 
	`SëBuzTime
( 38 );

796 i‡((
gu8Buzzî_Ordî
 =9Ë&& (
gu16Buzzî_Time
 == 0))

798 
	`BUZ_SET_NOTE
–
Mi6
 );

799 
	`Buz_Sèπ
();

800 
P_BUZZER_ON
 = 
ON
;

801 
gu8Buzzî_Ordî
++;

802 
	`SëBuzTime
( 14 );

804 i‡((
gu8Buzzî_Ordî
 =10Ë&& (
gu16Buzzî_Time
 == 0))

806 
P_BUZZER_ON
 = 
OFF
;

807 
gu8Buzzî_Ordî
++;

808 
	`SëBuzTime
( 50 );

810 i‡((
gu8Buzzî_Ordî
 =11Ë&& (
gu16Buzzî_Time
 == 0))

812 
gu8Buzzî_Ordî
 = 0;

813 
	`SëBuzTime
( 0 );

814 
gu8Buzzî_Mode
 = 0;

815 
	`Buz_St›
();

816 
	`BUZ_SET_NOTE
( 0 );

820 
BUZZER_MEMENTO_1
:

821 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

823 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

824 
	`Buz_Sèπ
();

825 
P_BUZZER_ON
 = 
ON
;

826 
gu8Buzzî_Ordî
++;

827 
	`SëBuzTime
( 6 );

829 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

831 
P_BUZZER_ON
 = 
OFF
;

832 
gu8Buzzî_Ordî
++;

833 
	`SëBuzTime
( 50 );

835 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

837 
gu8Buzzî_Ordî
 = 0;

838 
	`SëBuzTime
( 0 );

839 
gu8Buzzî_Mode
 = 0;

840 
	`Buz_St›
();

841 
	`BUZ_SET_NOTE
( 0 );

845 
BUZZER_MEMENTO_2
:

846 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

848 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

849 
	`Buz_Sèπ
();

850 
P_BUZZER_ON
 = 
ON
;

851 
gu8Buzzî_Ordî
++;

852 
	`SëBuzTime
( 6 );

854 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

856 
P_BUZZER_ON
 = 
OFF
;

857 
gu8Buzzî_Ordî
++;

858 
	`SëBuzTime
( 10 );

860 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

862 
P_BUZZER_ON
 = 
ON
;

863 
gu8Buzzî_Ordî
++;

864 
	`SëBuzTime
( 6 );

866 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

868 
P_BUZZER_ON
 = 
OFF
;

869 
gu8Buzzî_Ordî
++;

870 
	`SëBuzTime
( 50 );

872 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

874 
gu8Buzzî_Ordî
 = 0;

875 
	`SëBuzTime
( 0 );

876 
gu8Buzzî_Mode
 = 0;

877 
	`Buz_St›
();

878 
	`BUZ_SET_NOTE
( 0 );

882 
BUZZER_MEMENTO_3
:

883 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

885 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

886 
	`Buz_Sèπ
();

887 
P_BUZZER_ON
 = 
ON
;

888 
gu8Buzzî_Ordî
++;

889 
	`SëBuzTime
( 6 );

891 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

893 
P_BUZZER_ON
 = 
OFF
;

894 
gu8Buzzî_Ordî
++;

895 
	`SëBuzTime
( 10 );

897 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

899 
P_BUZZER_ON
 = 
ON
;

900 
gu8Buzzî_Ordî
++;

901 
	`SëBuzTime
( 6 );

903 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

905 
P_BUZZER_ON
 = 
OFF
;

906 
gu8Buzzî_Ordî
++;

907 
	`SëBuzTime
( 10 );

909 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

911 
P_BUZZER_ON
 = 
ON
;

912 
gu8Buzzî_Ordî
++;

913 
	`SëBuzTime
( 6 );

915 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

917 
P_BUZZER_ON
 = 
OFF
;

918 
gu8Buzzî_Ordî
++;

919 
	`SëBuzTime
( 50 );

921 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

923 
gu8Buzzî_Ordî
 = 0;

924 
	`SëBuzTime
( 0 );

925 
gu8Buzzî_Mode
 = 0;

926 
	`Buz_St›
();

927 
	`BUZ_SET_NOTE
( 0 );

931 
BUZZER_MEMENTO_4
:

932 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

934 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

935 
	`Buz_Sèπ
();

936 
P_BUZZER_ON
 = 
ON
;

937 
gu8Buzzî_Ordî
++;

938 
	`SëBuzTime
( 6 );

940 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

942 
P_BUZZER_ON
 = 
OFF
;

943 
gu8Buzzî_Ordî
++;

944 
	`SëBuzTime
( 10 );

946 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

948 
P_BUZZER_ON
 = 
ON
;

949 
gu8Buzzî_Ordî
++;

950 
	`SëBuzTime
( 6 );

952 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

954 
P_BUZZER_ON
 = 
OFF
;

955 
gu8Buzzî_Ordî
++;

956 
	`SëBuzTime
( 10 );

958 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

960 
P_BUZZER_ON
 = 
ON
;

961 
gu8Buzzî_Ordî
++;

962 
	`SëBuzTime
( 6 );

964 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

966 
P_BUZZER_ON
 = 
OFF
;

967 
gu8Buzzî_Ordî
++;

968 
	`SëBuzTime
( 10 );

970 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

972 
P_BUZZER_ON
 = 
ON
;

973 
gu8Buzzî_Ordî
++;

974 
	`SëBuzTime
( 6 );

976 i‡((
gu8Buzzî_Ordî
 =8Ë&& (
gu16Buzzî_Time
 == 0))

978 
P_BUZZER_ON
 = 
OFF
;

979 
gu8Buzzî_Ordî
++;

980 
	`SëBuzTime
( 50 );

982 i‡((
gu8Buzzî_Ordî
 =9Ë&& (
gu16Buzzî_Time
 == 0))

984 
gu8Buzzî_Ordî
 = 0;

985 
	`SëBuzTime
( 0 );

986 
gu8Buzzî_Mode
 = 0;

987 
	`Buz_St›
();

988 
	`BUZ_SET_NOTE
( 0 );

992 
BUZZER_MEMENTO_5
:

993 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

995 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

996 
	`Buz_Sèπ
();

997 
P_BUZZER_ON
 = 
ON
;

998 
gu8Buzzî_Ordî
++;

999 
	`SëBuzTime
( 6 );

1001 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

1003 
P_BUZZER_ON
 = 
OFF
;

1004 
gu8Buzzî_Ordî
++;

1005 
	`SëBuzTime
( 10 );

1007 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

1009 
P_BUZZER_ON
 = 
ON
;

1010 
gu8Buzzî_Ordî
++;

1011 
	`SëBuzTime
( 6 );

1013 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

1015 
P_BUZZER_ON
 = 
OFF
;

1016 
gu8Buzzî_Ordî
++;

1017 
	`SëBuzTime
( 10 );

1019 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

1021 
P_BUZZER_ON
 = 
ON
;

1022 
gu8Buzzî_Ordî
++;

1023 
	`SëBuzTime
( 6 );

1025 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

1027 
P_BUZZER_ON
 = 
OFF
;

1028 
gu8Buzzî_Ordî
++;

1029 
	`SëBuzTime
( 10 );

1031 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

1033 
P_BUZZER_ON
 = 
ON
;

1034 
gu8Buzzî_Ordî
++;

1035 
	`SëBuzTime
( 6 );

1037 i‡((
gu8Buzzî_Ordî
 =8Ë&& (
gu16Buzzî_Time
 == 0))

1039 
P_BUZZER_ON
 = 
OFF
;

1040 
gu8Buzzî_Ordî
++;

1041 
	`SëBuzTime
( 10 );

1043 i‡((
gu8Buzzî_Ordî
 =9Ë&& (
gu16Buzzî_Time
 == 0))

1045 
P_BUZZER_ON
 = 
ON
;

1046 
gu8Buzzî_Ordî
++;

1047 
	`SëBuzTime
( 6 );

1049 i‡((
gu8Buzzî_Ordî
 =10Ë&& (
gu16Buzzî_Time
 == 0))

1051 
P_BUZZER_ON
 = 
OFF
;

1052 
gu8Buzzî_Ordî
++;

1053 
	`SëBuzTime
( 50 );

1055 i‡((
gu8Buzzî_Ordî
 =11Ë&& (
gu16Buzzî_Time
 == 0))

1057 
gu8Buzzî_Ordî
 = 0;

1058 
	`SëBuzTime
( 0 );

1059 
gu8Buzzî_Mode
 = 0;

1060 
	`Buz_St›
();

1061 
	`BUZ_SET_NOTE
( 0 );

1065 
BUZZER_MEMENTO_1_MUTE
:

1066 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

1068 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

1069 
	`Buz_Sèπ
();

1070 
P_BUZZER_ON
 = 
ON
;

1071 
gu8Buzzî_Ordî
++;

1072 
	`SëBuzTime
( 6 );

1074 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

1076 
P_BUZZER_ON
 = 
OFF
;

1077 
gu8Buzzî_Ordî
++;

1078 
	`SëBuzTime
( 50 );

1080 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

1082 
gu8Buzzî_Ordî
 = 0;

1083 
	`SëBuzTime
( 0 );

1084 
gu8Buzzî_Mode
 = 0;

1085 
	`Buz_St›
();

1086 
	`BUZ_SET_NOTE
( 0 );

1090 
BUZZER_MEMENTO_5_MUTE
:

1091 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

1093 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

1094 
	`Buz_Sèπ
();

1095 
P_BUZZER_ON
 = 
ON
;

1096 
gu8Buzzî_Ordî
++;

1097 
	`SëBuzTime
( 6 );

1099 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

1101 
P_BUZZER_ON
 = 
OFF
;

1102 
gu8Buzzî_Ordî
++;

1103 
	`SëBuzTime
( 10 );

1105 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

1107 
P_BUZZER_ON
 = 
ON
;

1108 
gu8Buzzî_Ordî
++;

1109 
	`SëBuzTime
( 6 );

1111 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

1113 
P_BUZZER_ON
 = 
OFF
;

1114 
gu8Buzzî_Ordî
++;

1115 
	`SëBuzTime
( 10 );

1117 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

1119 
P_BUZZER_ON
 = 
ON
;

1120 
gu8Buzzî_Ordî
++;

1121 
	`SëBuzTime
( 6 );

1123 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

1125 
P_BUZZER_ON
 = 
OFF
;

1126 
gu8Buzzî_Ordî
++;

1127 
	`SëBuzTime
( 10 );

1129 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

1131 
P_BUZZER_ON
 = 
ON
;

1132 
gu8Buzzî_Ordî
++;

1133 
	`SëBuzTime
( 6 );

1135 i‡((
gu8Buzzî_Ordî
 =8Ë&& (
gu16Buzzî_Time
 == 0))

1137 
P_BUZZER_ON
 = 
OFF
;

1138 
gu8Buzzî_Ordî
++;

1139 
	`SëBuzTime
( 10 );

1141 i‡((
gu8Buzzî_Ordî
 =9Ë&& (
gu16Buzzî_Time
 == 0))

1143 
P_BUZZER_ON
 = 
ON
;

1144 
gu8Buzzî_Ordî
++;

1145 
	`SëBuzTime
( 6 );

1147 i‡((
gu8Buzzî_Ordî
 =10Ë&& (
gu16Buzzî_Time
 == 0))

1149 
P_BUZZER_ON
 = 
OFF
;

1150 
gu8Buzzî_Ordî
++;

1151 
	`SëBuzTime
( 50 );

1153 i‡((
gu8Buzzî_Ordî
 =11Ë&& (
gu16Buzzî_Time
 == 0))

1155 
gu8Buzzî_Ordî
 = 0;

1156 
	`SëBuzTime
( 0 );

1157 
gu8Buzzî_Mode
 = 0;

1158 
	`Buz_St›
();

1159 
	`BUZ_SET_NOTE
( 0 );

1168  
gu8Buzzî_Mode
 )

1170 
BUZZER_MUTE
:

1172 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

1174 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

1175 
	`Buz_Sèπ
();

1176 
P_BUZZER_ON
 = 
ON
;

1177 
gu8Buzzî_Ordî
++;

1178 
	`SëBuzTime
( 5 );

1180 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

1182 
P_BUZZER_ON
 = 
OFF
;

1183 
gu8Buzzî_Ordî
++;

1184 
	`SëBuzTime
( 19 );

1186 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

1188 
	`BUZ_SET_NOTE
–
Re7
 );

1189 
	`Buz_Sèπ
();

1190 
P_BUZZER_ON
 = 
ON
;

1191 
gu8Buzzî_Ordî
++;

1192 
	`SëBuzTime
( 10 );

1194 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

1196 
P_BUZZER_ON
 = 
OFF
;

1197 
gu8Buzzî_Ordî
++;

1198 
	`SëBuzTime
( 38 );

1200 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

1202 
gu8Buzzî_Ordî
 = 0;

1203 
	`SëBuzTime
( 0 );

1204 
gu8Buzzî_Mode
 = 0;

1205 
	`Buz_St›
();

1206 
	`BUZ_SET_NOTE
( 0 );

1210 
BUZZER_MEMENTO_1_MUTE
:

1211 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

1213 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

1214 
	`Buz_Sèπ
();

1215 
P_BUZZER_ON
 = 
ON
;

1216 
gu8Buzzî_Ordî
++;

1217 
	`SëBuzTime
( 6 );

1219 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

1221 
P_BUZZER_ON
 = 
OFF
;

1222 
gu8Buzzî_Ordî
++;

1223 
	`SëBuzTime
( 50 );

1225 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

1227 
gu8Buzzî_Ordî
 = 0;

1228 
	`SëBuzTime
( 0 );

1229 
gu8Buzzî_Mode
 = 0;

1230 
	`Buz_St›
();

1231 
	`BUZ_SET_NOTE
( 0 );

1235 
BUZZER_MEMENTO_5_MUTE
:

1236 i‡((
gu8Buzzî_Ordî
 =1Ë&& (
gu16Buzzî_Time
 == 0))

1238 
	`BUZ_SET_NOTE
–
Sﬁ6
 );

1239 
	`Buz_Sèπ
();

1240 
P_BUZZER_ON
 = 
ON
;

1241 
gu8Buzzî_Ordî
++;

1242 
	`SëBuzTime
( 6 );

1244 i‡((
gu8Buzzî_Ordî
 =2Ë&& (
gu16Buzzî_Time
 == 0))

1246 
P_BUZZER_ON
 = 
OFF
;

1247 
gu8Buzzî_Ordî
++;

1248 
	`SëBuzTime
( 10 );

1250 i‡((
gu8Buzzî_Ordî
 =3Ë&& (
gu16Buzzî_Time
 == 0))

1252 
P_BUZZER_ON
 = 
ON
;

1253 
gu8Buzzî_Ordî
++;

1254 
	`SëBuzTime
( 6 );

1256 i‡((
gu8Buzzî_Ordî
 =4Ë&& (
gu16Buzzî_Time
 == 0))

1258 
P_BUZZER_ON
 = 
OFF
;

1259 
gu8Buzzî_Ordî
++;

1260 
	`SëBuzTime
( 10 );

1262 i‡((
gu8Buzzî_Ordî
 =5Ë&& (
gu16Buzzî_Time
 == 0))

1264 
P_BUZZER_ON
 = 
ON
;

1265 
gu8Buzzî_Ordî
++;

1266 
	`SëBuzTime
( 6 );

1268 i‡((
gu8Buzzî_Ordî
 =6Ë&& (
gu16Buzzî_Time
 == 0))

1270 
P_BUZZER_ON
 = 
OFF
;

1271 
gu8Buzzî_Ordî
++;

1272 
	`SëBuzTime
( 10 );

1274 i‡((
gu8Buzzî_Ordî
 =7Ë&& (
gu16Buzzî_Time
 == 0))

1276 
P_BUZZER_ON
 = 
ON
;

1277 
gu8Buzzî_Ordî
++;

1278 
	`SëBuzTime
( 6 );

1280 i‡((
gu8Buzzî_Ordî
 =8Ë&& (
gu16Buzzî_Time
 == 0))

1282 
P_BUZZER_ON
 = 
OFF
;

1283 
gu8Buzzî_Ordî
++;

1284 
	`SëBuzTime
( 10 );

1286 i‡((
gu8Buzzî_Ordî
 =9Ë&& (
gu16Buzzî_Time
 == 0))

1288 
P_BUZZER_ON
 = 
ON
;

1289 
gu8Buzzî_Ordî
++;

1290 
	`SëBuzTime
( 6 );

1292 i‡((
gu8Buzzî_Ordî
 =10Ë&& (
gu16Buzzî_Time
 == 0))

1294 
P_BUZZER_ON
 = 
OFF
;

1295 
gu8Buzzî_Ordî
++;

1296 
	`SëBuzTime
( 50 );

1298 i‡((
gu8Buzzî_Ordî
 =11Ë&& (
gu16Buzzî_Time
 == 0))

1300 
gu8Buzzî_Ordî
 = 0;

1301 
	`SëBuzTime
( 0 );

1302 
gu8Buzzî_Mode
 = 0;

1303 
	`Buz_St›
();

1304 
	`BUZ_SET_NOTE
( 0 );

1309 
P_BUZZER_ON
 = 
OFF
;

1310 
gu8Buzzî_Ordî
 = 0;

1311 
	`SëBuzTime
( 0 );

1312 
gu8Buzzî_Mode
 = 0;

1313 
	`Buz_St›
();

1314 
	`BUZ_SET_NOTE
( 0 );

1319 
	`BuzTimeCou¡î
();

1320 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sound\buzzer.h

1 #i‚de‡
__BUZZER_H__


2 
	#__BUZZER_H__


	)

4 
	~"¥j_ty≥.h
"

8 
	#OSC_8MHZ
 0

	)

9 
	#OSC_16MHZ
 0

	)

10 
	#OSC_32MHZ
 1

	)

12 #i‡(
OSC_8MHZ
 == 1)

15 
	#Do4
 (15288U)

	)

16 
	#Dos4
 (14430U)

	)

17 
	#Re4
 (13620U)

	)

18 
	#Mi4
 (12134U)

	)

19 
	#Pa4
 (11453U)

	)

20 
	#Pas4
 (10810U)

	)

21 
	#Sﬁ4
 (10203U)

	)

22 
	#Sﬁs4
 (9630U)

	)

23 
	#La4
 (9090U)

	)

24 
	#Si4
 (8098U)

	)

26 #ñi‡(
OSC_16MHZ
 == 1)

29 
	#Do4
 (30577U)

	)

30 
	#Dos4
 (28861U)

	)

31 
	#Re4
 (27241U)

	)

32 
	#Mi4
 (24269U)

	)

33 
	#Pa4
 (22907U)

	)

34 
	#Pas4
 (21621U)

	)

35 
	#Sﬁ4
 (20407U)

	)

36 
	#Sﬁs4
 (19262U)

	)

37 
	#La4
 (18181U)

	)

38 
	#Si4
 (16197U)

	)

42 
	#Do4
 (61155U)

	)

43 
	#Dos4
 (57723U)

	)

44 
	#Re4
 (54483U)

	)

45 
	#Mi4
 (48539U)

	)

46 
	#Pa4
 (45814U)

	)

47 
	#Pas4
 (43243U)

	)

48 
	#Sﬁ4
 (40816U)

	)

49 
	#Sﬁs4
 (38525U)

	)

50 
	#La4
 (36363U)

	)

51 
	#Si4
 (32395U)

	)

55 
	#Do5
 (
Do4
 / 2 )

	)

56 
	#Dos5
 (
Dos4
 / 2 )

	)

57 
	#Re5
 (
Re4
 / 2)

	)

58 
	#Mi5
 (
Mi4
 / 2)

	)

59 
	#Pa5
 (
Pa4
 / 2)

	)

60 
	#Pas5
 (
Pas4
 / 2)

	)

61 
	#Sﬁ5
 (
Sﬁ4
 / 2)

	)

62 
	#Sﬁs5
 (
Sﬁs4
 / 2)

	)

63 
	#La5
 (
La4
 / 2)

	)

64 
	#Si5
 (
Si4
 / 2)

	)

67 
	#Do6
 (
Do4
 / 4 )

	)

68 
	#Dos6
 (
Dos4
 / 4 )

	)

69 
	#Re6
 (
Re4
 / 4)

	)

70 
	#Mi6
 (
Mi4
 / 4)

	)

71 
	#Pa6
 (
Pa4
 / 4)

	)

72 
	#Pas6
 (
Pas4
 / 4)

	)

73 
	#Sﬁ6
 (
Sﬁ4
 / 4)

	)

74 
	#Sﬁs6
 (
Sﬁs4
 / 4)

	)

75 
	#La6
 (
La4
 / 4)

	)

76 
	#Si6
 (
Si4
 / 4)

	)

79 
	#Do7
 (
Do4
 / 8 )

	)

80 
	#Dos7
 (
Dos4
 / 8 )

	)

81 
	#Re7
 (
Re4
 / 8)

	)

82 
	#Mi7
 (
Mi4
 / 8)

	)

83 
	#Pa7
 (
Pa4
 / 8)

	)

84 
	#Pas7
 (
Pas4
 / 8)

	)

85 
	#Sﬁ7
 (
Sﬁ4
 / 8)

	)

86 
	#Sﬁs7
 (
Sﬁs4
 / 8)

	)

87 
	#La7
 (
La4
 / 8)

	)

88 
	#Si7
 (
Si4
 / 8)

	)

93 
InôBuzzî
();

96 
U8
 
GëBuzMuã
();

97 
SëBuzMuã
(
U8
 
mu8Muã
 );

98 
BuzToggÀMuã
();

101 
	#BUZZER_OFF
 0

	)

102 
	#BUZZER_POWER_ON
 1

	)

103 
	#BUZZER_EFFLUENT
 2

	)

104 
	#BUZZER_EFFLUENT_END
 3

	)

105 
	#BUZZER_COOL_SETUP
 4

	)

106 
	#BUZZER_COOL_CANCEL
 5

	)

107 
	#BUZZER_SELECT
 6

	)

108 
	#BUZZER_ERROR
 7

	)

109 
	#BUZZER_SETUP
 8

	)

110 
	#BUZZER_CANCEL
 9

	)

111 
	#BUZZER_EFFLUENT_CONTINUE
 10

	)

112 
	#BUZZER_STERILIZE_START
 11

	)

113 
	#BUZZER_STERILIZE_END
 12

	)

114 
	#BUZZER_MEMENTO_1
 13

	)

115 
	#BUZZER_MEMENTO_2
 14

	)

116 
	#BUZZER_MEMENTO_3
 15

	)

117 
	#BUZZER_MEMENTO_4
 16

	)

118 
	#BUZZER_MEMENTO_5
 17

	)

119 
	#BUZZER_MUTE
 18

	)

120 
	#BUZZER_MEMENTO_1_MUTE
 19

	)

121 
	#BUZZER_MEMENTO_5_MUTE
 20

	)

122 
	#BUZZER_NONE
 21

	)

123 
BuzSãp
(
U8
 
mu8Sãp
);

125 
U8
 
IsD⁄ePœyBuz
();

128 
BuzTimeCou¡î
();

131 
BuzC⁄åﬁ
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sound\sound.c

1 
	~"sound.h
"

3 
	~"ì¥om.h
"

5 
	s_sound_


7 
U8
 
	mMuã
;

8 } 
	tSound_T
;

10 
Sound_T
 
	gsound
;

12 
	s_sound_li°_t


14 
SoundId_T
 
	mSoundId
;

15 
U8
 
	mBuzzîId
;

16 } 
	tSoundLi°_T
;

18 
SoundLi°_T
 
	gSoundLi°
[] =

22 { 
SOUND_POWER_OFF
 , 
BUZZER_OFF
 },

23 { 
SOUND_POWER_ON
 , 
BUZZER_POWER_ON
 },

24 { 
SOUND_EFFLUENT
 , 
BUZZER_EFFLUENT
 },

25 { 
SOUND_EFFLUENT_END
 , 
BUZZER_EFFLUENT_END
 },

26 { 
SOUND_CONFIG_SETUP
 , 
BUZZER_COOL_SETUP
 },

27 { 
SOUND_CONFIG_CANCEL
 , 
BUZZER_COOL_CANCEL
 },

28 { 
SOUND_SELECT
 , 
BUZZER_SELECT
 },

29 { 
SOUND_ERROR
 , 
BUZZER_ERROR
 },

30 { 
SOUND_SETUP
 , 
BUZZER_SETUP
 },

31 { 
SOUND_CANCEL
 , 
BUZZER_CANCEL
 },

32 { 
SOUND_LOCK_SETUP
 , 
BUZZER_SETUP
 },

33 { 
SOUND_LOCK_CANCEL
 , 
BUZZER_CANCEL
 },

34 { 
SOUND_EFFLUENT_CONTINUE
 , 
BUZZER_EFFLUENT_CONTINUE
 },

35 { 
SOUND_STERILIZE_START
 , 
BUZZER_STERILIZE_START
 },

36 { 
SOUND_STERILIZE_END
 , 
BUZZER_STERILIZE_END
 },

37 { 
SOUND_MEMENTO_1
 , 
BUZZER_MEMENTO_1
 },

38 { 
SOUND_MEMENTO_2
 , 
BUZZER_MEMENTO_2
 },

39 { 
SOUND_MEMENTO_3
 , 
BUZZER_MEMENTO_3
 },

40 { 
SOUND_MEMENTO_4
 , 
BUZZER_MEMENTO_4
 },

41 { 
SOUND_MEMENTO_5
 , 
BUZZER_MEMENTO_5
 },

42 { 
SOUND_MUTE
 , 
BUZZER_MUTE
 },

43 { 
SOUND_COOK_ALARM
 , 
BUZZER_MEMENTO_1_MUTE
 },

44 { 
SOUND_COOK_ALARM_DONE
 , 
BUZZER_MEMENTO_5_MUTE
 },

49 
	#SZ_LIST
 ( –
SoundLi°
 ) / –
SoundLi°_T
 ) )

	)

51 
	$Sound
(
SoundId_T
 
mId
)

54 
U8
 
i
;

62  
i
 = 0; i < 
SZ_LIST
 ; i++ )

64 if–
SoundLi°
[ 
i
 ].
SoundId
 =
mId
 )

66 
	`BuzSãp
–
SoundLi°
[ 
i
 ].
BuzzîId
 );

71 
	}
}

73 
U8
 
	$IsSëSoundMuã
()

76  
	`GëBuzMuã
();

80 
	}
}

82 
	$SëSoundMuã
()

85 
sound
.
Muã
 = 
TRUE
;

86 
	`SaveEïromId
–
EEP_ID_CONF_MUTE
 );

88 
	`SëBuzMuã
–
TRUE
 );

90 
	}
}

92 
U8
 
	$GëSoundMuã
()

94  
sound
.
Muã
;

95 
	}
}

97 
	$CÀ¨SoundMuã
()

100 
sound
.
Muã
 = 
FALSE
;

101 
	`SaveEïromId
–
EEP_ID_CONF_MUTE
 );

103 
	`SëBuzMuã
–
FALSE
 );

105 
	}
}

107 
	$TEST_Sound
()

109 
U8
 
cou¡
 = 0;

112 
	`Sound
–
cou¡
 );

113 
cou¡
++;

114 if–
cou¡
 >
MAX_SOUND_NUM
 )

116 
cou¡
 = 0;

118 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sound\sound.h

1 #i‚de‡
__SOUND_H__


2 
	#__SOUND_H__


	)

4 
	~"¥j_ty≥.h
"

9 
	mSOUND_POWER_OFF
,

10 
	mSOUND_POWER_ON
,

12 
	mSOUND_EFFLUENT
,

13 
	mSOUND_EFFLUENT_END
,

15 
	mSOUND_CONFIG_SETUP
,

16 
	mSOUND_CONFIG_CANCEL
,

18 
	mSOUND_SELECT
,

19 
	mSOUND_ERROR
,

21 
	mSOUND_SETUP
,

22 
	mSOUND_CANCEL
,

24 
	mSOUND_LOCK_SETUP
,

25 
	mSOUND_LOCK_CANCEL
,

27 
	mSOUND_EFFLUENT_CONTINUE
,

28 
	mSOUND_STERILIZE_START
,

29 
	mSOUND_STERILIZE_END
,

31 
	mSOUND_MEMENTO_1
,

32 
	mSOUND_MEMENTO_2
,

33 
	mSOUND_MEMENTO_3
,

34 
	mSOUND_MEMENTO_4
,

35 
	mSOUND_MEMENTO_5
,

37 
	mSOUND_MUTE
,

38 
	mSOUND_COOK_ALARM
,

39 
	mSOUND_COOK_ALARM_DONE
,

40 
	mSOUND_NONE
,

42 
	mMAX_SOUND_NUM


43 }
	tSoundId_T
;

47 
U8
 
IsSëSoundMuã
();

50 
SëSoundMuã
();

51 
U8
 
GëSoundMuã
();

54 
CÀ¨SoundMuã
();

57 
Sound
(
SoundId_T
 
mId
);

60 
TEST_Sound
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\special_mode\key_special_handler.c

1 
	~"key_•ecül_h™dÀr.h
"

3 
	~"key_comm⁄_h™dÀr.h
"

4 
	~"key.h
"

6 
	~"¥o˚ss_di•œy.h
"

7 
	~"ì¥om.h
"

8 
	~"sound.h
"

9 
	~"hŸ_w©î.h
"

10 
	~"•ecül_mode.h
"

11 
	~"time_sh‹t.h
"

14 
U8
 
OnOffA…ôude
();

15 
U8
 
OnA…ôude
();

16 
U8
 
SñA…ôude
();

20 
U8
 
OnTimeSh‹t
();

21 
U8
 
OnTe°Sh‹tCompTime
();

23 c⁄° 
KeyEvítLi°_T
 
	gS≥cül_KeyEvítLi°
[] =

28 { 
K_HOT
, 
SñA…ôude
, 
NULL
, NULL, NULL, NULL, 
OnA…ôude
 },

29 { 
K_COLD
, 
NULL
, NULL, NULL, NULL, NULL, 
OnTimeSh‹t
 }

33 
U8
 
	$IsVÆidS≥cülKeyC⁄dôi⁄
(
U16
 
mu16Key
)

35  
TRUE
;

36 
	}
}

38 * 
	$GëS≥cülKeyEvítLi°
()

40  (*)
S≥cül_KeyEvítLi°
;

41 
	}
}

43 
U8
 
	$GëS≥cülKeyEvítLi°Size
()

45  ( (
S≥cül_KeyEvítLi°
Ë/ (
KeyEvítLi°_T
) );

46 
	}
}

48 
U8
 
	$OnOffA…ôude
()

50 
U8
 
mu8Sound
;

52 if–
	`GëA…idueC⁄fig
(Ë=
TRUE
 )

54 
	`SëA…ôudeC⁄fig
–
FALSE
 );

55 
	`SaveEïromId
–
EEP_ID_HOT_ALTITUDE
 );

57  
SOUND_CANCEL
;

60 
	`SëA…ôudeC⁄fig
–
TRUE
 );

61  
SOUND_SETUP
;

62 
	}
}

64 
U8
 
	$OnA…ôude
()

66 
U8
 
mu8GëA…ôudeC⁄fig
 = 
	`GëA…idueC⁄fig
();

67 i‡–
mu8GëA…ôudeC⁄fig
 =
FALSE
 )

69 
	`SëA…ôudeC⁄fig
–
TRUE
 );

70 
	`SëS≥cülMode
 ( 
SPECIAL_HOT_ALTITUDE
 );

71  
SOUND_SETUP
;

73 
	}
}

75 
U8
 
	$SñA…ôude
()

77 if–
	`GëA…idueC⁄fig
(Ë=
TRUE
 )

79 
U8
 
mu8A…ôude
;

81 
mu8A…ôude
 = 
	`GëHŸW©îA…idue
();

82 
mu8A…ôude
++;

83 if–
mu8A…ôude
 >
ALTITUDE_LEVEL_NUM
 )

85 
mu8A…ôude
 = 
ALTITUDE_LEVEL_0
;

87 
	`SëHŸW©îA…idue
–
mu8A…ôude
 );

90  
SOUND_SELECT
;

91 
	}
}

94 
U8
 
	$OnTimeSh‹t
()

96 
U8
 
mu8Rë
;

97 
S≥cülModeId_T
 
mid
;

99 
mu8Rë
 = 
	`IsExpúedTimeSh‹tLimôTimî
();

100 i‡–
mu8Rë
 =
TRUE
 )

102  
SOUND_NONE
;

105 
	`SèπTimeSh‹t
();

106 
	`SëS≥cülMode
 ( 
SPECIAL_NONE
 );

108  
SOUND_SELECT
;

109 
	}
}

111 
U8
 
	$OnTe°Sh‹tCompTime
()

113 #i‡
CONFIG_TEST


114 
	`SëCompPrŸe˘OffTime
(0);

116  
SOUND_SELECT
;

117 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\special_mode\key_special_handler.h

1 #i‚de‡
__KEY_SPECIAL_HANDLER_H__


2 
	#__KEY_SPECIAL_HANDLER_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"•ecül_mode.h
"

8 
U8
 
IsVÆidS≥cülKeyC⁄dôi⁄
(
U16
 
mu16Key
);

10 * 
GëS≥cülKeyEvítLi°
();

12 
U8
 
GëS≥cülKeyEvítLi°Size
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\special_mode\special_mode.c

1 
	~"•ecül_mode.h
"

4 
	#SPECIAL_LIMIT_TIME
 30U

	)

5 
	#SPECIAL_OPERATING_TIME
 1800U

	)

9 
	s_•ecül_mode_


11 
S≥cülModeId_T
 
	mSètus
;

12 
U16
 
	mLimôTimî
;

13 
U16
 
	mO≥øtögTimî
;

15 } 
	tS≥cülMode_T
;

17 
S≥cülMode_T
 
	gS≥cül
;

20 
	$InôS≥iˇlMode
()

22 
S≥cül
.
Sètus
 = 
SPECIAL_NONE
;

23 
S≥cül
.
LimôTimî
 = 
SPECIAL_LIMIT_TIME
;

24 
S≥cül
.
O≥øtögTimî
 = 
SPECIAL_OPERATING_TIME
;

25 
	}
}

27 
	$SëS≥cülMode
 ( 
S≥cülModeId_T
 
°©us
 )

29 
S≥cül
.
Sètus
 = 
°©us
;

30 
S≥cül
.
O≥øtögTimî
 = 
SPECIAL_OPERATING_TIME
;

31 
	}
}

33 
S≥cülModeId_T
 
	$GëS≥cülMode
 ( )

35  
S≥cül
.
Sètus
;

36 
	}
}

38 
U8
 
	$IsExpúedSïcülModeLimôTimî
()

40 if–
S≥cül
.
LimôTimî
 != 0 )

42  
FALSE
;

44  
TRUE
;

45 
	}
}

47 
	$Upd©eS≥cülModeTimî
()

49 if–
S≥cül
.
LimôTimî
 != 0 )

51 
S≥cül
.
LimôTimî
--;

54 if–
S≥cül
.
O≥øtögTimî
 != 0 )

56 
S≥cül
.
O≥øtögTimî
--;

60 
S≥cül
.
Sètus
 = 
SPECIAL_NONE
;

62 
	}
}

64 
	$Pro˚ssS≥cülMode
()

66 
	`Upd©eS≥cülModeTimî
();

67 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\special_mode\special_mode.h

1 #i‚de‡
__SPECIAL_MODE_H__


2 
	#__SPECIAL_MODE_H__


	)

4 
	~"¥j_ty≥.h
"

8 
	mSPECIAL_NONE
,

9 
	mSPECIAL_WAIT
,

10 
	mSPECIAL_HOT_ALTITUDE
,

12 
	mSPECIAL_MAX


13 }
	tS≥cülModeId_T
;

15 
InôS≥iˇlMode
();

17 
SëS≥cülMode
 ( 
S≥cülModeId_T
 
°©us
 );

18 
S≥cülModeId_T
 
GëS≥cülMode
 ( );

19 
U8
 
IsExpúedSïcülModeLimôTimî
();

21 
Pro˚ssS≥cülMode
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\time_short\time_short.c

1 
	~"time_sh‹t.h
"

3 
	~"comp.h
"

4 
	~"Àvñ.h
"

5 
	~"room_w©î.h
"

6 
	~"cﬁd_w©î.h
"

7 
	~"hŸ_w©î.h
"

8 
	~"îr_room_Àvñ.h
"

9 
	~"timî.h
"

10 
	~"ãmp.h
"

11 
	~"¥o˚ss_di•œy.h
"

24 
	#DEFAULT_LIMIT_TIME_VALUE
 1800U

	)

25 
	#DEFAULT_TEST_TIME_VALUE
 1800U

	)

28 
	s_time_sh‹t_


30 
U8
 
	mSètus
;

31 
U16
 
	mLimôTimî
;

32 
U16
 
	mTe°Timî
;

33 } 
	tTimeSh‹t_T
;

35 
TimeSh‹t_T
 
	gts
;

38 
	$InôTimeSh‹t
()

40 
ts
.
Sètus
 = 
FALSE
;

41 
ts
.
LimôTimî
 = 
DEFAULT_LIMIT_TIME_VALUE
;

42 
ts
.
Te°Timî
 = 
DEFAULT_TEST_TIME_VALUE
;

43 
	}
}

45 
	$SèπTimeSh‹t
()

47 
ts
.
Sètus
 = 
TRUE
;

48 
	}
}

50 
	$St›TimeSh‹t
()

52 
ts
.
Sètus
 = 
FALSE
;

53 
	}
}

55 
U8
 
	$IsExpúedTimeSh‹tLimôTimî
()

57 if–
ts
.
LimôTimî
 != 0 )

59  
FALSE
;

61  
TRUE
;

62 
	}
}

64 
U8
 
	$GëTimeSh‹tSètus
()

66  
ts
.
Sètus
;

67 
	}
}

69 
	$SëTimeSh‹tTe°Timî
(
U16
 
mu16Time
)

71 
ts
.
Te°Timî
 = 
mu16Time
;

72 
	}
}

74 
U16
 
	$GëTimeSh‹tTe°Timî
()

76  
ts
.
Te°Timî
;

77 
	}
}

80 
	$Upd©eTimeSh‹tTimî
()

82 if–
ts
.
LimôTimî
 != 0 )

84 
ts
.
LimôTimî
--;

86 if–
ts
.
Te°Timî
 != 0 )

88 
ts
.
Te°Timî
--;

90 
	}
}

92 
	$Sèπ
()

95 
	`SëT™kC⁄fDëe˘Time
–
LEVEL_ID_ROOM
 , 1 );

96 
	`SëT™kC⁄fDëe˘Time
–
LEVEL_ID_COLD
, 1 );

97 
	`SëT™kC⁄fDëe˘Time
–
LEVEL_ID_HOT
, 1 );

100 
	`SëRoomEºCou¡Limô
( 1, 1 );

103 
	`SëCompPrŸe˘OffTime
( 5 );

106 
	`SëCﬁdW©îInôFuŒ
–
TRUE
 );

107 
	`SëCﬁdW©îC⁄figMake
–
TRUE
 );

110 
	`SëHŸW©îInôFuŒ
–
TRUE
 );

111 
	`SëHŸW©îC⁄figMake
–
TRUE
 );

112 
	}
}

114 
	$Ru¬ög
()

117 if–
	`GëCompPrŸe˘OffTime
() > 5 )

119 
	`SëCompPrŸe˘OffTime
( 5 );

141 if–
	`GëRoomW©îFìdTime
() > 1 )

143 
	`SëRoomW©îFìdTime
( 1 );

146 if–
	`GëRoomW©îLevñ
(Ë=
LEVEL_LOW
 )

148 
	`SëT™kLevñEº‹Cou¡
–
LEVEL_ID_ROOM
, 
ERR_TYPE_COMPLEX
, 0 );

151 
	}
}

153 
	$St›
()

159 
	`InôT™kC⁄fDëe˘Time
();

162 
	`SëRoomEºCou¡Limô
–
DEFAULT_ROOM_ERR_COUNT
, 
DEFAULT_ROOM_ERR_COUNT_HIGH_AND_COMPLEX
 );

163 
	}
}

165 
	$Pro˚ssTimeSh‹t
()

167 
U8
 
mu8InôSèπ
 = 
FALSE
;

168 
U8
 
mu8InôSt›
 = 
TRUE
;

172 if–
mu8InôSèπ
 =
FALSE
 && 
ts
.
Sètus
 =
TRUE
 )

174 
mu8InôSèπ
 = 
TRUE
;

175 
mu8InôSt›
 = 
FALSE
;

176 
	`Sèπ
();

181 if–
mu8InôSt›
 =
FALSE
 && 
ts
.
Sètus
 == FALSE )

183 
mu8InôSt›
 = 
TRUE
;

184 
	`St›
();

188 if–
ts
.
Sètus
 =
FALSE
 )

194 
	`Tu∫OnTempSís‹
–
TEMP_ID_COLD_WATER
, 
DEFAULT_TEMP_READ_TIME
 );

197 if–
ts
.
Te°Timî
 == 0 )

199 
ts
.
Sètus
 = 
FALSE
;

202 
	`Ru¬ög
();

203 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\time_short\time_short.h

1 #i‚de‡
__TIME_SHORT_H__


2 
	#__TIME_SHORT_H__


	)

4 
	~"¥j_ty≥.h
"

6 
InôTimeSh‹t
();

8 
SèπTimeSh‹t
();

9 
St›TimeSh‹t
();

10 
U8
 
IsExpúedTimeSh‹tLimôTimî
();

11 
U8
 
GëTimeSh‹tSètus
();

13 
SëTimeSh‹tTe°Timî
(
U16
 
mu16Time
);

14 
U16
 
GëTimeSh‹tTe°Timî
();

17 
Upd©eTimeSh‹tTimî
();

18 
Pro˚ssTimeSh‹t
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\timer\timer.c

1 #¥agm®
öãºu±
 
INTTM00
 
Ba£TimîI¡îru±


3 
	~"hw.h
"

4 
	~"timî.h
"

6 
	~<°rög.h
>

10 
	#INTS_BYTE
(Ë
_öts_byã


	)

11 
	#MASK_BASE_TIMER
 
TMMK00


	)

12 
	#DISABLE_INT_MASK_BASE_TIMER
(Ëdÿ{ 
MASK_BASE_TIMER
 = 1; }0)

	)

13 
	#ENABLE_INT_MASK_BASE_TIMER
(Ëdÿ{ 
MASK_BASE_TIMER
 = 0; }0)

	)

15 
	#ENTER_CRITICAL_SECTION_TIMER
() \

17 
_öts_byã
 = 
MASK_BASE_TIMER
; \

18 
	`DISABLE_INT_MASK_BASE_TIMER
(); \

19 }0)

	)

21 
	#EXIT_CRITICAL_SECTION_TIMER
() \

23 
MASK_BASE_TIMER
 = 
_öts_byã
; \

24 } 0)

	)

27 
	#HZ
 (1UL)

	)

29 
	s_timî_


31 
U8
 
	míabÀ
;

32 
U8
 
	mty≥
;

33 
U32
 
	mtime_out
;

34 } 
	ttimî_öfo_t
;

36 
LOCAL
 
timî_öfo_t
 
	gtimî_öfo
[ 
MAX_TIMER_ID_NUM
 ];

38 (*
pFunU£rISR
)(Ë
NULL
 ;

41 
	$InôTimî
( )

43 
	`mem£t
–
timî_öfo
, 0, (Åimer_info) );

45 
	`R_TAU0_Ch™√l0_Sèπ
();

46 
	}
}

49 
	$SèπTimî
–
U8
 
id
, 
U32
 
time_out
 )

51 
	`INTS_BYTE
();

53 
	`ENTER_CRITICAL_SECTION_TIMER
();

55 
timî_öfo
[ 
id
 ].
íabÀ
 = 1;

56 
timî_öfo
[ 
id
 ].
time_out
 =Åime_ouà/ 
HZ
;

57 #i‡(
HZ
 != 1UL)

58 if–(
time_out
 % 
HZ
Ë>(
U32
)5 )

60 
timî_öfo
[ 
id
 ].
time_out
++;

64 
	`EXIT_CRITICAL_SECTION_TIMER
();

66 
	}
}

68 
	$DißbÀTimî
–
U8
 
id
 )

70 
timî_öfo
[ 
id
 ].
íabÀ
 = 0;

71 
timî_öfo
[ 
id
 ].
time_out
 = (
U32
)-1;

72 
	}
}

74 
	$St›Timî
–
U8
 
id
 )

76 
	`DißbÀTimî
–
id
 );

77 
	}
}

80 
U8
 
	$IsExpúedTimî
–
U8
 
id
 )

82 
U32
 
time_out
;

83 
	`INTS_BYTE
();

86 
	`ENTER_CRITICAL_SECTION_TIMER
();

87 
time_out
 = 
timî_öfo
[ 
id
 ].time_out;

88 
	`EXIT_CRITICAL_SECTION_TIMER
();

90 if–
timî_öfo
[ 
id
 ].
íabÀ
 == 0 )

92  
TIMER_DISABLE
;

95 if–
time_out
 > 0 )

97  
TIMER_NOT_EXPIRE
;

100  
TIMER_EXPIRE
;

101 
	}
}

104 
	$Upd©eTimî
( )

106 
U8
 
i
;

108  
i
 = 0 ; i < 
MAX_TIMER_ID_NUM
 ; i++ )

110 if–
timî_öfo
[ 
i
 ].
íabÀ
 == 0 )

115 if–
timî_öfo
[ 
i
 ].
time_out
 > 0 )

117 
timî_öfo
[ 
i
 ].
time_out
--;

120 
	}
}

124 
Regi°îTimîISR
–(*
pU£rISR
)() )

126 
pFunU£rISR
 = 
pU£rISR
;

127 
	}
}

131 
	$Ba£TimîI¡îru±
()

133 
	`Upd©eTimî
();

136 if–
pFunU£rISR
 !
NULL
 )

138 
	`pFunU£rISR
();

140 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\timer\timer.h

1 #i‚de‡
__TIMER_H__


2 
	#__TIMER_H__


	)

4 
	~"timî_id.h
"

6 
	#DELAY_MS
(
x
)

	)

7 
	#SEC
–
x
 ) ( ( x ) * 1000UL )

	)

9 
InôTimî
( );

11 
SèπTimî
–
U8
 
id
, 
U32
 
time_out
 );

13 
DißbÀTimî
–
U8
 
id
 );

15 
St›Timî
–
U8
 
id
 );

17 
	#TIMER_EXPIRE
 0

	)

18 
	#TIMER_NOT_EXPIRE
 1

	)

19 
	#TIMER_DISABLE
 2

	)

20 
U8
 
IsExpúedTimî
–U8 
id
 );

24 
Regi°îTimîISR
–(*
pU£rISR
)() );

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\timer\timer_id.h

1 #i‚de‡
__TIMER_ID_H__


2 
	#__TIMER_ID_H__


	)

7 
	mTIMER_ID_COMM_EOL_RX
,

8 
	mTIMER_ID_COMM_EOL_TX
,

10 
	mTIMER_ID_COMM_DEBUG_RX
,

11 
	mTIMER_ID_COMM_DEBUG_TX
,

13 
	mTIMER_ID_1MS
,

14 
	mTIMER_ID_10MS
,

15 
	mTIMER_ID_100MS
,

16 
	mTIMER_ID_1SEC
,

17 
	mTIMER_ID_40SEC
,

18 
	mTIMER_ID_1MIN
,

19 
	mTIMER_ID_DEBUG
,

21 
	mMAX_TIMER_ID_NUM


24 
	#TIMER_ID_ADC_INTERVAL
 10UL

	)

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\util.c

1 
	~"mcu.h
"

2 
	~"utû.h
"

3 
	~"hw.h
"

5 
I16
 
	$GëMö
–
I16
 
x
, I16 
y
 )

7 if–
x
 > 
y
 )

9  
y
;

12  
x
;

13 
	}
}

15 
I16
 
	$GëMax
–
I16
 
x
, I16 
y
 )

17 if–
x
 > 
y
 )

19  
x
;

22  
y
;

23 
	}
}

26 
U8
 
	$Hex2Dec
(
U8
 
mu8Hex
)

28 
U8
 
mu8Dec
;

30 
mu8Dec
 = (
mu8Hex
 & 0x0F);

31 
mu8Dec
 +((
mu8Hex
 & 0xF0) >> 4) * 10;;

33  
mu8Dec
;

34 
	}
}

37 
U8
 
	$Dec2Hex
(
U8
 
mu8Dec
)

39 
U8
 
mu8Hex
;

41 
mu8Hex
 = 
mu8Dec
 % 10;

42 
mu8Hex
 +(
mu8Dec
 / 10) * 16;

44  
mu8Hex
;

45 
	}
}

47 
U8
 
	$C⁄vAsc2Byã
(
U8
 
mu8Uµî
, U8 
mu8Lowî
 )

49 
U8
 
mu8Temp
 = 0;

50 
U8
 
mu8VÆ
 = 0;

54 if–
mu8Uµî
 > '9' )

56 
mu8Temp
 = 
mu8Uµî
 - '7';

60 
mu8Temp
 = 
mu8Uµî
 - '0';

62 
mu8VÆ
 = 
mu8Temp
 * 16;

65 if–
mu8Lowî
 > '9' )

67 
mu8Temp
 = 
mu8Lowî
 - '7';

71 
mu8Temp
 = 
mu8Lowî
 - '0';

73 
mu8VÆ
 +
mu8Temp
;

76  
mu8VÆ
;

77 
	}
}

79 
	$Dñay_US
–
U8
 
us
 )

81  
us
-- )

83 
	`NOP
();

84 
	`NOP
();

85 
	`NOP
();

87 
	}
}

89 
U16
 
	$ByãOrdîC⁄v
–
U16
 
_§c
 )

91 
U16
 
h_to_l
 = 
_§c
 >> 8;

92 
U16
 
l_to_h
 = ( 
_§c
 & 0x00FF ) << 8;

94  ( 
l_to_h
 | 
h_to_l
 );

95 
	}
}

97 
	$Dñay_MS
–
U16
 
ms
 )

99 
U16
 
i
;

100 
U8
 
j
;

102  
i
 = 0 ; i < 
ms
 ; i++ )

104  
j
 = 0; j < 4 ; j++ )

106 
	`Dñay_US
( 250 );

107 
	`R_WDT_Re°¨t
();

110 
	}
}

112 
	$Re£t
()

118 
	}
}

120 
U8
 
	$CheckLimôVÆue
(
U8
 
mu8VÆ
, U8 
mu8Mö
, U8 
mu8Max
, U8 
mu8Inô
)

122 if–
mu8VÆ
 < 
mu8Mö
 || mu8VÆ > 
mu8Max
 )

124  
mu8Inô
;

127  
mu8VÆ
;

128 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\util.h

1 #i‚de‡
__UTIL_H__


2 
	#__UTIL_H__


	)

4 
	~"¥j_ty≥.h
"

6 
	#GET_HIGH_BYTE
(
vÆ
Ë(
U8
)(((vÆ)&0xFF00Ë>> 8)

	)

7 
	#GET_LOW_BYTE
(
vÆ
Ë(
U8
)((vÆ)&0x00FF)

	)

8 
	#GET_UINT_WORD
(
lb
, 
hb
Ë((((
U16
)hb)<<8)|lb)

	)

10 
	#GET_32_BYTE_8
(
vÆ
Ë(
U8
)(((vÆ)&0x000000FF))

	)

11 
	#GET_32_BYTE_16
(
vÆ
Ë(
U8
)(((vÆ)&0x0000FF00)>>8)

	)

12 
	#GET_32_BYTE_24
(
vÆ
Ë(
U8
)(((vÆ)&0x00FF0000)>>16)

	)

13 
	#GET_32_BYTE_32
(
vÆ
Ë(
U8
)(((vÆ)&0xFF000000)>>24)

	)

14 
	#GET_UINT_WORD_32
(
b32
, 
b24
, 
b16
, 
b8
) \

16 –((
U32
)
b32
)<<24 ) |\

17 –((
U32
)
b24
)<<16 ) |\

18 –((
U32
)
b16
)<<8 ) |\

19 –(
U32
)
b8
) \

20 )

	)

22 
	#SET_BIT_BYTE
(
vÆ
,
bô
Ëdo{ vÆ |(
U8
)(bô); }0)

	)

23 
	#CLEAR_BIT_BYTE
(
vÆ
,
bô
Ëdo{ vÆ &(
U8
)(~bô); }0)

	)

25 
	#SET_BIT_WORD
(
vÆ
,
bô
Ëdo{ vÆ |(
U16
)(bô); }0)

	)

26 
	#CLEAR_BIT_WORD
(
vÆ
,
bô
Ëdo{ vÆ &(
U16
)(~bô); }0)

	)

28 
	#DOWN_COUNT
(
vÆ
) \

30 if–
vÆ
 != 0 ) { val--; } \

31 }0)

	)

33 
	#DOWN_COUNT_RELOAD
(
vÆ
,
ªlﬂd
) \

35 if–
vÆ
 != 0 ){ val--;}\

36 { 
vÆ
=
ªlﬂd
;} \

37 }0)

	)

39 
I16
 
GëMö
–I16 
x
, I16 );

40 
I16
 
GëMax
–I16 
x
, I16 
y
 );

42 
U8
 
Hex2Dec
(U8 
mu8Hex
);

43 
U8
 
Dec2Hex
(U8 
mu8Dec
);

45 
U8
 
C⁄vAsc2Byã
(U8 
mu8Uµî
, U8 
mu8Lowî
 );

46 
U16
 
ByãOrdîC⁄v
–U16 
_§c
 );

48 
Dñay_US
–
U8
 
us
 );

49 
Dñay_MS
–
U16
 
ms
 );

51 
Re£t
();

56 
U8
 
CheckLimôVÆue
(U8 
mu8VÆ
, U8 
mu8Mö
, U8 
mu8Max
, U8 
mu8Inô
);

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\cold_water.c

1 
	~"cﬁd_w©î.h
"

2 
	~"room_w©î.h
"

3 
	~"Àvñ.h
"

4 
	~"ãmp.h
"

5 
	~"vÆve.h
"

6 
	~"îr‹.h
"

7 
	~"comp.h
"

8 
	~"ì¥om.h
"

12 
	#PROTECT_COLD_TEMP
 0.0f

	)

13 
	#COLD_OFF_TEMP
 4.5f

	)

16 c⁄° 
TEMP_T
 
	gOnTemp
 = 6.8f;

17 c⁄° 
TEMP_T
 
	gOffTemp
 = 
COLD_OFF_TEMP
;

20 
	#COLD_TANK_FEED_TIME
 600U

	)

23 
	#EXTRA_MAKE_TIME_LONG
 1020U

	)

24 
	#EXTRA_MAKE_TIME_SHORT
 540U

	)

25 
	#EXTRA_MAKE_CHECK_TIME
 60U

	)

27 
CﬁdW©î_T
 
	gCﬁd
;

30 
	$InôCﬁdW©î
()

32 
Cﬁd
.
InôFuŒ
 = 
FALSE
;

33 
Cﬁd
.
Levñ
 = 
LEVEL_HIGH
;

34 
Cﬁd
.
C⁄figMake
 = 
TRUE
;

35 
Cﬁd
.
Make
 = 
FALSE
;

36 
Cﬁd
.
Mode
 = 
COLD_MODE_INIT
;

37 
Cﬁd
.
TempT¨gëOn
 = 
OnTemp
;

38 
Cﬁd
.
TempT¨gëOff
 = 
OffTemp
;

39 
Cﬁd
.
TempCuºít
 = 
	`GëTemp
–
TEMP_ID_COLD_WATER
 );

40 
Cﬁd
.
FìdTime
 = 
COLD_TANK_FEED_TIME
;

41 
Cﬁd
.
ExåaFìdTime
 = 
EXTRA_FEED_TIME
;

43 
Cﬁd
.
ExåaMake
 = 
FALSE
;

44 
Cﬁd
.
ExåaMakeTime
 = 0;

45 
Cﬁd
.
ExåaMakeCheckTime
 = 0;

46 
	}
}

49 
	$GëCﬁdW©îD©a
(
CﬁdW©î_T
 *
pD©a
)

51 
	`mem˝y
–
pD©a
, &
Cﬁd
, –
CﬁdW©î_T
 ));

52 
	}
}

54 
	$SëCﬁdW©îInôFuŒ
(
U8
 
mu8VÆ
 )

56 
Cﬁd
.
InôFuŒ
 = 
mu8VÆ
;

57 
	}
}

59 
U8
 
	$GëCﬁdW©îInôFuŒ
()

61  
Cﬁd
.
InôFuŒ
;

62 
	}
}

65 
	$SëCﬁdW©îLevñ
(
U8
 
mu8VÆ
 )

67 
Cﬁd
.
Levñ
 = 
mu8VÆ
;

68 
	}
}

70 
U8
 
	$GëCﬁdW©îLevñ
()

72  
Cﬁd
.
Levñ
;

73 
	}
}

75 
	$SëCﬁdW©îC⁄figMake
(
U8
 
mu8VÆ
 )

77 if–
mu8VÆ
 !
TRUE
 && mu8VÆ !
FALSE
 )

82 
Cﬁd
.
C⁄figMake
 = 
mu8VÆ
;

84 
	`SaveEïromId
–
EEP_ID_CONF_MAKE_COLD
 );

85 
	}
}

87 
U8
 
	$GëCﬁdW©îC⁄figMake
()

89  
Cﬁd
.
C⁄figMake
;

90 
	}
}

93 
	$SëCﬁdW©îMake
(
U8
 
mu8VÆ
 )

95 
Cﬁd
.
Make
 = 
mu8VÆ
;

96 
	}
}

98 
U8
 
	$GëCﬁdW©îMake
()

100  
Cﬁd
.
Make
;

101 
	}
}

104 
	$SëCﬁdW©îFìdTime
(
U16
 
mu16Time
 )

106 
Cﬁd
.
FìdTime
 = 
mu16Time
;

107 
	}
}

109 
U16
 
	$GëCﬁdW©îFìdTime
()

111  
Cﬁd
.
FìdTime
;

112 
	}
}

114 
	$SëCﬁdW©îMakeMode
(
U8
 
mu8Mode
 )

116 
Cﬁd
.
Mode
 |
mu8Mode
;

117 
	}
}

119 
	$CÀ¨CﬁdW©îMakeMode
(
U8
 
mu8Mode
 )

121 
Cﬁd
.
Mode
 &~
mu8Mode
;

122 
	}
}

124 
U8
 
	$IsSëCﬁdW©îMakeMode
(
U8
 
mu8Mode
 )

126 if–(
Cﬁd
.
Mode
 & 
mu8Mode
 ) == mu8Mode )

128  
TRUE
;

131  
FALSE
;

132 
	}
}

134 
U8
 
	$GëCﬁdW©îMakeMode
()

136  
Cﬁd
.
Mode
;

137 
	}
}

141 
	$SëCﬁdW©îExåaMakeTime
(
U16
 
mu16Time
 )

143 
Cﬁd
.
ExåaMakeTime
 = 
mu16Time
;

144 
	}
}

146 
U16
 
	$GëCﬁdW©îExåaMakeTime
()

148  
Cﬁd
.
ExåaMakeTime
;

149 
	}
}

156 
	$C⁄åﬁCﬁdW©îLevñ
()

158 
Cﬁd
.
Levñ
 = 
	`GëT™kLevñ
–
LEVEL_ID_COLD
 );

160 if–
Cﬁd
.
Levñ
 =
LEVEL_HIGH
 )

162 
	`SëCﬁdW©îInôFuŒ
–
TRUE
 );

164 
	}
}

167 
U8
 
	$IsVÆidMake
()

170 if–
Cﬁd
.
C⁄figMake
 =
FALSE
 )

172  
FALSE
 ;

177 if–
Cﬁd
.
InôFuŒ
 =
FALSE
 )

179  
FALSE
;

183 if–
	`IsExpúedCompPrŸe˘Time
(Ë=
FALSE
 )

185  
FALSE
;

189 if–
	`IsOvîCompPrŸe˘OnTime
(Ë=
TRUE
 )

191  
FALSE
;

195 i‡–
	`IsOvîCompPrŸe˘Sec⁄dOnTime
(Ë=
TRUE
 )

197  
FALSE
;

201 if–
	`IsEº‹Ty≥CﬁdW©î
(Ë=
TRUE
 )

203  
FALSE
;

206  
TRUE
;

207 
	}
}

210 
TEMP_T
 
	$GëT¨gëCﬁdOnTemp
()

213  
OnTemp
;

214 
	}
}

216 
TEMP_T
 
	$GëT¨gëCﬁdOffTemp
()

218  
OffTemp
;

219 
	}
}

223 
	$Upd©eExåaMakeTime
()

225 if–
	`GëCompOnOff
(Ë=
OFF
 )

230 i‡–
Cﬁd
.
ExåaMake
 =
TRUE
 )

232 i‡–
Cﬁd
.
ExåaMakeTime
 != 0 )

234 
Cﬁd
.
ExåaMakeTime
--;

238 
Cﬁd
.
ExåaMakeCheckTime
 = 0;

241 
	}
}

243 
	$SëExåaMakeCheckTime
 ( )

245 i‡–
Cﬁd
.
ExåaMakeCheckTime
 < 
EXTRA_MAKE_CHECK_TIME
 )

247 
Cﬁd
.
ExåaMakeCheckTime
++;

249 i‡–
Cﬁd
.
ExåaMakeCheckTime
 =
EXTRA_MAKE_CHECK_TIME
 )

251 
Cﬁd
.
ExåaMakeCheckTime
++;

253 i‡–
Cﬁd
.
TempCuºít
 > 30.0f )

255 
Cﬁd
.
ExåaMakeTime
 = 
EXTRA_MAKE_TIME_LONG
;

257 i‡–
Cﬁd
.
TempCuºít
 > 15.0f )

259 
Cﬁd
.
ExåaMakeTime
 = 
EXTRA_MAKE_TIME_SHORT
;

263 
Cﬁd
.
ExåaMakeTime
 = 0;

269 
	}
}

273 
	$MakeCﬁdW©î
()

275 
U8
 
mu8Make
 = 
FALSE
;

277 
	`Upd©eExåaMakeTime
();

280 
mu8Make
 = 
	`GëCﬁdW©îMake
();

283 
Cﬁd
.
TempT¨gëOn
 = 
	`GëT¨gëCﬁdOnTemp
();

284 
Cﬁd
.
TempT¨gëOff
 = 
	`GëT¨gëCﬁdOffTemp
();

285 
Cﬁd
.
TempCuºít
 = 
	`GëTemp
–
TEMP_ID_COLD_WATER
 );

290 if–
Cﬁd
.
ExåaMake
 =
TRUE
 )

292 
mu8Make
 = 
FALSE
;

295 if–
mu8Make
 =
TRUE
 )

298 if–
Cﬁd
.
TempT¨gëOff
 >Cﬁd.
TempCuºít
 )

301 
Cﬁd
.
ExåaMake
 = 
TRUE
;

302 
mu8Make
 = 
FALSE
;

306 
	`SëExåaMakeCheckTime
();

311 if–
Cﬁd
.
TempT¨gëOn
 <Cﬁd.
TempCuºít
 )

313 
mu8Make
 = 
TRUE
;

318 if–
Cﬁd
.
ExåaMakeTime
 != 0 )

320 
mu8Make
 = 
TRUE
;

322 i‡–
Cﬁd
.
TempCuºít
 <
PROTECT_COLD_TEMP
 )

324 
mu8Make
 = 
FALSE
;

325 
Cﬁd
.
ExåaMakeTime
 = 0;

326 
Cﬁd
.
ExåaMakeCheckTime
 = 0;

332 
Cﬁd
.
ExåaMake
 = 
FALSE
;

337 if–
Cﬁd
.
TempCuºít
 <
PROTECT_COLD_TEMP
 )

339 
mu8Make
 = 
FALSE
;

340 
Cﬁd
.
ExåaMakeTime
 = 0;

345 if–
	`IsVÆidMake
(Ë=
FALSE
 )

347 
mu8Make
 = 
FALSE
;

348 
Cﬁd
.
ExåaMakeTime
 = 0;

349 
Cﬁd
.
ExåaMakeCheckTime
 = 0;

353 
	`SëCﬁdW©îMake
–
mu8Make
 );

354 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\cold_water.h

1 #i‚de‡
__COLD_WATER_H__


2 
	#__COLD_WATER_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"Àvñ.h
"

9 
	#EXTRA_FEED_TIME
 180U

	)

11 
	s_cﬁd_w©î_


13 
U8
 
	mInôFuŒ
;

14 
U8
 
	mLevñ
;

17 
U8
 
	mC⁄figMake
;

18 
U8
 
	mMake
;

21 
U8
 
	mMode
;

24 
TEMP_T
 
	mTempT¨gëOn
;

25 
TEMP_T
 
	mTempT¨gëOff
;

26 
TEMP_T
 
	mTempCuºít
;

28 
U16
 
	mFìdTime
;

29 
U16
 
	mExåaFìdTime
;

31 
U8
 
	mExåaMake
;

32 
U16
 
	mExåaMakeTime
;

33 
U16
 
	mExåaMakeCheckTime
;

35 } 
	tCﬁdW©î_T
;

38 
InôCﬁdW©î
();

39 
GëCﬁdW©îD©a
(
CﬁdW©î_T
 *
pD©a
);

42 
SëCﬁdW©îInôFuŒ
(
U8
 
mu8VÆ
 );

43 
U8
 
GëCﬁdW©îInôFuŒ
();

46 
SëCﬁdW©îLevñ
(
U8
 
mu8VÆ
 );

47 
U8
 
GëCﬁdW©îLevñ
();

50 
SëCﬁdW©îC⁄figMake
(
U8
 
mu8VÆ
 );

51 
U8
 
GëCﬁdW©îC⁄figMake
();

54 
SëCﬁdW©îMake
(
U8
 
mu8VÆ
 );

55 
U8
 
GëCﬁdW©îMake
();

58 
SëCﬁdW©îFìdTime
(
U16
 
mu16Time
 );

59 
U16
 
GëCﬁdW©îFìdTime
();

62 
	#COLD_MODE_NONE
 0x00

	)

63 
	#COLD_MODE_INIT
 0x01

	)

64 
	#COLD_MODE_COOLING
 0x02

	)

65 
	#COLD_MODE_DONE
 0x08

	)

66 
	#COLD_MODE_ALL
 0xFF

	)

67 
SëCﬁdW©îMakeMode
(
U8
 
mu8Mode
 );

68 
CÀ¨CﬁdW©îMakeMode
(
U8
 
mu8Mode
 );

69 
U8
 
IsSëCﬁdW©îMakeMode
(U8 
mu8Mode
 );

70 
U8
 
GëCﬁdW©îMakeMode
();

74 
SëCﬁdW©îExåaMakeTime
(
U16
 
mu16Time
 );

75 
U16
 
GëCﬁdW©îExåaMakeTime
();

78 
C⁄åﬁCﬁdW©îLevñ
();

80 
TEMP_T
 
GëT¨gëCﬁdOnTemp
();

81 
TEMP_T
 
GëT¨gëCﬁdOffTemp
();

84 
MakeCﬁdW©î
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\hot_water.c

1 
	~"hŸ_w©î.h
"

2 
	~"room_w©î.h
"

3 
	~"cﬁd_w©î.h
"

4 
	~"Àvñ.h
"

5 
	~"ãmp.h
"

6 
	~"ì¥om.h
"

8 
	~"îr‹.h
"

9 
	~"room_w©î.h
"

10 
	~"vÆve.h
"

13 
	#USE_SAVING_TEMP
 0

	)

14 
	#CONFIG_HOT_WATER_AIRFLOW
 0

15 

	)

17 
	#PROTECT_HOT_TEMP
 98.0f

	)

19 
	#WAIT_TIME
 5

20 
	#AIR_FLOW_TIME
 3000

21 
	#WAIT_HEATING_TIME
 900

22 

	)

25 
	#OVER_TEMP
 0

	)

26 
	#UNDER_TEMP
 1

	)

27 
	#DEFAULT_TEMP_TIME
 5

28 
	#AMBI_LIMIT_TEMP
 20.0f

	)

31 c⁄° 
TEMP_T
 
	gOnTempLi°
[ 
ALTITUDE_LEVEL_NUM
 ] = { 82.0f, 79.0f, 68.0f, 53.0f };

32 c⁄° 
TEMP_T
 
	gOffTempLi°
[ 
ALTITUDE_LEVEL_NUM
 ] = { 93.0f, 90.0f, 84.0f, 58.0f };

35 
HŸW©î_T
 
	gHŸ
;

38 
	$InôHŸW©î
()

40 
HŸ
.
InôWaôTime
 = 
WAIT_TIME
;

41 
HŸ
.
InôFuŒ
 = 
FALSE
;

42 
HŸ
.
Levñ
 = 
LEVEL_LOW
;

44 
HŸ
.
C⁄figMake
 = 
TRUE
;

45 
HŸ
.
Make
 = 
FALSE
;

46 
HŸ
.
MakeDñay
 = 
WAIT_HEATING_TIME
;

48 
HŸ
.
A…ôude
 = 
ALTITUDE_LEVEL_0
;

50 
HŸ
.
Savög
.
C⁄fig
 = 
FALSE
;

51 
HŸ
.
Savög
.
Run
 = 
FALSE
;

53 
HŸ
.
Savög
.
OnTime
 = 
UNUSED_SAVING_ON_10HOUR
;

54 
HŸ
.
Savög
.
RunTime
 = 0U;

56 
HŸ
.
Savög
.
TempSètus
 = 
OVER_TEMP
;

57 
HŸ
.
Savög
.
TempUndîTime
 = 
DEFAULT_TEMP_TIME
;

58 
HŸ
.
Savög
.
TempOvîTime
 = 
DEFAULT_TEMP_TIME
;

60 
	}
}

62 
	$GëHŸW©îD©a
–
HŸW©î_T
 *
pD©a
 )

64 
	`mem˝y
–
pD©a
, &
HŸ
, –
HŸW©î_T
 ));

65 
	}
}

67 
	$SëHŸW©îInôFuŒ
(
U8
 
mu8VÆ
 )

69 
HŸ
.
InôFuŒ
 = 
mu8VÆ
;

70 
	}
}

72 
U8
 
	$GëHŸW©îInôFuŒ
()

74  
HŸ
.
InôFuŒ
;

75 
	}
}

78 
	$SëHŸW©îUnu£dOnTime
(
U16
 
mu16OnTime
)

80 
HŸ
.
Savög
.
OnTime
 = 
mu16OnTime
;

81 
	}
}

83 
U16
 
	$GëHŸW©îUnu£dOnTime
()

85  
HŸ
.
Savög
.
OnTime
;

86 
	}
}

89 
	$SëHŸW©îLevñ
(
U8
 
mu8VÆ
 )

91 
HŸ
.
Levñ
 = 
mu8VÆ
;

92 
	}
}

94 
U8
 
	$GëHŸW©îLevñ
()

96  
HŸ
.
Levñ
;

97 
	}
}

99 
	$SëHŸW©îC⁄figMake
(
U8
 
mu8VÆ
 )

101 if–
mu8VÆ
 !
TRUE
 && mu8VÆ !
FALSE
 )

105 
HŸ
.
C⁄figMake
 = 
mu8VÆ
;

107 
	`SaveEïromId
–
EEP_ID_CONF_MAKE_HOT
 );

108 
	}
}

110 
U8
 
	$GëHŸW©îC⁄figMake
()

112  
HŸ
.
C⁄figMake
;

113 
	}
}

116 
	$SëHŸW©îMake
(
U8
 
mu8VÆ
 )

118 
HŸ
.
Make
 = 
mu8VÆ
;

119 
	}
}

121 
U8
 
	$GëHŸW©îMake
()

123  
HŸ
.
Make
;

124 
	}
}

127 
	$SëHŸW©îA…idue
(
U8
 
mu8VÆ
 )

129 if–
mu8VÆ
 < 
ALTITUDE_LEVEL_NUM
 )

131 
HŸ
.
A…ôude
 = 
mu8VÆ
;

133 
	`SaveEïromId
–
EEP_ID_HOT_ALTITUDE
 );

135 
	}
}

137 
U8
 
	$GëHŸW©îA…idue
()

139  
HŸ
.
A…ôude
;

140 
	}
}

145 
	$Upd©eHŸMakeDñay
()

147 
HŸ
.
MakeDñay
 = 0U;

148 
	}
}

151 
	$C⁄åﬁHŸW©îLevñ
()

154 
HŸ
.
Levñ
 = 
	`GëT™kLevñ
–
LEVEL_ID_HOT
 );

156 if–
HŸ
.
Levñ
 =
LEVEL_HIGH
 )

158 
HŸ
.
InôFuŒ
 = 
TRUE
;

160 
	}
}

163 
U8
 
	$IsVÆidMake
()

165 if–
HŸ
.
InôWaôTime
 != 0 )

167  
FALSE
;

171 if–
HŸ
.
C⁄figMake
 =
FALSE
 )

173  
FALSE
 ;

176 if–
HŸ
.
InôFuŒ
 =
FALSE
 )

178  
FALSE
;

182 if–
	`IsEº‹Ty≥HŸW©î
(Ë=
TRUE
 )

184  
FALSE
;

188 if–
HŸ
.
Levñ
 =
LEVEL_MID


189 || 
HŸ
.
Levñ
 =
LEVEL_HIGH
 )

191  
TRUE
 ;

194  
FALSE
;

195 
	}
}

197 
TEMP_T
 
	$GëT¨gëHŸOnTemp
(
U8
 
mu8A…ôude
)

199 if–
mu8A…ôude
 >
ALTITUDE_LEVEL_NUM
 )

201 
mu8A…ôude
 = 0;

204  
OnTempLi°
[ 
mu8A…ôude
 ];

205 
	}
}

207 
TEMP_T
 
	$GëT¨gëHŸOffTemp
(
U8
 
mu8A…ôude
 )

209 if–
mu8A…ôude
 >
ALTITUDE_LEVEL_NUM
 )

211 
mu8A…ôude
 = 0;

214  
OffTempLi°
[ 
mu8A…ôude
 ];

215 
	}
}

217 
U8
 
	$CheckLevñOnHótög
()

219 
U8
 
mu8PªvSètus
 = 
LEVEL_LOW
;

220 
U8
 
mu8CurSètus
;

224 
mu8CurSètus
 = 
	`GëT™kLevñ
–
LEVEL_ID_ROOM
 );

225 if–
mu8PªvSètus
 !
mu8CurSètus
 )

227 if–
mu8PªvSètus
 =
LEVEL_LOW


228 && 
mu8CurSètus
 !
LEVEL_LOW
 )

230 
HŸ
.
MakeDñay
 = 
WAIT_HEATING_TIME
;

232 
mu8PªvSètus
 = 
mu8CurSètus
;

237 if–
	`GëRoomW©îInôFuŒ
(Ë=
FALSE
 )

239 
HŸ
.
MakeDñay
 = 
WAIT_HEATING_TIME
;

241  
FALSE
;

245 if–
HŸ
.
MakeDñay
 != 0 )

247 
HŸ
.
MakeDñay
--;

248 
HŸ
.
Make
 = 
FALSE
;

250  
FALSE
;

253  
TRUE
;

254 
	}
}

256 
	$Upd©eTime
()

258 if–
HŸ
.
InôWaôTime
 != 0 )

260 
HŸ
.
InôWaôTime
--;

264 if–
HŸ
.
Savög
.
Run
 =
TRUE
 )

266 if–
HŸ
.
Savög
.
RunTime
 < 60000U )

268 
HŸ
.
Savög
.
RunTime
++;

271 
	}
}

273 
	$MakeHŸW©î
()

275 
	`Upd©eTime
();

278 
HŸ
.
TempT¨gëOn
 = 
	`GëT¨gëHŸOnTemp
–HŸ.
A…ôude
 );

279 
HŸ
.
TempT¨gëOff
 = 
	`GëT¨gëHŸOffTemp
–HŸ.
A…ôude
 );

280 
HŸ
.
TempCuºít
 = 
	`GëTemp
–
TEMP_ID_HOT_WATER
 );

289 if–
	`IsVÆidMake
(Ë=
FALSE
 )

291 
HŸ
.
Make
 = 
FALSE
;

296 if–
HŸ
.
Make
 =
TRUE
 )

298 if–
HŸ
.
TempT¨gëOff
 <HŸ.
TempCuºít
 )

300 
HŸ
.
Make
 = 
FALSE
;

306 if–
HŸ
.
TempT¨gëOn
 >HŸ.
TempCuºít
 )

308 
HŸ
.
Make
 = 
TRUE
;

313 if–
HŸ
.
TempCuºít
 >
PROTECT_HOT_TEMP
 )

315 
HŸ
.
Make
 = 
FALSE
;

317 
	}
}

320 
	$SëUnu£dSavögC⁄fig
(
U8
 
mu8VÆ
 )

322 if–
mu8VÆ
 !
TRUE
 && mu8VÆ !
FALSE
 )

327 
HŸ
.
Savög
.
C⁄fig
 = 
mu8VÆ
;

328 
	}
}

329 
U8
 
	$GëUnu£dSavögC⁄fig
()

331  
HŸ
.
Savög
.
C⁄fig
;

332 
	}
}

335 
	$SëUnu£dSavög
(
U8
 
mu8VÆ
 )

337 
HŸ
.
Savög
.
Run
 = 
mu8VÆ
;

338 
	}
}

340 
U8
 
	$GëUnu£dSavög
()

342  
HŸ
.
Savög
.
Run
;

343 
	}
}

346 
	$Re£tUnu£dSavögTime
()

348 
HŸ
.
Savög
.
Run
 = 
FALSE
;

350 
HŸ
.
Savög
.
RunTime
 = 0;

351 
HŸ
.
Savög
.
OnTime
 = 
UNUSED_SAVING_ON_6HOUR
;

352 
	}
}

354 #i‡
USE_SAVING_TEMP


356 
	$Cou¡TempDñayTime
()

359 if–
	`GëTemp
–
TEMP_ID_AMBIENT
 ) > 20.0f )

361 if–
HŸ
.
Savög
.
TempOvîTime
 != 0 )

363 
HŸ
.
Savög
.
TempOvîTime
--;

365 
HŸ
.
Savög
.
TempUndîTime
 = 
DEFAULT_TEMP_TIME
;

369 if–
HŸ
.
Savög
.
TempUndîTime
 != 0 )

371 
HŸ
.
Savög
.
TempUndîTime
--;

373 
HŸ
.
Savög
.
TempOvîTime
 = 
DEFAULT_TEMP_TIME
;

377 if–
HŸ
.
Savög
.
TempOvîTime
 == 0 )

379 
HŸ
.
Savög
.
TempSètus
 = 
OVER_TEMP
;

381 if–
HŸ
.
Savög
.
TempUndîTime
 == 0 )

383 
HŸ
.
Savög
.
TempSètus
 = 
UNDER_TEMP
;

385 
	}
}

389 
	$Pro˚ssUnu£dSavög
()

391 #i‡
USE_SAVING_TEMP


392 
	`Cou¡TempDñayTime
();

396 if–
HŸ
.
Savög
.
C⁄fig
 =
FALSE
 )

398 
	`Re£tUnu£dSavögTime
();

403 #i‡
USE_SAVING_TEMP


404 if–
HŸ
.
Savög
.
Run
 =
TRUE
 )

406 if–
HŸ
.
Savög
.
TempSètus
 =
UNDER_TEMP
 )

408 
	`Re£tUnu£dSavögTime
();

415 if–
	`GëRoomW©îLevñ
(Ë!
LEVEL_HIGH
 )

417 
	`Re£tUnu£dSavögTime
();

421 if–
HŸ
.
Savög
.
OnTime
 != 0 )

423 
HŸ
.
Savög
.
OnTime
--;

427 #i‡
USE_SAVING_TEMP


428 if–
HŸ
.
Savög
.
TempSètus
 =
OVER_TEMP
 )

431 
HŸ
.
Savög
.
Run
 = 
TRUE
;

434 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\hot_water.h

1 #i‚de‡
__HOT_WATER_H__


2 
	#__HOT_WATER_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"Àvñ.h
"

8 
	#ALTITUDE_LEVEL_0
 0

	)

9 
	#ALTITUDE_LEVEL_1
 1

	)

10 
	#ALTITUDE_LEVEL_2
 2

	)

11 
	#ALTITUDE_LEVEL_3
 3

	)

12 
	#ALTITUDE_LEVEL_NUM
 4

	)

16 
	#UNUSED_SAVING_ON_10HOUR
 36000U

17 
	#UNUSED_SAVING_ON_6HOUR
 21600U

18 
	#UNUSED_SAVING_ON_9HOUR
 32400U

19 

	)

21 
	s_hŸ_w©î_unu£d_


24 
U8
 
	mC⁄fig
;

25 
U8
 
	mRun
;

27 
U16
 
	mOnTime
;

28 
U16
 
	mRunTime
;

30 
U16
 
	mTempSètus
;

31 
U16
 
	mTempOvîTime
;

32 
U16
 
	mTempUndîTime
;

34 } 
	tUnu£dSavög_T
;

36 
	s_hŸ_w©î_


38 
U8
 
	mInôWaôTime
;

39 
U8
 
	mInôFuŒ
;

40 
U8
 
	mLevñ
;

42 
U8
 
	mC⁄figMake
;

43 
U8
 
	mMake
;

44 
U16
 
	mMakeDñay
;

47 
TEMP_T
 
	mTempT¨gëOn
;

48 
TEMP_T
 
	mTempT¨gëOff
;

49 
TEMP_T
 
	mTempCuºít
;

52 
U8
 
	mA…ôude
;

55 
Unu£dSavög_T
 
	mSavög
;

56 } 
	tHŸW©î_T
;

58 
InôHŸW©î
();

59 
GëHŸW©îD©a
–
HŸW©î_T
 *
pD©a
 );

61 
SëHŸW©îInôFuŒ
(
U8
 
mu8VÆ
 );

62 
U8
 
GëHŸW©îInôFuŒ
();

64 
SëHŸW©îUnu£dOnTime
(
U16
 
mu16OnTime
);

65 
U16
 
GëHŸW©îUnu£dOnTime
();

67 
SëHŸW©îLevñ
(
U8
 
mu8VÆ
 );

68 
U8
 
GëHŸW©îLevñ
();

70 
SëHŸW©îC⁄figMake
(
U8
 
mu8VÆ
 );

71 
U8
 
GëHŸW©îC⁄figMake
();

73 
SëHŸW©îMake
(
U8
 
mu8VÆ
 );

74 
U8
 
GëHŸW©îMake
();

76 
SëHŸW©îA…idue
(
U8
 
mu8VÆ
 );

77 
U8
 
GëHŸW©îA…idue
();

79 
TEMP_T
 
GëT¨gëHŸOnTemp
(
U8
 
mu8A…ôude
);

80 
TEMP_T
 
GëT¨gëHŸOffTemp
(
U8
 
mu8A…ôude
 );

83 
Upd©eHŸMakeDñay
();

84 
Upd©eHŸAúFlowTime
();

86 
C⁄åﬁHŸW©îLevñ
();

87 
MakeHŸW©î
();

90 
SëUnu£dSavögC⁄fig
(
U8
 
mu8VÆ
 );

91 
U8
 
GëUnu£dSavögC⁄fig
();

93 
SëUnu£dSavög
(
U8
 
mu8VÆ
 );

94 
U8
 
GëUnu£dSavög
();

96 
Re£tUnu£dSavögTime
();

97 
Pro˚ssUnu£dSavög
();

100 
SèπHŸW©îAúFlow
();

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\room_water.c

1 
	~"room_w©î.h
"

2 
	~"Àvñ.h
"

3 
	~"vÆve.h
"

4 
	~"„ed_pump.h
"

5 
	~"îr‹.h
"

8 
	#ROOM_FEED_TIME
 9000U

	)

10 
RoomW©î_T
 
	gRoom
;

13 
	$InôRoomW©î
()

15 
Room
.
InôFuŒ
 = 
FALSE
;

16 
Room
.
Levñ
 = 
LEVEL_HIGH
;

17 
Room
.
FìdTime
 = 
ROOM_FEED_TIME
;

18 
	}
}

20 
	$GëRoomW©îD©a
(
RoomW©î_T
 *
pD©a
)

22 
	`mem˝y
–
pD©a
, &
Room
, –
RoomW©î_T
 ));

23 
	}
}

25 
	$SëRoomW©îLevñ
(
U8
 
mu8VÆ
 )

27 
Room
.
Levñ
 = 
mu8VÆ
;

28 
	}
}

30 
U8
 
	$GëRoomW©îLevñ
()

32  
Room
.
Levñ
;

33 
	}
}

35 
	$SëRoomW©îInôFuŒ
(
U8
 
mu8VÆ
 )

37 
Room
.
InôFuŒ
 = 
mu8VÆ
;

38 
	}
}

40 
U8
 
	$GëRoomW©îInôFuŒ
()

42  
Room
.
InôFuŒ
;

43 
	}
}

45 
U8
 
	$IsEº‹RoomW©îLevñ
()

47 if–
	`IsEº‹Ty≥NosFìd
(Ë=
TRUE
 )

49  
TRUE
;

52  
FALSE
;

53 
	}
}

56 
	$SëRoomW©îFìdTime
(
U16
 
mu16Time
 )

58 
Room
.
FìdTime
 = 
mu16Time
;

59 
	}
}

61 
U16
 
	$GëRoomW©îFìdTime
()

63  
Room
.
FìdTime
;

64 
	}
}

66 
	$Clo£NosFìdVÆve
()

68 
	`Clo£VÆvePump
–
VALVE_FEED
 );

69 
	`Clo£VÆvePump
–
VALVE_NOS
 );

70 
	}
}

73 
	$C⁄åﬁRoomW©îLevñ
()

76 
Room
.
Levñ
 = 
	`GëT™kLevñ
–
LEVEL_ID_ROOM
 );

79 if–
	`IsDëe˘T™kLevñ
–
LEVEL_ID_ROOM
, 
LEVEL_DETECT_HIGH
 ) =
TRUE


80 || 
	`IsDëe˘T™kLevñ
–
LEVEL_ID_ROOM
, 
LEVEL_DETECT_OVF
 ) =
TRUE
 )

82 
	`SëRoomW©îInôFuŒ
–
TRUE
 );

83 
Room
.
FìdTime
 = 
ROOM_FEED_TIME
;

88 if–
	`IsEº‹RoomW©îLevñ
(Ë=
TRUE
 )

90 
	`Clo£NosFìdVÆve
();

95 if–(
Room
.
Levñ
 & 
LEVEL_DETECT_OVF
) == LEVEL_DETECT_OVF )

97 
	`Clo£NosFìdVÆve
();

102 
	`O≥nVÆvePump
–
VALVE_NOS
 );

106 if–(
Room
.
Levñ
 & 
LEVEL_DETECT_HIGH
 ) == LEVEL_DETECT_HIGH )

108 
	`Clo£VÆvePump
–
VALVE_FEED
 );

114 if–
Room
.
InôFuŒ
 =
FALSE
 )

116 
Room
.
FìdTime
 = 0;

119 if–
Room
.
Levñ
 =
LEVEL_LOW
 )

122 
	`O≥nVÆvePump
–
VALVE_FEED
 );

124 if–
Room
.
Levñ
 =
LEVEL_MID


125 && 
Room
.
FìdTime
 == 0 )

128 
	`O≥nVÆvePump
–
VALVE_FEED
 );

134 if–
Room
.
Levñ
 =
LEVEL_LOW


135 || 
Room
.
Levñ
 =
LEVEL_MID
 )

137 if–
Room
.
FìdTime
 != 0 )

139 
Room
.
FìdTime
--;

142 
	}
}

	@D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\room_water.h

1 #i‚de‡
__ROOM_WATER_H__


2 
	#__ROOM_WATER_H__


	)

4 
	~"¥j_ty≥.h
"

5 
	~"Àvñ.h
"

7 
	s_room_w©î_


9 
U8
 
	mInôFuŒ
;

10 
U8
 
	mLevñ
;

12 
U16
 
	mFìdTime
;

13 } 
	tRoomW©î_T
;

15 
InôRoomW©î
();

16 
GëRoomW©îD©a
(
RoomW©î_T
 *
pD©a
);

18 
SëRoomW©îLevñ
(
U8
 
mu8VÆ
 );

19 
U8
 
GëRoomW©îLevñ
();

22 
SëRoomW©îInôFuŒ
(
U8
 
mu8VÆ
 );

29 
U8
 
GëRoomW©îInôFuŒ
();

32 
SëRoomW©îFìdTime
(
U16
 
mu16Time
 );

33 
U16
 
GëRoomW©îFìdTime
();

35 
C⁄åﬁRoomW©îLevñ
();

	@config.h

1 #i‚de‡
__CONFIG_H__


2 
	#__CONFIG_H__


	)

9 
	#CONFIG_TEST
 0

10 
	#CONFIG_MMI
 0

11 
	#CONFIG_TEST_LED
 0

12 
	#CONFIG_TEST_SAVING
 0

13 
	#CONFIG_TEST_TEMP_READ
 0

14 
	#CONFIG_TEST_COLD_SENSOR
 0

15 

	)

17 
	#CONFIG_ERR_ALL
 1

	)

18 
	#DEBUG_COMM
 1

	)

19 
	#VERSION
 1

	)

	@prj_type.h

1 #i‚de‡
__PRJ_TYPE_H__


2 
	#__PRJ_TYPE_H__


	)

4 
	~"c⁄fig.h
"

5 
	~<°dio.h
>

6 
	~<°rög.h
>

9 
	tU8
;

10 sig√d 
	tI8
;

11 
	tU16
;

12 sig√d 
	tI16
;

13 
	tU32
;

14 sig√d 
	tI32
;

15 
	tF32
;

16 
	tBOOL_T
;

17 
	tTIME_T
;

19 
	tTEMP_T
;

22 
	#__DEBUG__
 1

	)

24 #i‡
__DEBUG__


25 
	#LOCAL


	)

27 
	#LOCAL
 

	)

30 #ifde‡
NULL


31 #unde‡
NULL


34 
	#NULL
 ((*)0)

	)

36 #ifde‡
TRUE


37 #unde‡
TRUE


40 
	#TRUE
 1

	)

42 #ifde‡
FALSE


43 #unde‡
FALSE


46 
	#FALSE
 0

	)

49 #ifde‡
ON


50 #unde‡
ON


53 
	#ON
 1

	)

55 #ifde‡
OFF


56 #unde‡
OFF


59 
	#OFF
 0

	)

61 
	#HIGH
 1

	)

62 
	#LOW
 0

	)

	@process_sys_event.h

1 #i‚de‡
__PROCESS_SYS_EVENT_H__


2 
	#__PROCESS_SYS_EVENT_H__


	)

4 
InôSy°em
();

6 
Pro˚ssEvítH™dÀr
();

	@util.h

1 #i‚de‡
__UTIL_H__


2 
	#__UTIL_H__


	)

4 
	~"¥j_ty≥.h
"

6 
	#GET_HIGH_BYTE
(
vÆ
Ë(
U8
)(((vÆ)&0xFF00Ë>> 8)

	)

7 
	#GET_LOW_BYTE
(
vÆ
Ë(
U8
)((vÆ)&0x00FF)

	)

8 
	#GET_UINT_WORD
(
lb
, 
hb
Ë((((
U16
)hb)<<8)|lb)

	)

10 
	#GET_32_BYTE_8
(
vÆ
Ë(
U8
)(((vÆ)&0x000000FF))

	)

11 
	#GET_32_BYTE_16
(
vÆ
Ë(
U8
)(((vÆ)&0x0000FF00)>>8)

	)

12 
	#GET_32_BYTE_24
(
vÆ
Ë(
U8
)(((vÆ)&0x00FF0000)>>16)

	)

13 
	#GET_32_BYTE_32
(
vÆ
Ë(
U8
)(((vÆ)&0xFF000000)>>24)

	)

14 
	#GET_UINT_WORD_32
(
b32
, 
b24
, 
b16
, 
b8
) \

16 –((
U32
)
b32
)<<24 ) |\

17 –((
U32
)
b24
)<<16 ) |\

18 –((
U32
)
b16
)<<8 ) |\

19 –(
U32
)
b8
) \

20 )

	)

22 
	#SET_BIT_BYTE
(
vÆ
,
bô
Ëdo{ vÆ |(
U8
)(bô); }0)

	)

23 
	#CLEAR_BIT_BYTE
(
vÆ
,
bô
Ëdo{ vÆ &(
U8
)(~bô); }0)

	)

25 
	#SET_BIT_WORD
(
vÆ
,
bô
Ëdo{ vÆ |(
U16
)(bô); }0)

	)

26 
	#CLEAR_BIT_WORD
(
vÆ
,
bô
Ëdo{ vÆ &(
U16
)(~bô); }0)

	)

28 
	#DOWN_COUNT
(
vÆ
) \

30 if–
vÆ
 != 0 ) { val--; } \

31 }0)

	)

33 
	#DOWN_COUNT_RELOAD
(
vÆ
,
ªlﬂd
) \

35 if–
vÆ
 != 0 ){ val--;}\

36 { 
vÆ
=
ªlﬂd
;} \

37 }0)

	)

39 
I16
 
GëMö
–I16 
x
, I16 );

40 
I16
 
GëMax
–I16 
x
, I16 
y
 );

42 
U8
 
Hex2Dec
(U8 
mu8Hex
);

43 
U8
 
Dec2Hex
(U8 
mu8Dec
);

45 
U8
 
C⁄vAsc2Byã
(U8 
mu8Uµî
, U8 
mu8Lowî
 );

46 
U16
 
ByãOrdîC⁄v
–U16 
_§c
 );

48 
Dñay_US
–
U8
 
us
 );

49 
Dñay_MS
–
U16
 
ms
 );

51 
Re£t
();

56 
U8
 
CheckLimôVÆue
(U8 
mu8VÆ
, U8 
mu8Mö
, U8 
mu8Max
, U8 
mu8Inô
);

	@
1
.
0
127
8440
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\api\api_adc.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\api\api_adc.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\auto_flushing\auto_flushing.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\auto_flushing\auto_flushing.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\comm.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\comm.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\crc16.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\crc16.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser_debug.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser_debug.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser_eol.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\comm\parser_eol.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\config.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display_eol.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display_eol.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display_error.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\display_error.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\process_display.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\display\process_display.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eeprom\eeprom.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eeprom\eeprom.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\eol.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\eol.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\key_eol_handler.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\key_eol_handler.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\process_eol.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\eol\process_eol.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_room_level.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_room_level.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp_cold_water.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp_cold_water.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp_hot_water.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\err_temp_hot_water.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\error.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\error.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\process_error.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\error\process_error.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\fct.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\fct.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\key_fct_handler.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\key_fct_handler.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\process_fct.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\fct\process_fct.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_adc.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_adc.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_eeprom.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_eeprom.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_i2c.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_i2c.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_key.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_key.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_led.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_led.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_level.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_level.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_relay.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_relay.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_serial.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_serial.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_valve.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hal_valve.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\hw.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\hal\mcu.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\comp.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\comp.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\feed_pump.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\feed_pump.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\heater.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\heater.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\process_make.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\process_make.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\pump.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\pump.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\relay.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\relay.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\valve.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\io\valve.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key_common_handler.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key_handler.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\key_handler.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\process_key.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\key\process_key.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\main.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\prj_type.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\process_sys_event.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\process_sys_event.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\level.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\level.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\level_electrode.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\level_electrode.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\temp.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\temp.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\temp_table.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sensor\temp_table.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sound\buzzer.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sound\buzzer.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sound\sound.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\sound\sound.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\special_mode\key_special_handler.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\special_mode\key_special_handler.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\special_mode\special_mode.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\special_mode\special_mode.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\time_short\time_short.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\time_short\time_short.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\timer\timer.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\timer\timer.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\timer\timer_id.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\util.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\util.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\cold_water.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\cold_water.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\hot_water.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\hot_water.h
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\room_water.c
D:\Work\project_svn\2024\TECH_HARRY\Program\Source\water\room_water.h
config.h
prj_type.h
process_sys_event.h
util.h
